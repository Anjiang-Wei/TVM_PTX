
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[24];
  __shared__ float PaddedInput_shared[2400];
  __shared__ float placeholder_shared[1024];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 26; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)threadIdx.x) / 80) * 12480) + ((((int)blockIdx.x) >> 1) * 2080)) + (((((int)threadIdx.x) % 80) >> 4) * 416)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 400))] = placeholder[((((((((((int)threadIdx.x) / 80) * 12480) + ((((int)blockIdx.x) >> 1) * 2080)) + (((((int)threadIdx.x) % 80) >> 4) * 416)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 62400))];
    PaddedInput_shared[((((int)threadIdx.x) + 800))] = placeholder[((((((((((int)threadIdx.x) / 80) * 12480) + ((((int)blockIdx.x) >> 1) * 2080)) + (((((int)threadIdx.x) % 80) >> 4) * 416)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 124800))];
    PaddedInput_shared[((((int)threadIdx.x) + 1200))] = placeholder[((((((((((int)threadIdx.x) / 80) * 12480) + ((((int)blockIdx.x) >> 1) * 2080)) + (((((int)threadIdx.x) % 80) >> 4) * 416)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 187200))];
    PaddedInput_shared[((((int)threadIdx.x) + 1600))] = placeholder[((((((((((int)threadIdx.x) / 80) * 12480) + ((((int)blockIdx.x) >> 1) * 2080)) + (((((int)threadIdx.x) % 80) >> 4) * 416)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 249600))];
    PaddedInput_shared[((((int)threadIdx.x) + 2000))] = placeholder[((((((((((int)threadIdx.x) / 80) * 12480) + ((((int)blockIdx.x) >> 1) * 2080)) + (((((int)threadIdx.x) % 80) >> 4) * 416)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 312000))];
    placeholder_shared[((((int)threadIdx.x) * 2))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)threadIdx.x) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2)))];
    placeholder_shared[(((((int)threadIdx.x) * 2) + 1))] = placeholder1[(((((rc_outer_outer * 2048) + ((((((int)threadIdx.x) * 2) + 1) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((((int)threadIdx.x) * 2) + 1) & 63)))];
    if (((int)threadIdx.x) < 112) {
      placeholder_shared[(((((int)threadIdx.x) * 2) + 800))] = placeholder1[(((((rc_outer_outer * 2048) + ((((((int)threadIdx.x) * 2) + 800) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((((int)threadIdx.x) * 2) + 32) & 63)))];
    }
    if (((int)threadIdx.x) < 112) {
      placeholder_shared[(((((int)threadIdx.x) * 2) + 801))] = placeholder1[(((((rc_outer_outer * 2048) + ((((((int)threadIdx.x) * 2) + 801) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((((int)threadIdx.x) * 2) + 33) & 63)))];
    }
    __syncthreads();
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)))] * placeholder_shared[((((int)threadIdx.x) & 15))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 16))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 32))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 48))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1200))] * placeholder_shared[((((int)threadIdx.x) & 15))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1200))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 16))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1200))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 32))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1200))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 48))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 80))] * placeholder_shared[((((int)threadIdx.x) & 15))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 80))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 16))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 80))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 32))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 80))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 48))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1280))] * placeholder_shared[((((int)threadIdx.x) & 15))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1280))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 16))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1280))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 32))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1280))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 48))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 160))] * placeholder_shared[((((int)threadIdx.x) & 15))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 160))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 16))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 160))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 32))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 160))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 48))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1360))] * placeholder_shared[((((int)threadIdx.x) & 15))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1360))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 16))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1360))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 32))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1360))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 48))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 64))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 80))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 96))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 112))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1201))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 64))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1201))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 80))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1201))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 96))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1201))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 112))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 81))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 64))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 81))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 80))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 81))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 96))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 81))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 112))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1281))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 64))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1281))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 80))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1281))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 96))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1281))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 112))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 161))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 64))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 161))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 80))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 161))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 96))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 161))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 112))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1361))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 64))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1361))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 80))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1361))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 96))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1361))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 112))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 128))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 144))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 160))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 176))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1202))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 128))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1202))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 144))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1202))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 160))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1202))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 176))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 82))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 128))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 82))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 144))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 82))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 160))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 82))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 176))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1282))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 128))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1282))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 144))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1282))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 160))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1282))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 176))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 162))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 128))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 162))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 144))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 162))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 160))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 162))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 176))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1362))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 128))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1362))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 144))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1362))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 160))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1362))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 176))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 192))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 208))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 224))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 240))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1203))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 192))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1203))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 208))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1203))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 224))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1203))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 240))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 83))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 192))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 83))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 208))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 83))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 224))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 83))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 240))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1283))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 192))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1283))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 208))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1283))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 224))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1283))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 240))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 163))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 192))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 163))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 208))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 163))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 224))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 163))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 240))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1363))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 192))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1363))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 208))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1363))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 224))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1363))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 240))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 256))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 272))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 288))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 304))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1204))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 256))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1204))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 272))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1204))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 288))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1204))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 304))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 84))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 256))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 84))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 272))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 84))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 288))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 84))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 304))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1284))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 256))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1284))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 272))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1284))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 288))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1284))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 304))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 164))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 256))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 164))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 272))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 164))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 288))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 164))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 304))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1364))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 256))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1364))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 272))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1364))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 288))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1364))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 304))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 320))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 336))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 352))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 368))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1205))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 320))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1205))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 336))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1205))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 352))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1205))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 368))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 85))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 320))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 85))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 336))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 85))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 352))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 85))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 368))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1285))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 320))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1285))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 336))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1285))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 352))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1285))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 368))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 165))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 320))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 165))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 336))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 165))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 352))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 165))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 368))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1365))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 320))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1365))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 336))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1365))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 352))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1365))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 368))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 384))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 400))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 416))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 432))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1206))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 384))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1206))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 400))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1206))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 416))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1206))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 432))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 86))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 384))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 86))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 400))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 86))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 416))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 86))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 432))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1286))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 384))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1286))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 400))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1286))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 416))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1286))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 432))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 166))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 384))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 166))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 400))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 166))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 416))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 166))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 432))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1366))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 384))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1366))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 400))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1366))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 416))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1366))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 432))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 448))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 464))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 480))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 496))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1207))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 448))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1207))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 464))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1207))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 480))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1207))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 496))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 87))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 448))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 87))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 464))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 87))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 480))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 87))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 496))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1287))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 448))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1287))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 464))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1287))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 480))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1287))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 496))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 167))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 448))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 167))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 464))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 167))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 480))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 167))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 496))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1367))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 448))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1367))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 464))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1367))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 480))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1367))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 496))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 512))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 528))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 544))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 560))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1208))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 512))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1208))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 528))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1208))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 544))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1208))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 560))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 88))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 512))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 88))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 528))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 88))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 544))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 88))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 560))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1288))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 512))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1288))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 528))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1288))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 544))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1288))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 560))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 168))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 512))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 168))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 528))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 168))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 544))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 168))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 560))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1368))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 512))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1368))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 528))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1368))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 544))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1368))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 560))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 576))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 592))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 608))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 624))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1209))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 576))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1209))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 592))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1209))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 608))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1209))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 624))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 89))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 576))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 89))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 592))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 89))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 608))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 89))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 624))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1289))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 576))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1289))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 592))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1289))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 608))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1289))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 624))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 169))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 576))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 169))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 592))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 169))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 608))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 169))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 624))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1369))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 576))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1369))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 592))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1369))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 608))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1369))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 624))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 640))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 656))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 672))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 688))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1210))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 640))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1210))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 656))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1210))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 672))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1210))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 688))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 90))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 640))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 90))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 656))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 90))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 672))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 90))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 688))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1290))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 640))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1290))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 656))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1290))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 672))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1290))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 688))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 170))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 640))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 170))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 656))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 170))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 672))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 170))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 688))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1370))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 640))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1370))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 656))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1370))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 672))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1370))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 688))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 704))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 720))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 736))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 752))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1211))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 704))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1211))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 720))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1211))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 736))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1211))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 752))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 91))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 704))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 91))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 720))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 91))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 736))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 91))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 752))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1291))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 704))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1291))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 720))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1291))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 736))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1291))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 752))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 171))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 704))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 171))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 720))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 171))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 736))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 171))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 752))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1371))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 704))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1371))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 720))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1371))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 736))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1371))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 752))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 768))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 784))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 800))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 816))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1212))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 768))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1212))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 784))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1212))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 800))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1212))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 816))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 92))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 768))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 92))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 784))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 92))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 800))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 92))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 816))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1292))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 768))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1292))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 784))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1292))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 800))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1292))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 816))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 172))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 768))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 172))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 784))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 172))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 800))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 172))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 816))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1372))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 768))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1372))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 784))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1372))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 800))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1372))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 816))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 832))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 848))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 864))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 880))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1213))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 832))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1213))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 848))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1213))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 864))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1213))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 880))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 93))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 832))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 93))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 848))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 93))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 864))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 93))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 880))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1293))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 832))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1293))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 848))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1293))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 864))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1293))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 880))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 173))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 832))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 173))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 848))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 173))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 864))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 173))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 880))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1373))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 832))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1373))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 848))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1373))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 864))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1373))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 880))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 896))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 912))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 928))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 944))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1214))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 896))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1214))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 912))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1214))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 928))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1214))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 944))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 94))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 896))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 94))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 912))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 94))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 928))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 94))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 944))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1294))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 896))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1294))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 912))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1294))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 928))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1294))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 944))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 174))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 896))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 174))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 912))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 174))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 928))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 174))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 944))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1374))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 896))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1374))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 912))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1374))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 928))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1374))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 944))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 960))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 976))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 992))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 1008))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1215))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 960))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1215))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 976))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1215))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 992))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1215))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 1008))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 95))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 960))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 95))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 976))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 95))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 992))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 95))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 1008))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1295))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 960))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1295))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 976))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1295))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 992))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1295))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 1008))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 175))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 960))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 175))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 976))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 175))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 992))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 175))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 1008))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1375))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 960))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1375))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 976))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1375))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 992))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 80) * 240) + (((((int)threadIdx.x) % 80) >> 4) * 16)) + 1375))] * placeholder_shared[(((((int)threadIdx.x) & 15) + 1008))]));
  }
  for (int ax1_inner = 0; ax1_inner < 3; ++ax1_inner) {
    T_relu[((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)))] = max((Conv2dOutput[(ax1_inner)] + placeholder2[((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 16))] = max((Conv2dOutput[((ax1_inner + 3))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)) + 16))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 32))] = max((Conv2dOutput[((ax1_inner + 6))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)) + 32))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 48))] = max((Conv2dOutput[((ax1_inner + 9))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)) + 48))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 57600))] = max((Conv2dOutput[((ax1_inner + 12))] + placeholder2[((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 57616))] = max((Conv2dOutput[((ax1_inner + 15))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)) + 16))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 57632))] = max((Conv2dOutput[((ax1_inner + 18))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)) + 32))]), 0.000000e+00f);
    T_relu[(((((((((((int)threadIdx.x) / 80) * 11520) + (ax1_inner * 3840)) + ((((int)blockIdx.x) >> 1) * 640)) + (((((int)threadIdx.x) % 80) >> 4) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) & 15)) + 57648))] = max((Conv2dOutput[((ax1_inner + 21))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + (((int)threadIdx.x) & 15)) + 48))]), 0.000000e+00f);
  }
}


