
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[768];
  __shared__ float PaddedInput_shared[2304];
  __shared__ float placeholder_shared[768];
  for (int nn_outer_inner_init = 0; nn_outer_inner_init < 2; ++nn_outer_inner_init) {
    Conv2dOutput[((nn_outer_inner_init * 64))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 128))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 256))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 384))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 512))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 640))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 32))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 160))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 288))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 416))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 544))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 672))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 1))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 129))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 257))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 385))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 513))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 641))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 33))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 161))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 289))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 417))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 545))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 673))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 2))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 130))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 258))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 386))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 514))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 642))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 34))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 162))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 290))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 418))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 546))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 674))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 3))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 131))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 259))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 387))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 515))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 643))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 35))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 163))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 291))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 419))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 547))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 675))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 4))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 132))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 260))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 388))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 516))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 644))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 36))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 164))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 292))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 420))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 548))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 676))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 5))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 133))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 261))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 389))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 517))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 645))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 37))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 165))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 293))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 421))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 549))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 677))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 6))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 134))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 262))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 390))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 518))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 646))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 38))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 166))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 294))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 422))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 550))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 678))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 7))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 135))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 263))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 391))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 519))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 647))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 39))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 167))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 295))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 423))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 551))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 679))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 8))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 136))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 264))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 392))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 520))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 648))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 40))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 168))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 296))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 424))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 552))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 680))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 9))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 137))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 265))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 393))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 521))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 649))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 41))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 169))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 297))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 425))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 553))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 681))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 10))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 138))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 266))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 394))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 522))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 650))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 42))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 170))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 298))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 426))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 554))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 682))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 11))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 139))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 267))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 395))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 523))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 651))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 43))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 171))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 299))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 427))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 555))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 683))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 12))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 140))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 268))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 396))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 524))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 652))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 44))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 172))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 300))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 428))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 556))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 684))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 13))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 141))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 269))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 397))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 525))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 653))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 45))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 173))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 301))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 429))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 557))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 685))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 14))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 142))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 270))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 398))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 526))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 654))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 46))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 174))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 302))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 430))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 558))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 686))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 15))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 143))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 271))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 399))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 527))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 655))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 47))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 175))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 303))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 431))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 559))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 687))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 16))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 144))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 272))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 400))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 528))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 656))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 48))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 176))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 304))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 432))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 560))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 688))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 17))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 145))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 273))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 401))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 529))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 657))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 49))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 177))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 305))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 433))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 561))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 689))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 18))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 146))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 274))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 402))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 530))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 658))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 50))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 178))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 306))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 434))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 562))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 690))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 19))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 147))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 275))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 403))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 531))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 659))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 51))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 179))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 307))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 435))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 563))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 691))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 20))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 148))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 276))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 404))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 532))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 660))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 52))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 180))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 308))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 436))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 564))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 692))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 21))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 149))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 277))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 405))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 533))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 661))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 53))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 181))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 309))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 437))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 565))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 693))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 22))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 150))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 278))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 406))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 534))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 662))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 54))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 182))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 310))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 438))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 566))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 694))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 23))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 151))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 279))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 407))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 535))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 663))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 55))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 183))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 311))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 439))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 567))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 695))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 24))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 152))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 280))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 408))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 536))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 664))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 56))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 184))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 312))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 440))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 568))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 696))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 25))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 153))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 281))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 409))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 537))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 665))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 57))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 185))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 313))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 441))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 569))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 697))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 26))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 154))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 282))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 410))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 538))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 666))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 58))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 186))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 314))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 442))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 570))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 698))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 27))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 155))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 283))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 411))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 539))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 667))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 59))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 187))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 315))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 443))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 571))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 699))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 28))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 156))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 284))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 412))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 540))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 668))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 60))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 188))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 316))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 444))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 572))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 700))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 29))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 157))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 285))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 413))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 541))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 669))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 61))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 189))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 317))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 445))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 573))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 701))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 30))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 158))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 286))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 414))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 542))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 670))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 62))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 190))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 318))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 446))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 574))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 702))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 31))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 159))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 287))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 415))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 543))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 671))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 63))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 191))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 319))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 447))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 575))] = 0.000000e+00f;
    Conv2dOutput[(((nn_outer_inner_init * 64) + 703))] = 0.000000e+00f;
  }
  for (int rc_outer_outer = 0; rc_outer_outer < 4; ++rc_outer_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer < 576; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer) {
      PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((int)threadIdx.x)))] = placeholder[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((int)threadIdx.x)) / 1152) * 345600) + ((((int)blockIdx.x) / 60) * 69120)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((int)threadIdx.x)) % 1152) / 96) * 5760)) + (((((int)blockIdx.x) % 60) >> 2) * 384)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((int)threadIdx.x)) % 96) / 24) * 96)) + (rc_outer_outer * 24)) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((int)threadIdx.x)) % 24)))];
    }
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)))];
    placeholder_shared[((((int)threadIdx.x) + 4))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 4))];
    placeholder_shared[((((int)threadIdx.x) + 8))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 8))];
    placeholder_shared[((((int)threadIdx.x) + 12))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 12))];
    placeholder_shared[((((int)threadIdx.x) + 16))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 16))];
    placeholder_shared[((((int)threadIdx.x) + 20))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 20))];
    placeholder_shared[((((int)threadIdx.x) + 24))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 24))];
    placeholder_shared[((((int)threadIdx.x) + 28))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 28))];
    placeholder_shared[((((int)threadIdx.x) + 32))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 128))];
    placeholder_shared[((((int)threadIdx.x) + 36))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 36) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 40))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 40) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 44))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 44) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 48))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 48) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 52))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 52) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 56))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 56) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 60))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 60) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 64))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 256))];
    placeholder_shared[((((int)threadIdx.x) + 68))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 68) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 72))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 72) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 76))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 76) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 80))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 80) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 84))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 84) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 88))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 88) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 92))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 92) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 96))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 384))];
    placeholder_shared[((((int)threadIdx.x) + 100))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 100) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 104))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 104) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 108))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 108) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 112))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 112) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 116))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 116) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 120))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 120) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 124))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 124) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 128))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 512))];
    placeholder_shared[((((int)threadIdx.x) + 132))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 132) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 136))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 136) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 140))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 140) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 144))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 144) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 148))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 148) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 152))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 152) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 156))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 156) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 160))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 640))];
    placeholder_shared[((((int)threadIdx.x) + 164))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 164) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 168))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 168) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 172))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 172) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 176))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 176) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 180))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 180) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 184))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 184) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 188))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 188) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 192))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 768))];
    placeholder_shared[((((int)threadIdx.x) + 196))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 196) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 200))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 200) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 204))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 204) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 208))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 208) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 212))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 212) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 216))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 216) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 220))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 220) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 224))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 896))];
    placeholder_shared[((((int)threadIdx.x) + 228))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 228) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 232))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 232) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 236))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 236) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 240))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 240) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 244))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 244) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 248))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 248) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 252))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 252) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 256))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1024))];
    placeholder_shared[((((int)threadIdx.x) + 260))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 260) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 264))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 264) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 268))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 268) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 272))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 272) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 276))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 276) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 280))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 280) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 284))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 284) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 288))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1152))];
    placeholder_shared[((((int)threadIdx.x) + 292))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 292) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 296))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 296) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 300))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 300) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 304))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 304) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 308))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 308) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 312))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 312) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 316))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 316) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 320))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1280))];
    placeholder_shared[((((int)threadIdx.x) + 324))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 324) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 328))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 328) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 332))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 332) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 336))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 336) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 340))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 340) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 344))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 344) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 348))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 348) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 352))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1408))];
    placeholder_shared[((((int)threadIdx.x) + 356))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 356) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 360))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 360) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 364))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 364) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 368))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 368) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 372))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 372) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 376))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 376) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 380))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 380) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 384))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1536))];
    placeholder_shared[((((int)threadIdx.x) + 388))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 388) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 392))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 392) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 396))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 396) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 400))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 400) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 404))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 404) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 408))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 408) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 412))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 412) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 416))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1664))];
    placeholder_shared[((((int)threadIdx.x) + 420))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 420) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 424))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 424) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 428))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 428) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 432))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 432) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 436))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 436) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 440))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 440) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 444))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 444) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 448))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1792))];
    placeholder_shared[((((int)threadIdx.x) + 452))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 452) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 456))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 456) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 460))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 460) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 464))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 464) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 468))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 468) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 472))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 472) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 476))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 476) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 480))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 1920))];
    placeholder_shared[((((int)threadIdx.x) + 484))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 484) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 488))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 488) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 492))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 492) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 496))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 496) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 500))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 500) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 504))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 504) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 508))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 508) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 512))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2048))];
    placeholder_shared[((((int)threadIdx.x) + 516))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 516) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 520))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 520) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 524))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 524) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 528))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 528) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 532))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 532) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 536))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 536) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 540))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 540) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 544))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2176))];
    placeholder_shared[((((int)threadIdx.x) + 548))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 548) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 552))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 552) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 556))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 556) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 560))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 560) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 564))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 564) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 568))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 568) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 572))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 572) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 576))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2304))];
    placeholder_shared[((((int)threadIdx.x) + 580))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 580) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 584))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 584) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 588))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 588) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 592))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 592) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 596))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 596) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 600))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 600) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 604))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 604) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 608))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2432))];
    placeholder_shared[((((int)threadIdx.x) + 612))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 612) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 616))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 616) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 620))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 620) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 624))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 624) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 628))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 628) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 632))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 632) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 636))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 636) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 640))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2560))];
    placeholder_shared[((((int)threadIdx.x) + 644))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 644) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 648))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 648) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 652))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 652) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 656))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 656) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 660))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 660) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 664))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 664) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 668))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 668) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 672))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2688))];
    placeholder_shared[((((int)threadIdx.x) + 676))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 676) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 680))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 680) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 684))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 684) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 688))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 688) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 692))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 692) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 696))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 696) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 700))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 700) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 704))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2816))];
    placeholder_shared[((((int)threadIdx.x) + 708))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 708) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 712))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 712) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 716))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 716) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 720))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 720) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 724))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 724) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 728))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 728) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 732))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 732) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    placeholder_shared[((((int)threadIdx.x) + 736))] = placeholder1[(((((rc_outer_outer * 3072) + ((((int)blockIdx.x) & 3) * 32)) + ((int)threadIdx.x)) + 2944))];
    placeholder_shared[((((int)threadIdx.x) + 740))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 740) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 4)))];
    placeholder_shared[((((int)threadIdx.x) + 744))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 744) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[((((int)threadIdx.x) + 748))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 748) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 12)))];
    placeholder_shared[((((int)threadIdx.x) + 752))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 752) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 756))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 756) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 20)))];
    placeholder_shared[((((int)threadIdx.x) + 760))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 760) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[((((int)threadIdx.x) + 764))] = placeholder1[(((((rc_outer_outer * 3072) + (((((int)threadIdx.x) + 764) >> 5) * 128)) + ((((int)blockIdx.x) & 3) * 32)) + (((int)threadIdx.x) + 28)))];
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 12; ++rc_outer_inner) {
      for (int nn_outer_inner = 0; nn_outer_inner < 2; ++nn_outer_inner) {
        for (int ff_outer_inner = 0; ff_outer_inner < 32; ++ff_outer_inner) {
          Conv2dOutput[(((nn_outer_inner * 64) + ff_outer_inner))] = (Conv2dOutput[(((nn_outer_inner * 64) + ff_outer_inner))] + (PaddedInput_shared[((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 128))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 128))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 48))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 256))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 384))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 384))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 384))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 432))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 512))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 512))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 768))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 640))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 640))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 816))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 32))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 32))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 24))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 160))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 160))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 72))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 288))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 288))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 408))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 416))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 416))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 456))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 544))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 544))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 792))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 672))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 672))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 840))] * placeholder_shared[(((rc_outer_inner * 64) + ff_outer_inner))]));
          Conv2dOutput[(((nn_outer_inner * 64) + ff_outer_inner))] = (Conv2dOutput[(((nn_outer_inner * 64) + ff_outer_inner))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 1))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 128))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 128))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 49))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 256))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 385))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 384))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 384))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 433))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 512))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 512))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 769))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 640))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 640))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 817))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 32))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 32))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 25))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 160))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 160))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 73))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 288))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 288))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 409))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 416))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 416))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 457))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 544))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 544))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 793))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
          Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 672))] = (Conv2dOutput[((((nn_outer_inner * 64) + ff_outer_inner) + 672))] + (PaddedInput_shared[(((((nn_outer_inner * 1152) + (((int)threadIdx.x) * 96)) + (rc_outer_inner * 2)) + 841))] * placeholder_shared[((((rc_outer_inner * 64) + ff_outer_inner) + 32))]));
        }
      }
    }
  }
  for (int ax0_inner = 0; ax0_inner < 2; ++ax0_inner) {
    for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
      for (int ax3_inner = 0; ax3_inner < 32; ++ax3_inner) {
        T_relu[((((((((ax0_inner * 460800) + ((((int)blockIdx.x) / 60) * 92160)) + (((int)threadIdx.x) * 7680)) + (((((int)blockIdx.x) % 60) >> 2) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 3) * 32)) + ax3_inner))] = max((Conv2dOutput[((((ax0_inner * 64) + (ax2_inner * 32)) + ax3_inner))] + placeholder2[((((((int)blockIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
        T_relu[(((((((((ax0_inner * 460800) + ((((int)blockIdx.x) / 60) * 92160)) + (((int)threadIdx.x) * 7680)) + (((((int)blockIdx.x) % 60) >> 2) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 3) * 32)) + ax3_inner) + 256))] = max((Conv2dOutput[(((((ax0_inner * 64) + (ax2_inner * 32)) + ax3_inner) + 128))] + placeholder2[((((((int)blockIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
        T_relu[(((((((((ax0_inner * 460800) + ((((int)blockIdx.x) / 60) * 92160)) + (((int)threadIdx.x) * 7680)) + (((((int)blockIdx.x) % 60) >> 2) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 3) * 32)) + ax3_inner) + 30720))] = max((Conv2dOutput[(((((ax0_inner * 64) + (ax2_inner * 32)) + ax3_inner) + 256))] + placeholder2[((((((int)blockIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
        T_relu[(((((((((ax0_inner * 460800) + ((((int)blockIdx.x) / 60) * 92160)) + (((int)threadIdx.x) * 7680)) + (((((int)blockIdx.x) % 60) >> 2) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 3) * 32)) + ax3_inner) + 30976))] = max((Conv2dOutput[(((((ax0_inner * 64) + (ax2_inner * 32)) + ax3_inner) + 384))] + placeholder2[((((((int)blockIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
        T_relu[(((((((((ax0_inner * 460800) + ((((int)blockIdx.x) / 60) * 92160)) + (((int)threadIdx.x) * 7680)) + (((((int)blockIdx.x) % 60) >> 2) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 3) * 32)) + ax3_inner) + 61440))] = max((Conv2dOutput[(((((ax0_inner * 64) + (ax2_inner * 32)) + ax3_inner) + 512))] + placeholder2[((((((int)blockIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
        T_relu[(((((((((ax0_inner * 460800) + ((((int)blockIdx.x) / 60) * 92160)) + (((int)threadIdx.x) * 7680)) + (((((int)blockIdx.x) % 60) >> 2) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 3) * 32)) + ax3_inner) + 61696))] = max((Conv2dOutput[(((((ax0_inner * 64) + (ax2_inner * 32)) + ax3_inner) + 640))] + placeholder2[((((((int)blockIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
      }
    }
  }
}


