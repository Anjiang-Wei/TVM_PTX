
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[192];
  __shared__ float PaddedInput_shared[5120];
  __shared__ float placeholder_shared[240];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(64)] = 0.000000e+00f;
  Conv2dOutput[(96)] = 0.000000e+00f;
  Conv2dOutput[(128)] = 0.000000e+00f;
  Conv2dOutput[(160)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(65)] = 0.000000e+00f;
  Conv2dOutput[(97)] = 0.000000e+00f;
  Conv2dOutput[(129)] = 0.000000e+00f;
  Conv2dOutput[(161)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(66)] = 0.000000e+00f;
  Conv2dOutput[(98)] = 0.000000e+00f;
  Conv2dOutput[(130)] = 0.000000e+00f;
  Conv2dOutput[(162)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(67)] = 0.000000e+00f;
  Conv2dOutput[(99)] = 0.000000e+00f;
  Conv2dOutput[(131)] = 0.000000e+00f;
  Conv2dOutput[(163)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(68)] = 0.000000e+00f;
  Conv2dOutput[(100)] = 0.000000e+00f;
  Conv2dOutput[(132)] = 0.000000e+00f;
  Conv2dOutput[(164)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(69)] = 0.000000e+00f;
  Conv2dOutput[(101)] = 0.000000e+00f;
  Conv2dOutput[(133)] = 0.000000e+00f;
  Conv2dOutput[(165)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(70)] = 0.000000e+00f;
  Conv2dOutput[(102)] = 0.000000e+00f;
  Conv2dOutput[(134)] = 0.000000e+00f;
  Conv2dOutput[(166)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(71)] = 0.000000e+00f;
  Conv2dOutput[(103)] = 0.000000e+00f;
  Conv2dOutput[(135)] = 0.000000e+00f;
  Conv2dOutput[(167)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(72)] = 0.000000e+00f;
  Conv2dOutput[(104)] = 0.000000e+00f;
  Conv2dOutput[(136)] = 0.000000e+00f;
  Conv2dOutput[(168)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(73)] = 0.000000e+00f;
  Conv2dOutput[(105)] = 0.000000e+00f;
  Conv2dOutput[(137)] = 0.000000e+00f;
  Conv2dOutput[(169)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(74)] = 0.000000e+00f;
  Conv2dOutput[(106)] = 0.000000e+00f;
  Conv2dOutput[(138)] = 0.000000e+00f;
  Conv2dOutput[(170)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(75)] = 0.000000e+00f;
  Conv2dOutput[(107)] = 0.000000e+00f;
  Conv2dOutput[(139)] = 0.000000e+00f;
  Conv2dOutput[(171)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(76)] = 0.000000e+00f;
  Conv2dOutput[(108)] = 0.000000e+00f;
  Conv2dOutput[(140)] = 0.000000e+00f;
  Conv2dOutput[(172)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(77)] = 0.000000e+00f;
  Conv2dOutput[(109)] = 0.000000e+00f;
  Conv2dOutput[(141)] = 0.000000e+00f;
  Conv2dOutput[(173)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(78)] = 0.000000e+00f;
  Conv2dOutput[(110)] = 0.000000e+00f;
  Conv2dOutput[(142)] = 0.000000e+00f;
  Conv2dOutput[(174)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(79)] = 0.000000e+00f;
  Conv2dOutput[(111)] = 0.000000e+00f;
  Conv2dOutput[(143)] = 0.000000e+00f;
  Conv2dOutput[(175)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(80)] = 0.000000e+00f;
  Conv2dOutput[(112)] = 0.000000e+00f;
  Conv2dOutput[(144)] = 0.000000e+00f;
  Conv2dOutput[(176)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(81)] = 0.000000e+00f;
  Conv2dOutput[(113)] = 0.000000e+00f;
  Conv2dOutput[(145)] = 0.000000e+00f;
  Conv2dOutput[(177)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(82)] = 0.000000e+00f;
  Conv2dOutput[(114)] = 0.000000e+00f;
  Conv2dOutput[(146)] = 0.000000e+00f;
  Conv2dOutput[(178)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(83)] = 0.000000e+00f;
  Conv2dOutput[(115)] = 0.000000e+00f;
  Conv2dOutput[(147)] = 0.000000e+00f;
  Conv2dOutput[(179)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(84)] = 0.000000e+00f;
  Conv2dOutput[(116)] = 0.000000e+00f;
  Conv2dOutput[(148)] = 0.000000e+00f;
  Conv2dOutput[(180)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(85)] = 0.000000e+00f;
  Conv2dOutput[(117)] = 0.000000e+00f;
  Conv2dOutput[(149)] = 0.000000e+00f;
  Conv2dOutput[(181)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(86)] = 0.000000e+00f;
  Conv2dOutput[(118)] = 0.000000e+00f;
  Conv2dOutput[(150)] = 0.000000e+00f;
  Conv2dOutput[(182)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  Conv2dOutput[(87)] = 0.000000e+00f;
  Conv2dOutput[(119)] = 0.000000e+00f;
  Conv2dOutput[(151)] = 0.000000e+00f;
  Conv2dOutput[(183)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(56)] = 0.000000e+00f;
  Conv2dOutput[(88)] = 0.000000e+00f;
  Conv2dOutput[(120)] = 0.000000e+00f;
  Conv2dOutput[(152)] = 0.000000e+00f;
  Conv2dOutput[(184)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(57)] = 0.000000e+00f;
  Conv2dOutput[(89)] = 0.000000e+00f;
  Conv2dOutput[(121)] = 0.000000e+00f;
  Conv2dOutput[(153)] = 0.000000e+00f;
  Conv2dOutput[(185)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(58)] = 0.000000e+00f;
  Conv2dOutput[(90)] = 0.000000e+00f;
  Conv2dOutput[(122)] = 0.000000e+00f;
  Conv2dOutput[(154)] = 0.000000e+00f;
  Conv2dOutput[(186)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(59)] = 0.000000e+00f;
  Conv2dOutput[(91)] = 0.000000e+00f;
  Conv2dOutput[(123)] = 0.000000e+00f;
  Conv2dOutput[(155)] = 0.000000e+00f;
  Conv2dOutput[(187)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(60)] = 0.000000e+00f;
  Conv2dOutput[(92)] = 0.000000e+00f;
  Conv2dOutput[(124)] = 0.000000e+00f;
  Conv2dOutput[(156)] = 0.000000e+00f;
  Conv2dOutput[(188)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(61)] = 0.000000e+00f;
  Conv2dOutput[(93)] = 0.000000e+00f;
  Conv2dOutput[(125)] = 0.000000e+00f;
  Conv2dOutput[(157)] = 0.000000e+00f;
  Conv2dOutput[(189)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(62)] = 0.000000e+00f;
  Conv2dOutput[(94)] = 0.000000e+00f;
  Conv2dOutput[(126)] = 0.000000e+00f;
  Conv2dOutput[(158)] = 0.000000e+00f;
  Conv2dOutput[(190)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(63)] = 0.000000e+00f;
  Conv2dOutput[(95)] = 0.000000e+00f;
  Conv2dOutput[(127)] = 0.000000e+00f;
  Conv2dOutput[(159)] = 0.000000e+00f;
  Conv2dOutput[(191)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 4; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 64))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 128))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 192))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 256))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 320))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 1280))];
    PaddedInput_shared[((((int)threadIdx.x) + 384))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 448))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 512))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 576))] = placeholder[((((((((int)blockIdx.x) / 5) * 2560) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 640))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 40960))];
    PaddedInput_shared[((((int)threadIdx.x) + 704))] = placeholder[((((((((((int)threadIdx.x) + 704) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 768))] = placeholder[((((((((((int)threadIdx.x) + 768) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 832))] = placeholder[((((((((((int)threadIdx.x) + 832) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 896))] = placeholder[((((((((((int)threadIdx.x) + 896) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 960))] = placeholder[((((((((((int)threadIdx.x) + 960) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1024))] = placeholder[((((((((((int)threadIdx.x) + 1024) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1088))] = placeholder[((((((((((int)threadIdx.x) + 1088) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1152))] = placeholder[((((((((((int)threadIdx.x) + 1152) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1216))] = placeholder[((((((((((int)threadIdx.x) + 1216) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1280))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 81920))];
    PaddedInput_shared[((((int)threadIdx.x) + 1344))] = placeholder[((((((((((int)threadIdx.x) + 1344) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1408))] = placeholder[((((((((((int)threadIdx.x) + 1408) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1472))] = placeholder[((((((((((int)threadIdx.x) + 1472) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1536))] = placeholder[((((((((((int)threadIdx.x) + 1536) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1600))] = placeholder[((((((((((int)threadIdx.x) + 1600) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1664))] = placeholder[((((((((((int)threadIdx.x) + 1664) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1728))] = placeholder[((((((((((int)threadIdx.x) + 1728) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1792))] = placeholder[((((((((((int)threadIdx.x) + 1792) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1856))] = placeholder[((((((((((int)threadIdx.x) + 1856) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1920))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 122880))];
    PaddedInput_shared[((((int)threadIdx.x) + 1984))] = placeholder[((((((((((int)threadIdx.x) + 1984) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2048))] = placeholder[((((((((((int)threadIdx.x) + 2048) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2112))] = placeholder[((((((((((int)threadIdx.x) + 2112) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2176))] = placeholder[((((((((((int)threadIdx.x) + 2176) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2240))] = placeholder[((((((((((int)threadIdx.x) + 2240) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2304))] = placeholder[((((((((((int)threadIdx.x) + 2304) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2368))] = placeholder[((((((((((int)threadIdx.x) + 2368) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2432))] = placeholder[((((((((((int)threadIdx.x) + 2432) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2496))] = placeholder[((((((((((int)threadIdx.x) + 2496) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2560))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 163840))];
    PaddedInput_shared[((((int)threadIdx.x) + 2624))] = placeholder[((((((((((int)threadIdx.x) + 2624) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2688))] = placeholder[((((((((((int)threadIdx.x) + 2688) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2752))] = placeholder[((((((((((int)threadIdx.x) + 2752) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2816))] = placeholder[((((((((((int)threadIdx.x) + 2816) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2880))] = placeholder[((((((((((int)threadIdx.x) + 2880) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2944))] = placeholder[((((((((((int)threadIdx.x) + 2944) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3008))] = placeholder[((((((((((int)threadIdx.x) + 3008) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3072))] = placeholder[((((((((((int)threadIdx.x) + 3072) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3136))] = placeholder[((((((((((int)threadIdx.x) + 3136) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3200))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 204800))];
    PaddedInput_shared[((((int)threadIdx.x) + 3264))] = placeholder[((((((((((int)threadIdx.x) + 3264) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3328))] = placeholder[((((((((((int)threadIdx.x) + 3328) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3392))] = placeholder[((((((((((int)threadIdx.x) + 3392) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3456))] = placeholder[((((((((((int)threadIdx.x) + 3456) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3520))] = placeholder[((((((((((int)threadIdx.x) + 3520) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3584))] = placeholder[((((((((((int)threadIdx.x) + 3584) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3648))] = placeholder[((((((((((int)threadIdx.x) + 3648) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3712))] = placeholder[((((((((((int)threadIdx.x) + 3712) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3776))] = placeholder[((((((((((int)threadIdx.x) + 3776) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3840))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 245760))];
    PaddedInput_shared[((((int)threadIdx.x) + 3904))] = placeholder[((((((((((int)threadIdx.x) + 3904) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3968))] = placeholder[((((((((((int)threadIdx.x) + 3968) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4032))] = placeholder[((((((((((int)threadIdx.x) + 4032) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4096))] = placeholder[((((((((((int)threadIdx.x) + 4096) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4160))] = placeholder[((((((((((int)threadIdx.x) + 4160) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4224))] = placeholder[((((((((((int)threadIdx.x) + 4224) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4288))] = placeholder[((((((((((int)threadIdx.x) + 4288) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4352))] = placeholder[((((((((((int)threadIdx.x) + 4352) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4416))] = placeholder[((((((((((int)threadIdx.x) + 4416) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4480))] = placeholder[(((((((((int)blockIdx.x) / 5) * 2560) + ((((int)threadIdx.x) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)) + 286720))];
    PaddedInput_shared[((((int)threadIdx.x) + 4544))] = placeholder[((((((((((int)threadIdx.x) + 4544) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 64) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4608))] = placeholder[((((((((((int)threadIdx.x) + 4608) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 128) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4672))] = placeholder[((((((((((int)threadIdx.x) + 4672) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 192) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4736))] = placeholder[((((((((((int)threadIdx.x) + 4736) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 256) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4800))] = placeholder[((((((((((int)threadIdx.x) + 4800) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 320) / 10) * 40)) + (rc_outer_outer * 10)) + (((int)threadIdx.x) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4864))] = placeholder[((((((((((int)threadIdx.x) + 4864) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 384) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 4) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4928))] = placeholder[((((((((((int)threadIdx.x) + 4928) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 448) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 8) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4992))] = placeholder[((((((((((int)threadIdx.x) + 4992) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 512) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 2) % 10)))];
    PaddedInput_shared[((((int)threadIdx.x) + 5056))] = placeholder[((((((((((int)threadIdx.x) + 5056) / 640) * 40960) + ((((int)blockIdx.x) / 5) * 2560)) + (((((int)threadIdx.x) + 576) / 10) * 40)) + (rc_outer_outer * 10)) + ((((int)threadIdx.x) + 6) % 10)))];
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[((((int)threadIdx.x) * 10))] = placeholder1[(((((rc_outer_outer * 1200) + (((((int)threadIdx.x) * 10) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) * 10) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 1))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 1) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 1) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 2))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 2) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 2) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 3))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 3) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 3) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 4))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 4) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 4) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 5))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 5) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 5) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 6))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 6) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 6) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 7))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 7) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 7) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 8))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 8) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 8) % 24)))];
    }
    if (((int)threadIdx.x) < 24) {
      placeholder_shared[(((((int)threadIdx.x) * 10) + 9))] = placeholder1[(((((rc_outer_outer * 1200) + ((((((int)threadIdx.x) * 10) + 9) / 24) * 120)) + ((((int)blockIdx.x) % 5) * 24)) + (((((int)threadIdx.x) * 10) + 9) % 24)))];
    }
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 10; ++rc_outer_inner) {
      Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(128)] = (Conv2dOutput[(128)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(160)] = (Conv2dOutput[(160)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(129)] = (Conv2dOutput[(129)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(161)] = (Conv2dOutput[(161)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(130)] = (Conv2dOutput[(130)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(162)] = (Conv2dOutput[(162)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(131)] = (Conv2dOutput[(131)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(163)] = (Conv2dOutput[(163)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 160))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(132)] = (Conv2dOutput[(132)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(164)] = (Conv2dOutput[(164)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(133)] = (Conv2dOutput[(133)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(165)] = (Conv2dOutput[(165)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(134)] = (Conv2dOutput[(134)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(166)] = (Conv2dOutput[(166)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 10))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(135)] = (Conv2dOutput[(135)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(167)] = (Conv2dOutput[(167)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 170))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(136)] = (Conv2dOutput[(136)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(168)] = (Conv2dOutput[(168)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(137)] = (Conv2dOutput[(137)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(169)] = (Conv2dOutput[(169)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(138)] = (Conv2dOutput[(138)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(170)] = (Conv2dOutput[(170)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 20))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(139)] = (Conv2dOutput[(139)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(171)] = (Conv2dOutput[(171)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 180))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(140)] = (Conv2dOutput[(140)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(172)] = (Conv2dOutput[(172)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(141)] = (Conv2dOutput[(141)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(173)] = (Conv2dOutput[(173)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(142)] = (Conv2dOutput[(142)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(174)] = (Conv2dOutput[(174)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 30))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(143)] = (Conv2dOutput[(143)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(175)] = (Conv2dOutput[(175)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 190))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(112)] = (Conv2dOutput[(112)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(144)] = (Conv2dOutput[(144)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(176)] = (Conv2dOutput[(176)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(113)] = (Conv2dOutput[(113)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(145)] = (Conv2dOutput[(145)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(177)] = (Conv2dOutput[(177)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(114)] = (Conv2dOutput[(114)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(146)] = (Conv2dOutput[(146)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(178)] = (Conv2dOutput[(178)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 640))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(115)] = (Conv2dOutput[(115)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(147)] = (Conv2dOutput[(147)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(179)] = (Conv2dOutput[(179)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 800))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(116)] = (Conv2dOutput[(116)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(148)] = (Conv2dOutput[(148)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(180)] = (Conv2dOutput[(180)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(117)] = (Conv2dOutput[(117)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(149)] = (Conv2dOutput[(149)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(181)] = (Conv2dOutput[(181)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(118)] = (Conv2dOutput[(118)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(150)] = (Conv2dOutput[(150)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(182)] = (Conv2dOutput[(182)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 650))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(119)] = (Conv2dOutput[(119)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(151)] = (Conv2dOutput[(151)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(183)] = (Conv2dOutput[(183)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 810))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(120)] = (Conv2dOutput[(120)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(152)] = (Conv2dOutput[(152)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(184)] = (Conv2dOutput[(184)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(121)] = (Conv2dOutput[(121)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(153)] = (Conv2dOutput[(153)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(185)] = (Conv2dOutput[(185)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(122)] = (Conv2dOutput[(122)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(154)] = (Conv2dOutput[(154)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(186)] = (Conv2dOutput[(186)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 660))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(123)] = (Conv2dOutput[(123)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(155)] = (Conv2dOutput[(155)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(187)] = (Conv2dOutput[(187)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 820))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(124)] = (Conv2dOutput[(124)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[(((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)))]));
      Conv2dOutput[(156)] = (Conv2dOutput[(156)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 8))]));
      Conv2dOutput[(188)] = (Conv2dOutput[(188)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 16))]));
      Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(125)] = (Conv2dOutput[(125)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 1))]));
      Conv2dOutput[(157)] = (Conv2dOutput[(157)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 9))]));
      Conv2dOutput[(189)] = (Conv2dOutput[(189)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 17))]));
      Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(126)] = (Conv2dOutput[(126)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 2))]));
      Conv2dOutput[(158)] = (Conv2dOutput[(158)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 10))]));
      Conv2dOutput[(190)] = (Conv2dOutput[(190)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 18))]));
      Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 670))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
      Conv2dOutput[(127)] = (Conv2dOutput[(127)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 3))]));
      Conv2dOutput[(159)] = (Conv2dOutput[(159)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 11))]));
      Conv2dOutput[(191)] = (Conv2dOutput[(191)] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1280) + (((((int)threadIdx.x) & 15) >> 3) * 320)) + (((((int)threadIdx.x) & 7) >> 1) * 40)) + rc_outer_inner) + 830))] * placeholder_shared[((((rc_outer_inner * 24) + ((((int)threadIdx.x) & 1) * 4)) + 19))]));
    }
  }
  for (int ax0_inner = 0; ax0_inner < 2; ++ax0_inner) {
    for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
      for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
        T_relu[(((((((((((((int)threadIdx.x) >> 4) * 245760) + (ax0_inner * 122880)) + ((((int)blockIdx.x) / 5) * 7680)) + (((((int)threadIdx.x) & 15) >> 3) * 3840)) + (((((int)threadIdx.x) & 7) >> 1) * 480)) + (ax2_inner * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner))] = max((Conv2dOutput[((((ax0_inner * 16) + (ax2_inner * 4)) + ax3_inner))] + placeholder2[(((((((int)blockIdx.x) % 5) * 24) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner))]), 0.000000e+00f);
        T_relu[((((((((((((((int)threadIdx.x) >> 4) * 245760) + (ax0_inner * 122880)) + ((((int)blockIdx.x) / 5) * 7680)) + (((((int)threadIdx.x) & 15) >> 3) * 3840)) + (((((int)threadIdx.x) & 7) >> 1) * 480)) + (ax2_inner * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 8))] = max((Conv2dOutput[(((((ax0_inner * 16) + (ax2_inner * 4)) + ax3_inner) + 32))] + placeholder2[((((((((int)blockIdx.x) % 5) * 24) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 8))]), 0.000000e+00f);
        T_relu[((((((((((((((int)threadIdx.x) >> 4) * 245760) + (ax0_inner * 122880)) + ((((int)blockIdx.x) / 5) * 7680)) + (((((int)threadIdx.x) & 15) >> 3) * 3840)) + (((((int)threadIdx.x) & 7) >> 1) * 480)) + (ax2_inner * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 16))] = max((Conv2dOutput[(((((ax0_inner * 16) + (ax2_inner * 4)) + ax3_inner) + 64))] + placeholder2[((((((((int)blockIdx.x) % 5) * 24) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 16))]), 0.000000e+00f);
        T_relu[((((((((((((((int)threadIdx.x) >> 4) * 245760) + (ax0_inner * 122880)) + ((((int)blockIdx.x) / 5) * 7680)) + (((((int)threadIdx.x) & 15) >> 3) * 3840)) + (((((int)threadIdx.x) & 7) >> 1) * 480)) + (ax2_inner * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 1920))] = max((Conv2dOutput[(((((ax0_inner * 16) + (ax2_inner * 4)) + ax3_inner) + 96))] + placeholder2[(((((((int)blockIdx.x) % 5) * 24) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner))]), 0.000000e+00f);
        T_relu[((((((((((((((int)threadIdx.x) >> 4) * 245760) + (ax0_inner * 122880)) + ((((int)blockIdx.x) / 5) * 7680)) + (((((int)threadIdx.x) & 15) >> 3) * 3840)) + (((((int)threadIdx.x) & 7) >> 1) * 480)) + (ax2_inner * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 1928))] = max((Conv2dOutput[(((((ax0_inner * 16) + (ax2_inner * 4)) + ax3_inner) + 128))] + placeholder2[((((((((int)blockIdx.x) % 5) * 24) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 8))]), 0.000000e+00f);
        T_relu[((((((((((((((int)threadIdx.x) >> 4) * 245760) + (ax0_inner * 122880)) + ((((int)blockIdx.x) / 5) * 7680)) + (((((int)threadIdx.x) & 15) >> 3) * 3840)) + (((((int)threadIdx.x) & 7) >> 1) * 480)) + (ax2_inner * 120)) + ((((int)blockIdx.x) % 5) * 24)) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 1936))] = max((Conv2dOutput[(((((ax0_inner * 16) + (ax2_inner * 4)) + ax3_inner) + 160))] + placeholder2[((((((((int)blockIdx.x) % 5) * 24) + ((((int)threadIdx.x) & 1) * 4)) + ax3_inner) + 16))]), 0.000000e+00f);
      }
    }
  }
}


