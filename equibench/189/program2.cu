
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv3dOutput[64];
  __shared__ float PaddedInput_shared[972];
  __shared__ float placeholder_shared[168];
  for (int dd_outer_inner_init = 0; dd_outer_inner_init < 4; ++dd_outer_inner_init) {
    Conv3dOutput[((dd_outer_inner_init * 8))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 32))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 1))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 33))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 2))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 34))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 3))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 35))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 4))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 36))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 5))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 37))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 6))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 38))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 7))] = 0.000000e+00f;
    Conv3dOutput[(((dd_outer_inner_init * 8) + 39))] = 0.000000e+00f;
  }
  for (int rw_outer_outer = 0; rw_outer_outer < 7; ++rw_outer_outer) {
    for (int rc_outer_outer = 0; rc_outer_outer < 3; ++rc_outer_outer) {
      __syncthreads();
      for (int ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 972) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3)) < 19)) ? placeholder[((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 971) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 3)) < 19)) ? placeholder[(((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 970) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 3)) < 19)) ? placeholder[(((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 969) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3)) < 19)) ? placeholder[(((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 3) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 968) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 3)) < 19)) ? placeholder[(((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 4) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 1) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 967) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 3)) < 19)) ? placeholder[(((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 5) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 2) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) < 966) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 16) + ((int)threadIdx.x)) < 139) {
            PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6))] = (((((((1 <= (((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) % 486) / 27))) && ((((((int)blockIdx.x) / 1152) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) % 486) / 27)) < 145)) && (3 <= ((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) % 27) / 3)))) && (((((((int)blockIdx.x) % 1152) >> 5) * 4) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) % 27) / 3)) < 147)) && (3 <= (((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3)))) && ((((((((int)blockIdx.x) & 31) >> 3) * 4) + rw_outer_outer) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3)) < 19)) ? placeholder[(((((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) / 486) * 995328) + ((((int)blockIdx.x) / 1152) * 110592)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) % 486) / 27) * 6912)) + (((((int)blockIdx.x) % 1152) >> 5) * 192)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) + 6) % 27) / 3) * 48)) + (((((int)blockIdx.x) & 31) >> 3) * 12)) + (rw_outer_outer * 3)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 112) + (((int)threadIdx.x) * 7)) % 3) * 3)) + rc_outer_outer) - 7065))] : 0.000000e+00f);
          }
        }
      }
      for (int ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 168) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[(((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + ((((int)threadIdx.x) * 9) >> 3)) % 7) * 8)) + ((((int)threadIdx.x) * 9) & 7)))] = placeholder1[((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + ((((int)threadIdx.x) * 9) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) * 9) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 167) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 1) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 1) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 1) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 1) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 1) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 1) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 166) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 2) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 2) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 2) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 2) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 2) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 2) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 165) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 3) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 3) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 3) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 3) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 3) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 3) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 164) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 4) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 4) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 4) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 4) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 4) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 4) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 163) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 5) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 5) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 5) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 5) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 5) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 5) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 162) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 6) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 6) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 6) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 6) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 6) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 6) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 161) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 7) / 56) * 56) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 7) >> 3)) % 7) * 8)) + (((((int)threadIdx.x) * 9) + 7) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 7) / 56) * 9408) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + (((((int)threadIdx.x) * 9) + 7) >> 3)) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + (((((int)threadIdx.x) * 9) + 7) & 7)))];
          }
        }
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) < 160) {
          if (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 16) + ((int)threadIdx.x)) < 19) {
            placeholder_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 8) / 56) * 56) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + ((((int)threadIdx.x) * 9) >> 3)) + 1) % 7) * 8)) + ((((int)threadIdx.x) * 9) & 7)))] = placeholder1[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 144) + (((int)threadIdx.x) * 9)) + 8) / 56) * 9408) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 18) + ((((int)threadIdx.x) * 9) >> 3)) + 1) % 7) * 1344)) + (rw_outer_outer * 192)) + (rc_outer_outer * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) * 9) & 7)))];
          }
        }
      }
      __syncthreads();
      for (int rd_outer_inner = 0; rd_outer_inner < 3; ++rd_outer_inner) {
        for (int dd_outer_inner = 0; dd_outer_inner < 4; ++dd_outer_inner) {
          for (int rh_inner = 0; rh_inner < 7; ++rh_inner) {
            Conv3dOutput[((dd_outer_inner * 8))] = (Conv3dOutput[((dd_outer_inner * 8))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 32))] = (Conv3dOutput[(((dd_outer_inner * 8) + 32))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 216))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 1))] = (Conv3dOutput[(((dd_outer_inner * 8) + 1))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 33))] = (Conv3dOutput[(((dd_outer_inner * 8) + 33))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 216))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 2))] = (Conv3dOutput[(((dd_outer_inner * 8) + 2))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 2))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 34))] = (Conv3dOutput[(((dd_outer_inner * 8) + 34))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 218))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 3))] = (Conv3dOutput[(((dd_outer_inner * 8) + 3))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 2))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 35))] = (Conv3dOutput[(((dd_outer_inner * 8) + 35))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 218))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 4))] = (Conv3dOutput[(((dd_outer_inner * 8) + 4))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 27))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 36))] = (Conv3dOutput[(((dd_outer_inner * 8) + 36))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 243))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 5))] = (Conv3dOutput[(((dd_outer_inner * 8) + 5))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 27))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 37))] = (Conv3dOutput[(((dd_outer_inner * 8) + 37))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 243))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 6))] = (Conv3dOutput[(((dd_outer_inner * 8) + 6))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 29))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 38))] = (Conv3dOutput[(((dd_outer_inner * 8) + 38))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 245))] * placeholder_shared[((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 7))] = (Conv3dOutput[(((dd_outer_inner * 8) + 7))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 29))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
            Conv3dOutput[(((dd_outer_inner * 8) + 39))] = (Conv3dOutput[(((dd_outer_inner * 8) + 39))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 3) * 486) + (dd_outer_inner * 54)) + (rd_outer_inner * 27)) + (((((int)threadIdx.x) & 7) >> 2) * 6)) + (rh_inner * 3)) + 245))] * placeholder_shared[(((((rd_outer_inner * 56) + (rh_inner * 8)) + ((((int)threadIdx.x) & 3) * 2)) + 1))]));
          }
        }
      }
    }
  }
  for (int ax1_inner = 0; ax1_inner < 8; ++ax1_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      for (int ax4_inner = 0; ax4_inner < 2; ++ax4_inner) {
        T_relu[((((((((((((((int)threadIdx.x) >> 3) * 5308416) + ((((int)blockIdx.x) / 1152) * 589824)) + (ax1_inner * 36864)) + (((((int)blockIdx.x) % 1152) >> 5) * 1024)) + (((((int)threadIdx.x) & 7) >> 2) * 512)) + (((((int)blockIdx.x) & 31) >> 3) * 128)) + (ax3_inner * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + ax4_inner))] = max(((Conv3dOutput[((((ax1_inner * 4) + (ax3_inner * 2)) + ax4_inner))] * placeholder2[(((((((int)blockIdx.x) & 7) * 8) + ((((int)threadIdx.x) & 3) * 2)) + ax4_inner))]) + placeholder3[(((((((int)blockIdx.x) & 7) * 8) + ((((int)threadIdx.x) & 3) * 2)) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)threadIdx.x) >> 3) * 5308416) + ((((int)blockIdx.x) / 1152) * 589824)) + (ax1_inner * 36864)) + (((((int)blockIdx.x) % 1152) >> 5) * 1024)) + (((((int)threadIdx.x) & 7) >> 2) * 512)) + (((((int)blockIdx.x) & 31) >> 3) * 128)) + (ax3_inner * 64)) + ((((int)blockIdx.x) & 7) * 8)) + ((((int)threadIdx.x) & 3) * 2)) + ax4_inner) + 294912))] = max(((Conv3dOutput[(((((ax1_inner * 4) + (ax3_inner * 2)) + ax4_inner) + 32))] * placeholder2[(((((((int)blockIdx.x) & 7) * 8) + ((((int)threadIdx.x) & 3) * 2)) + ax4_inner))]) + placeholder3[(((((((int)blockIdx.x) & 7) * 8) + ((((int)threadIdx.x) & 3) * 2)) + ax4_inner))]), 0.000000e+00f);
      }
    }
  }
}


