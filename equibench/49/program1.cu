
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv2dOutput[112];
  __shared__ float PaddedInput_shared[672];
  __shared__ float placeholder_shared[288];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(56)] = 0.000000e+00f;
  Conv2dOutput[(64)] = 0.000000e+00f;
  Conv2dOutput[(72)] = 0.000000e+00f;
  Conv2dOutput[(80)] = 0.000000e+00f;
  Conv2dOutput[(88)] = 0.000000e+00f;
  Conv2dOutput[(96)] = 0.000000e+00f;
  Conv2dOutput[(104)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(57)] = 0.000000e+00f;
  Conv2dOutput[(65)] = 0.000000e+00f;
  Conv2dOutput[(73)] = 0.000000e+00f;
  Conv2dOutput[(81)] = 0.000000e+00f;
  Conv2dOutput[(89)] = 0.000000e+00f;
  Conv2dOutput[(97)] = 0.000000e+00f;
  Conv2dOutput[(105)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(58)] = 0.000000e+00f;
  Conv2dOutput[(66)] = 0.000000e+00f;
  Conv2dOutput[(74)] = 0.000000e+00f;
  Conv2dOutput[(82)] = 0.000000e+00f;
  Conv2dOutput[(90)] = 0.000000e+00f;
  Conv2dOutput[(98)] = 0.000000e+00f;
  Conv2dOutput[(106)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(59)] = 0.000000e+00f;
  Conv2dOutput[(67)] = 0.000000e+00f;
  Conv2dOutput[(75)] = 0.000000e+00f;
  Conv2dOutput[(83)] = 0.000000e+00f;
  Conv2dOutput[(91)] = 0.000000e+00f;
  Conv2dOutput[(99)] = 0.000000e+00f;
  Conv2dOutput[(107)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(60)] = 0.000000e+00f;
  Conv2dOutput[(68)] = 0.000000e+00f;
  Conv2dOutput[(76)] = 0.000000e+00f;
  Conv2dOutput[(84)] = 0.000000e+00f;
  Conv2dOutput[(92)] = 0.000000e+00f;
  Conv2dOutput[(100)] = 0.000000e+00f;
  Conv2dOutput[(108)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(61)] = 0.000000e+00f;
  Conv2dOutput[(69)] = 0.000000e+00f;
  Conv2dOutput[(77)] = 0.000000e+00f;
  Conv2dOutput[(85)] = 0.000000e+00f;
  Conv2dOutput[(93)] = 0.000000e+00f;
  Conv2dOutput[(101)] = 0.000000e+00f;
  Conv2dOutput[(109)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(62)] = 0.000000e+00f;
  Conv2dOutput[(70)] = 0.000000e+00f;
  Conv2dOutput[(78)] = 0.000000e+00f;
  Conv2dOutput[(86)] = 0.000000e+00f;
  Conv2dOutput[(94)] = 0.000000e+00f;
  Conv2dOutput[(102)] = 0.000000e+00f;
  Conv2dOutput[(110)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  Conv2dOutput[(63)] = 0.000000e+00f;
  Conv2dOutput[(71)] = 0.000000e+00f;
  Conv2dOutput[(79)] = 0.000000e+00f;
  Conv2dOutput[(87)] = 0.000000e+00f;
  Conv2dOutput[(95)] = 0.000000e+00f;
  Conv2dOutput[(103)] = 0.000000e+00f;
  Conv2dOutput[(111)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 12; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[((((int)threadIdx.x) * 3))] = placeholder[(((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((int)threadIdx.x) >> 2) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 3) + 1))] = placeholder[(((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 1) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 3) + 2))] = placeholder[(((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 2) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 36) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 36) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 37) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 37) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 38) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 38) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 72) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 72) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 73) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 73) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 74) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 74) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 108) / 48) * 48) + (((((int)threadIdx.x) >> 2) + 1) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 108) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((int)threadIdx.x) >> 2) + 1) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 109) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 109) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 110) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 110) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 3) + 144))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((int)threadIdx.x) >> 2) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)) + 24192))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 145) / 48) * 48) + ((((int)threadIdx.x) * 3) + 1)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 145) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 1) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 146) / 48) * 48) + ((((int)threadIdx.x) * 3) + 2)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 146) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 2) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 180) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 180) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 181) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 181) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 182) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 182) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 216) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 216) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 217) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 217) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 218) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 218) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 252) / 48) * 48) + (((((int)threadIdx.x) >> 2) + 1) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 252) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((int)threadIdx.x) >> 2) + 1) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 253) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 253) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 254) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 254) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 3) + 288))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((int)threadIdx.x) >> 2) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)) + 48384))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 289) / 48) * 48) + ((((int)threadIdx.x) * 3) + 1)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 289) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 1) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 290) / 48) * 48) + ((((int)threadIdx.x) * 3) + 2)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 290) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 2) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 324) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 324) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 325) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 325) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 326) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 326) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 360) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 360) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 361) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 361) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 362) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 362) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 396) / 48) * 48) + (((((int)threadIdx.x) >> 2) + 1) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 396) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((int)threadIdx.x) >> 2) + 1) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 397) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 397) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 398) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 398) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 3) + 432))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((int)threadIdx.x) >> 2) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)) + 72576))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 433) / 48) * 48) + ((((int)threadIdx.x) * 3) + 1)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 433) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 1) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 434) / 48) * 48) + ((((int)threadIdx.x) * 3) + 2)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 434) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 2) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 468) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 468) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 469) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 469) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 470) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 470) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 504) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 504) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 505) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 505) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 506) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 506) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 2) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 540) / 48) * 48) + (((((int)threadIdx.x) >> 2) + 1) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 540) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((int)threadIdx.x) >> 2) + 1) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 541) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 541) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 542) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 542) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 1) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 3) + 576))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((int)blockIdx.x) % 14) * 576)) + ((((int)threadIdx.x) >> 2) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)) + 96768))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 577) / 48) * 48) + ((((int)threadIdx.x) * 3) + 1)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 577) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 1) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[((((((((int)threadIdx.x) * 3) + 578) / 48) * 48) + ((((int)threadIdx.x) * 3) + 2)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 578) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) * 3) + 2) / 12) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 612) / 48) * 48) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 612) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((int)threadIdx.x) >> 2) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 613) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 613) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 1) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 614) / 48) * 48) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 614) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + ((((((((int)threadIdx.x) * 3) + 2) / 12) + 3) & 3) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    if (((int)threadIdx.x) < 8) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 648) / 48) * 48) + (((((int)threadIdx.x) >> 2) + 2) * 12)) + ((((int)threadIdx.x) & 3) * 3)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 648) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((int)threadIdx.x) >> 2) + 2) * 144)) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) & 3) * 3)))];
    }
    if (((int)threadIdx.x) < 8) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 649) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 2) * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 649) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 1) / 12) + 2) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 1) % 12)))];
    }
    if (((int)threadIdx.x) < 8) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 3) + 650) / 48) * 48) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 2) * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))] = placeholder[((((((((((int)blockIdx.x) / 14) * 112896) + ((((((int)threadIdx.x) * 3) + 650) / 48) * 8064)) + ((((int)blockIdx.x) % 14) * 576)) + (((((((int)threadIdx.x) * 3) + 2) / 12) + 2) * 144)) + (rc_outer_outer * 12)) + (((((int)threadIdx.x) * 3) + 2) % 12)))];
    }
    ((float4*)(placeholder_shared + ((((int)threadIdx.x) * 4))))[0] = ((float4*)(placeholder1 + (((rc_outer_outer * 288) + (((int)threadIdx.x) * 4)))))[0];
    ((float4*)(placeholder_shared + (((((int)threadIdx.x) * 4) + 48))))[0] = ((float4*)(placeholder1 + ((((rc_outer_outer * 288) + (((int)threadIdx.x) * 4)) + 48))))[0];
    ((float4*)(placeholder_shared + (((((int)threadIdx.x) * 4) + 96))))[0] = ((float4*)(placeholder1 + ((((rc_outer_outer * 288) + (((int)threadIdx.x) * 4)) + 96))))[0];
    ((float4*)(placeholder_shared + (((((int)threadIdx.x) * 4) + 144))))[0] = ((float4*)(placeholder1 + ((((rc_outer_outer * 288) + (((int)threadIdx.x) * 4)) + 144))))[0];
    ((float4*)(placeholder_shared + (((((int)threadIdx.x) * 4) + 192))))[0] = ((float4*)(placeholder1 + ((((rc_outer_outer * 288) + (((int)threadIdx.x) * 4)) + 192))))[0];
    ((float4*)(placeholder_shared + (((((int)threadIdx.x) * 4) + 240))))[0] = ((float4*)(placeholder1 + ((((rc_outer_outer * 288) + (((int)threadIdx.x) * 4)) + 240))))[0];
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 3; ++rc_outer_inner) {
      Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 48))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 96))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 144))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 192))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 240))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 288))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 336))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 384))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 432))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 480))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 528))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 576))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 624))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 48))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 96))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 144))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 192))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 240))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 288))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 336))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 384))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 432))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 480))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 528))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 576))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 624))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 48))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 96))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 144))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 192))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 240))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 288))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 336))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 384))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 432))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 480))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 528))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 576))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 624))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 48))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 96))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 144))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 192))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 240))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 288))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 336))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 384))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 432))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 480))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 528))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 576))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 624))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 49))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 97))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 145))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 193))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 241))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 289))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 337))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 385))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 433))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 481))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 529))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 577))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 625))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 49))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 97))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 145))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 193))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 241))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 289))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 337))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 385))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 433))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 481))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 529))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 577))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 625))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 49))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 97))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 145))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 193))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 241))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 289))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 337))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 385))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 433))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 481))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 529))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 577))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 625))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 49))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 97))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 145))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 193))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 241))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 289))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 337))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 385))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 433))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 481))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 529))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 577))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 625))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 50))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 98))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 146))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 194))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 242))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 290))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 338))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 386))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 434))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 482))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 530))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 578))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 626))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 50))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 98))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 146))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 194))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 242))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 290))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 338))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 386))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 434))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 482))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 530))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 578))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 626))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 50))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 98))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 146))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 194))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 242))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 290))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 338))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 386))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 434))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 482))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 530))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 578))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 626))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 50))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 98))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 146))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 194))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 242))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 290))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 338))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 386))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 434))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 482))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 530))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 578))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 626))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 51))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 99))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 147))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 195))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 243))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 291))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 339))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 387))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 435))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 483))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 531))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 579))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 627))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 51))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 99))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 147))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 195))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 243))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 291))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 339))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 387))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 435))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 483))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 531))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 579))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 627))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 51))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 99))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 147))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 195))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 243))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 291))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 339))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 387))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 435))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 483))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 531))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 579))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 627))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 51))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 99))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 147))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 195))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 243))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 291))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 339))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 387))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 435))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 483))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 531))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 579))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 627))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 12))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 60))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 108))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 156))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 204))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 252))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 300))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 348))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 396))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 444))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 492))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 540))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 588))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 636))] * placeholder_shared[(((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)))]));
      Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 12))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 60))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 108))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 156))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 204))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 252))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 300))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 348))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 396))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 444))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 492))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 540))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 588))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 636))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 1))]));
      Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 12))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 60))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 108))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 156))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 204))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 252))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 300))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 348))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 396))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 444))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 492))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 540))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 588))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 636))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 2))]));
      Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 12))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 60))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 108))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 156))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 204))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 252))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 300))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 348))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 396))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 444))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 492))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 540))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 588))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 636))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 3))]));
      Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 13))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 61))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 109))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 157))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 205))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 253))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 301))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 349))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 397))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 445))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 493))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 541))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 589))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 637))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 24))]));
      Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 13))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 61))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 109))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 157))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 205))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 253))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 301))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 349))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 397))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 445))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 493))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 541))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 589))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 637))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 25))]));
      Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 13))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 61))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 109))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 157))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 205))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 253))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 301))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 349))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 397))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 445))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 493))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 541))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 589))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 637))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 26))]));
      Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 13))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 61))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 109))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 157))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 205))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 253))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 301))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 349))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 397))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 445))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 493))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 541))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 589))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 637))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 27))]));
      Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 14))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 62))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 110))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 158))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 206))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 254))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 302))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 350))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 398))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 446))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 494))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 542))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 590))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 638))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 48))]));
      Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 14))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 62))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 110))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 158))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 206))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 254))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 302))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 350))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 398))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 446))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 494))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 542))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 590))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 638))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 49))]));
      Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 14))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 62))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 110))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 158))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 206))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 254))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 302))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 350))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 398))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 446))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 494))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 542))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 590))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 638))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 50))]));
      Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 14))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 62))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 110))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 158))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 206))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 254))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 302))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 350))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 398))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 446))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 494))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 542))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 590))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 638))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 51))]));
      Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 15))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 63))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 111))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 159))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 207))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 255))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 303))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 351))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 399))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 447))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 495))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 543))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 591))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 639))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 72))]));
      Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 15))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 63))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 111))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 159))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 207))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 255))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 303))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 351))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 399))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 447))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 495))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 543))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 591))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 639))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 73))]));
      Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 15))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 63))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 111))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 159))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 207))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 255))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 303))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 351))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 399))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 447))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 495))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 543))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 591))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 639))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 74))]));
      Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 15))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 63))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 111))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 159))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 207))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 255))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 303))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 351))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 399))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 447))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 495))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 543))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 591))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
      Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 24) + (rc_outer_inner * 4)) + 639))] * placeholder_shared[((((rc_outer_inner * 96) + ((((int)threadIdx.x) % 6) * 4)) + 75))]));
    }
  }
  for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_add[((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner))] = (placeholder2[((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner))] + (Conv2dOutput[(((ax2_inner * 4) + ax3_inner))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 1344))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 1344))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 8))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 2688))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 2688))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 16))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 4032))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 4032))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 24))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 5376))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 5376))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 32))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 6720))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 6720))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 40))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 8064))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 8064))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 48))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 9408))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 9408))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 56))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 10752))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 10752))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 64))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 12096))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 12096))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 72))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 13440))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 13440))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 80))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 14784))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 14784))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 88))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 16128))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 16128))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 96))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
      T_add[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 17472))] = (placeholder2[(((((((((((int)blockIdx.x) / 14) * 18816) + ((((int)blockIdx.x) % 14) * 96)) + ((((int)threadIdx.x) / 6) * 48)) + (ax2_inner * 24)) + ((((int)threadIdx.x) % 6) * 4)) + ax3_inner) + 17472))] + (Conv2dOutput[((((ax2_inner * 4) + ax3_inner) + 104))] + placeholder3[((((((int)threadIdx.x) % 6) * 4) + ax3_inner))]));
    }
  }
}


