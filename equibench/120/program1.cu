
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[512];
  __shared__ float PaddedInput_shared[5120];
  __shared__ float placeholder_shared[5120];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(256)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(257)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(258)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(259)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(260)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(261)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(262)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(263)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(264)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(265)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(266)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(267)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(268)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(269)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(270)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(271)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(272)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(273)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(274)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(275)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(276)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(277)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(278)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(279)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(280)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(281)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(282)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(283)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(284)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(285)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(286)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(287)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(288)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(289)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(290)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(291)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(292)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(293)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(294)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(295)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(296)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(297)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(298)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(299)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(300)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(301)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(302)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(303)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(304)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(305)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(306)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(307)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(308)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(309)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(310)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  Conv2dOutput[(311)] = 0.000000e+00f;
  Conv2dOutput[(56)] = 0.000000e+00f;
  Conv2dOutput[(312)] = 0.000000e+00f;
  Conv2dOutput[(57)] = 0.000000e+00f;
  Conv2dOutput[(313)] = 0.000000e+00f;
  Conv2dOutput[(58)] = 0.000000e+00f;
  Conv2dOutput[(314)] = 0.000000e+00f;
  Conv2dOutput[(59)] = 0.000000e+00f;
  Conv2dOutput[(315)] = 0.000000e+00f;
  Conv2dOutput[(60)] = 0.000000e+00f;
  Conv2dOutput[(316)] = 0.000000e+00f;
  Conv2dOutput[(61)] = 0.000000e+00f;
  Conv2dOutput[(317)] = 0.000000e+00f;
  Conv2dOutput[(62)] = 0.000000e+00f;
  Conv2dOutput[(318)] = 0.000000e+00f;
  Conv2dOutput[(63)] = 0.000000e+00f;
  Conv2dOutput[(319)] = 0.000000e+00f;
  Conv2dOutput[(64)] = 0.000000e+00f;
  Conv2dOutput[(320)] = 0.000000e+00f;
  Conv2dOutput[(65)] = 0.000000e+00f;
  Conv2dOutput[(321)] = 0.000000e+00f;
  Conv2dOutput[(66)] = 0.000000e+00f;
  Conv2dOutput[(322)] = 0.000000e+00f;
  Conv2dOutput[(67)] = 0.000000e+00f;
  Conv2dOutput[(323)] = 0.000000e+00f;
  Conv2dOutput[(68)] = 0.000000e+00f;
  Conv2dOutput[(324)] = 0.000000e+00f;
  Conv2dOutput[(69)] = 0.000000e+00f;
  Conv2dOutput[(325)] = 0.000000e+00f;
  Conv2dOutput[(70)] = 0.000000e+00f;
  Conv2dOutput[(326)] = 0.000000e+00f;
  Conv2dOutput[(71)] = 0.000000e+00f;
  Conv2dOutput[(327)] = 0.000000e+00f;
  Conv2dOutput[(72)] = 0.000000e+00f;
  Conv2dOutput[(328)] = 0.000000e+00f;
  Conv2dOutput[(73)] = 0.000000e+00f;
  Conv2dOutput[(329)] = 0.000000e+00f;
  Conv2dOutput[(74)] = 0.000000e+00f;
  Conv2dOutput[(330)] = 0.000000e+00f;
  Conv2dOutput[(75)] = 0.000000e+00f;
  Conv2dOutput[(331)] = 0.000000e+00f;
  Conv2dOutput[(76)] = 0.000000e+00f;
  Conv2dOutput[(332)] = 0.000000e+00f;
  Conv2dOutput[(77)] = 0.000000e+00f;
  Conv2dOutput[(333)] = 0.000000e+00f;
  Conv2dOutput[(78)] = 0.000000e+00f;
  Conv2dOutput[(334)] = 0.000000e+00f;
  Conv2dOutput[(79)] = 0.000000e+00f;
  Conv2dOutput[(335)] = 0.000000e+00f;
  Conv2dOutput[(80)] = 0.000000e+00f;
  Conv2dOutput[(336)] = 0.000000e+00f;
  Conv2dOutput[(81)] = 0.000000e+00f;
  Conv2dOutput[(337)] = 0.000000e+00f;
  Conv2dOutput[(82)] = 0.000000e+00f;
  Conv2dOutput[(338)] = 0.000000e+00f;
  Conv2dOutput[(83)] = 0.000000e+00f;
  Conv2dOutput[(339)] = 0.000000e+00f;
  Conv2dOutput[(84)] = 0.000000e+00f;
  Conv2dOutput[(340)] = 0.000000e+00f;
  Conv2dOutput[(85)] = 0.000000e+00f;
  Conv2dOutput[(341)] = 0.000000e+00f;
  Conv2dOutput[(86)] = 0.000000e+00f;
  Conv2dOutput[(342)] = 0.000000e+00f;
  Conv2dOutput[(87)] = 0.000000e+00f;
  Conv2dOutput[(343)] = 0.000000e+00f;
  Conv2dOutput[(88)] = 0.000000e+00f;
  Conv2dOutput[(344)] = 0.000000e+00f;
  Conv2dOutput[(89)] = 0.000000e+00f;
  Conv2dOutput[(345)] = 0.000000e+00f;
  Conv2dOutput[(90)] = 0.000000e+00f;
  Conv2dOutput[(346)] = 0.000000e+00f;
  Conv2dOutput[(91)] = 0.000000e+00f;
  Conv2dOutput[(347)] = 0.000000e+00f;
  Conv2dOutput[(92)] = 0.000000e+00f;
  Conv2dOutput[(348)] = 0.000000e+00f;
  Conv2dOutput[(93)] = 0.000000e+00f;
  Conv2dOutput[(349)] = 0.000000e+00f;
  Conv2dOutput[(94)] = 0.000000e+00f;
  Conv2dOutput[(350)] = 0.000000e+00f;
  Conv2dOutput[(95)] = 0.000000e+00f;
  Conv2dOutput[(351)] = 0.000000e+00f;
  Conv2dOutput[(96)] = 0.000000e+00f;
  Conv2dOutput[(352)] = 0.000000e+00f;
  Conv2dOutput[(97)] = 0.000000e+00f;
  Conv2dOutput[(353)] = 0.000000e+00f;
  Conv2dOutput[(98)] = 0.000000e+00f;
  Conv2dOutput[(354)] = 0.000000e+00f;
  Conv2dOutput[(99)] = 0.000000e+00f;
  Conv2dOutput[(355)] = 0.000000e+00f;
  Conv2dOutput[(100)] = 0.000000e+00f;
  Conv2dOutput[(356)] = 0.000000e+00f;
  Conv2dOutput[(101)] = 0.000000e+00f;
  Conv2dOutput[(357)] = 0.000000e+00f;
  Conv2dOutput[(102)] = 0.000000e+00f;
  Conv2dOutput[(358)] = 0.000000e+00f;
  Conv2dOutput[(103)] = 0.000000e+00f;
  Conv2dOutput[(359)] = 0.000000e+00f;
  Conv2dOutput[(104)] = 0.000000e+00f;
  Conv2dOutput[(360)] = 0.000000e+00f;
  Conv2dOutput[(105)] = 0.000000e+00f;
  Conv2dOutput[(361)] = 0.000000e+00f;
  Conv2dOutput[(106)] = 0.000000e+00f;
  Conv2dOutput[(362)] = 0.000000e+00f;
  Conv2dOutput[(107)] = 0.000000e+00f;
  Conv2dOutput[(363)] = 0.000000e+00f;
  Conv2dOutput[(108)] = 0.000000e+00f;
  Conv2dOutput[(364)] = 0.000000e+00f;
  Conv2dOutput[(109)] = 0.000000e+00f;
  Conv2dOutput[(365)] = 0.000000e+00f;
  Conv2dOutput[(110)] = 0.000000e+00f;
  Conv2dOutput[(366)] = 0.000000e+00f;
  Conv2dOutput[(111)] = 0.000000e+00f;
  Conv2dOutput[(367)] = 0.000000e+00f;
  Conv2dOutput[(112)] = 0.000000e+00f;
  Conv2dOutput[(368)] = 0.000000e+00f;
  Conv2dOutput[(113)] = 0.000000e+00f;
  Conv2dOutput[(369)] = 0.000000e+00f;
  Conv2dOutput[(114)] = 0.000000e+00f;
  Conv2dOutput[(370)] = 0.000000e+00f;
  Conv2dOutput[(115)] = 0.000000e+00f;
  Conv2dOutput[(371)] = 0.000000e+00f;
  Conv2dOutput[(116)] = 0.000000e+00f;
  Conv2dOutput[(372)] = 0.000000e+00f;
  Conv2dOutput[(117)] = 0.000000e+00f;
  Conv2dOutput[(373)] = 0.000000e+00f;
  Conv2dOutput[(118)] = 0.000000e+00f;
  Conv2dOutput[(374)] = 0.000000e+00f;
  Conv2dOutput[(119)] = 0.000000e+00f;
  Conv2dOutput[(375)] = 0.000000e+00f;
  Conv2dOutput[(120)] = 0.000000e+00f;
  Conv2dOutput[(376)] = 0.000000e+00f;
  Conv2dOutput[(121)] = 0.000000e+00f;
  Conv2dOutput[(377)] = 0.000000e+00f;
  Conv2dOutput[(122)] = 0.000000e+00f;
  Conv2dOutput[(378)] = 0.000000e+00f;
  Conv2dOutput[(123)] = 0.000000e+00f;
  Conv2dOutput[(379)] = 0.000000e+00f;
  Conv2dOutput[(124)] = 0.000000e+00f;
  Conv2dOutput[(380)] = 0.000000e+00f;
  Conv2dOutput[(125)] = 0.000000e+00f;
  Conv2dOutput[(381)] = 0.000000e+00f;
  Conv2dOutput[(126)] = 0.000000e+00f;
  Conv2dOutput[(382)] = 0.000000e+00f;
  Conv2dOutput[(127)] = 0.000000e+00f;
  Conv2dOutput[(383)] = 0.000000e+00f;
  Conv2dOutput[(128)] = 0.000000e+00f;
  Conv2dOutput[(384)] = 0.000000e+00f;
  Conv2dOutput[(129)] = 0.000000e+00f;
  Conv2dOutput[(385)] = 0.000000e+00f;
  Conv2dOutput[(130)] = 0.000000e+00f;
  Conv2dOutput[(386)] = 0.000000e+00f;
  Conv2dOutput[(131)] = 0.000000e+00f;
  Conv2dOutput[(387)] = 0.000000e+00f;
  Conv2dOutput[(132)] = 0.000000e+00f;
  Conv2dOutput[(388)] = 0.000000e+00f;
  Conv2dOutput[(133)] = 0.000000e+00f;
  Conv2dOutput[(389)] = 0.000000e+00f;
  Conv2dOutput[(134)] = 0.000000e+00f;
  Conv2dOutput[(390)] = 0.000000e+00f;
  Conv2dOutput[(135)] = 0.000000e+00f;
  Conv2dOutput[(391)] = 0.000000e+00f;
  Conv2dOutput[(136)] = 0.000000e+00f;
  Conv2dOutput[(392)] = 0.000000e+00f;
  Conv2dOutput[(137)] = 0.000000e+00f;
  Conv2dOutput[(393)] = 0.000000e+00f;
  Conv2dOutput[(138)] = 0.000000e+00f;
  Conv2dOutput[(394)] = 0.000000e+00f;
  Conv2dOutput[(139)] = 0.000000e+00f;
  Conv2dOutput[(395)] = 0.000000e+00f;
  Conv2dOutput[(140)] = 0.000000e+00f;
  Conv2dOutput[(396)] = 0.000000e+00f;
  Conv2dOutput[(141)] = 0.000000e+00f;
  Conv2dOutput[(397)] = 0.000000e+00f;
  Conv2dOutput[(142)] = 0.000000e+00f;
  Conv2dOutput[(398)] = 0.000000e+00f;
  Conv2dOutput[(143)] = 0.000000e+00f;
  Conv2dOutput[(399)] = 0.000000e+00f;
  Conv2dOutput[(144)] = 0.000000e+00f;
  Conv2dOutput[(400)] = 0.000000e+00f;
  Conv2dOutput[(145)] = 0.000000e+00f;
  Conv2dOutput[(401)] = 0.000000e+00f;
  Conv2dOutput[(146)] = 0.000000e+00f;
  Conv2dOutput[(402)] = 0.000000e+00f;
  Conv2dOutput[(147)] = 0.000000e+00f;
  Conv2dOutput[(403)] = 0.000000e+00f;
  Conv2dOutput[(148)] = 0.000000e+00f;
  Conv2dOutput[(404)] = 0.000000e+00f;
  Conv2dOutput[(149)] = 0.000000e+00f;
  Conv2dOutput[(405)] = 0.000000e+00f;
  Conv2dOutput[(150)] = 0.000000e+00f;
  Conv2dOutput[(406)] = 0.000000e+00f;
  Conv2dOutput[(151)] = 0.000000e+00f;
  Conv2dOutput[(407)] = 0.000000e+00f;
  Conv2dOutput[(152)] = 0.000000e+00f;
  Conv2dOutput[(408)] = 0.000000e+00f;
  Conv2dOutput[(153)] = 0.000000e+00f;
  Conv2dOutput[(409)] = 0.000000e+00f;
  Conv2dOutput[(154)] = 0.000000e+00f;
  Conv2dOutput[(410)] = 0.000000e+00f;
  Conv2dOutput[(155)] = 0.000000e+00f;
  Conv2dOutput[(411)] = 0.000000e+00f;
  Conv2dOutput[(156)] = 0.000000e+00f;
  Conv2dOutput[(412)] = 0.000000e+00f;
  Conv2dOutput[(157)] = 0.000000e+00f;
  Conv2dOutput[(413)] = 0.000000e+00f;
  Conv2dOutput[(158)] = 0.000000e+00f;
  Conv2dOutput[(414)] = 0.000000e+00f;
  Conv2dOutput[(159)] = 0.000000e+00f;
  Conv2dOutput[(415)] = 0.000000e+00f;
  Conv2dOutput[(160)] = 0.000000e+00f;
  Conv2dOutput[(416)] = 0.000000e+00f;
  Conv2dOutput[(161)] = 0.000000e+00f;
  Conv2dOutput[(417)] = 0.000000e+00f;
  Conv2dOutput[(162)] = 0.000000e+00f;
  Conv2dOutput[(418)] = 0.000000e+00f;
  Conv2dOutput[(163)] = 0.000000e+00f;
  Conv2dOutput[(419)] = 0.000000e+00f;
  Conv2dOutput[(164)] = 0.000000e+00f;
  Conv2dOutput[(420)] = 0.000000e+00f;
  Conv2dOutput[(165)] = 0.000000e+00f;
  Conv2dOutput[(421)] = 0.000000e+00f;
  Conv2dOutput[(166)] = 0.000000e+00f;
  Conv2dOutput[(422)] = 0.000000e+00f;
  Conv2dOutput[(167)] = 0.000000e+00f;
  Conv2dOutput[(423)] = 0.000000e+00f;
  Conv2dOutput[(168)] = 0.000000e+00f;
  Conv2dOutput[(424)] = 0.000000e+00f;
  Conv2dOutput[(169)] = 0.000000e+00f;
  Conv2dOutput[(425)] = 0.000000e+00f;
  Conv2dOutput[(170)] = 0.000000e+00f;
  Conv2dOutput[(426)] = 0.000000e+00f;
  Conv2dOutput[(171)] = 0.000000e+00f;
  Conv2dOutput[(427)] = 0.000000e+00f;
  Conv2dOutput[(172)] = 0.000000e+00f;
  Conv2dOutput[(428)] = 0.000000e+00f;
  Conv2dOutput[(173)] = 0.000000e+00f;
  Conv2dOutput[(429)] = 0.000000e+00f;
  Conv2dOutput[(174)] = 0.000000e+00f;
  Conv2dOutput[(430)] = 0.000000e+00f;
  Conv2dOutput[(175)] = 0.000000e+00f;
  Conv2dOutput[(431)] = 0.000000e+00f;
  Conv2dOutput[(176)] = 0.000000e+00f;
  Conv2dOutput[(432)] = 0.000000e+00f;
  Conv2dOutput[(177)] = 0.000000e+00f;
  Conv2dOutput[(433)] = 0.000000e+00f;
  Conv2dOutput[(178)] = 0.000000e+00f;
  Conv2dOutput[(434)] = 0.000000e+00f;
  Conv2dOutput[(179)] = 0.000000e+00f;
  Conv2dOutput[(435)] = 0.000000e+00f;
  Conv2dOutput[(180)] = 0.000000e+00f;
  Conv2dOutput[(436)] = 0.000000e+00f;
  Conv2dOutput[(181)] = 0.000000e+00f;
  Conv2dOutput[(437)] = 0.000000e+00f;
  Conv2dOutput[(182)] = 0.000000e+00f;
  Conv2dOutput[(438)] = 0.000000e+00f;
  Conv2dOutput[(183)] = 0.000000e+00f;
  Conv2dOutput[(439)] = 0.000000e+00f;
  Conv2dOutput[(184)] = 0.000000e+00f;
  Conv2dOutput[(440)] = 0.000000e+00f;
  Conv2dOutput[(185)] = 0.000000e+00f;
  Conv2dOutput[(441)] = 0.000000e+00f;
  Conv2dOutput[(186)] = 0.000000e+00f;
  Conv2dOutput[(442)] = 0.000000e+00f;
  Conv2dOutput[(187)] = 0.000000e+00f;
  Conv2dOutput[(443)] = 0.000000e+00f;
  Conv2dOutput[(188)] = 0.000000e+00f;
  Conv2dOutput[(444)] = 0.000000e+00f;
  Conv2dOutput[(189)] = 0.000000e+00f;
  Conv2dOutput[(445)] = 0.000000e+00f;
  Conv2dOutput[(190)] = 0.000000e+00f;
  Conv2dOutput[(446)] = 0.000000e+00f;
  Conv2dOutput[(191)] = 0.000000e+00f;
  Conv2dOutput[(447)] = 0.000000e+00f;
  Conv2dOutput[(192)] = 0.000000e+00f;
  Conv2dOutput[(448)] = 0.000000e+00f;
  Conv2dOutput[(193)] = 0.000000e+00f;
  Conv2dOutput[(449)] = 0.000000e+00f;
  Conv2dOutput[(194)] = 0.000000e+00f;
  Conv2dOutput[(450)] = 0.000000e+00f;
  Conv2dOutput[(195)] = 0.000000e+00f;
  Conv2dOutput[(451)] = 0.000000e+00f;
  Conv2dOutput[(196)] = 0.000000e+00f;
  Conv2dOutput[(452)] = 0.000000e+00f;
  Conv2dOutput[(197)] = 0.000000e+00f;
  Conv2dOutput[(453)] = 0.000000e+00f;
  Conv2dOutput[(198)] = 0.000000e+00f;
  Conv2dOutput[(454)] = 0.000000e+00f;
  Conv2dOutput[(199)] = 0.000000e+00f;
  Conv2dOutput[(455)] = 0.000000e+00f;
  Conv2dOutput[(200)] = 0.000000e+00f;
  Conv2dOutput[(456)] = 0.000000e+00f;
  Conv2dOutput[(201)] = 0.000000e+00f;
  Conv2dOutput[(457)] = 0.000000e+00f;
  Conv2dOutput[(202)] = 0.000000e+00f;
  Conv2dOutput[(458)] = 0.000000e+00f;
  Conv2dOutput[(203)] = 0.000000e+00f;
  Conv2dOutput[(459)] = 0.000000e+00f;
  Conv2dOutput[(204)] = 0.000000e+00f;
  Conv2dOutput[(460)] = 0.000000e+00f;
  Conv2dOutput[(205)] = 0.000000e+00f;
  Conv2dOutput[(461)] = 0.000000e+00f;
  Conv2dOutput[(206)] = 0.000000e+00f;
  Conv2dOutput[(462)] = 0.000000e+00f;
  Conv2dOutput[(207)] = 0.000000e+00f;
  Conv2dOutput[(463)] = 0.000000e+00f;
  Conv2dOutput[(208)] = 0.000000e+00f;
  Conv2dOutput[(464)] = 0.000000e+00f;
  Conv2dOutput[(209)] = 0.000000e+00f;
  Conv2dOutput[(465)] = 0.000000e+00f;
  Conv2dOutput[(210)] = 0.000000e+00f;
  Conv2dOutput[(466)] = 0.000000e+00f;
  Conv2dOutput[(211)] = 0.000000e+00f;
  Conv2dOutput[(467)] = 0.000000e+00f;
  Conv2dOutput[(212)] = 0.000000e+00f;
  Conv2dOutput[(468)] = 0.000000e+00f;
  Conv2dOutput[(213)] = 0.000000e+00f;
  Conv2dOutput[(469)] = 0.000000e+00f;
  Conv2dOutput[(214)] = 0.000000e+00f;
  Conv2dOutput[(470)] = 0.000000e+00f;
  Conv2dOutput[(215)] = 0.000000e+00f;
  Conv2dOutput[(471)] = 0.000000e+00f;
  Conv2dOutput[(216)] = 0.000000e+00f;
  Conv2dOutput[(472)] = 0.000000e+00f;
  Conv2dOutput[(217)] = 0.000000e+00f;
  Conv2dOutput[(473)] = 0.000000e+00f;
  Conv2dOutput[(218)] = 0.000000e+00f;
  Conv2dOutput[(474)] = 0.000000e+00f;
  Conv2dOutput[(219)] = 0.000000e+00f;
  Conv2dOutput[(475)] = 0.000000e+00f;
  Conv2dOutput[(220)] = 0.000000e+00f;
  Conv2dOutput[(476)] = 0.000000e+00f;
  Conv2dOutput[(221)] = 0.000000e+00f;
  Conv2dOutput[(477)] = 0.000000e+00f;
  Conv2dOutput[(222)] = 0.000000e+00f;
  Conv2dOutput[(478)] = 0.000000e+00f;
  Conv2dOutput[(223)] = 0.000000e+00f;
  Conv2dOutput[(479)] = 0.000000e+00f;
  Conv2dOutput[(224)] = 0.000000e+00f;
  Conv2dOutput[(480)] = 0.000000e+00f;
  Conv2dOutput[(225)] = 0.000000e+00f;
  Conv2dOutput[(481)] = 0.000000e+00f;
  Conv2dOutput[(226)] = 0.000000e+00f;
  Conv2dOutput[(482)] = 0.000000e+00f;
  Conv2dOutput[(227)] = 0.000000e+00f;
  Conv2dOutput[(483)] = 0.000000e+00f;
  Conv2dOutput[(228)] = 0.000000e+00f;
  Conv2dOutput[(484)] = 0.000000e+00f;
  Conv2dOutput[(229)] = 0.000000e+00f;
  Conv2dOutput[(485)] = 0.000000e+00f;
  Conv2dOutput[(230)] = 0.000000e+00f;
  Conv2dOutput[(486)] = 0.000000e+00f;
  Conv2dOutput[(231)] = 0.000000e+00f;
  Conv2dOutput[(487)] = 0.000000e+00f;
  Conv2dOutput[(232)] = 0.000000e+00f;
  Conv2dOutput[(488)] = 0.000000e+00f;
  Conv2dOutput[(233)] = 0.000000e+00f;
  Conv2dOutput[(489)] = 0.000000e+00f;
  Conv2dOutput[(234)] = 0.000000e+00f;
  Conv2dOutput[(490)] = 0.000000e+00f;
  Conv2dOutput[(235)] = 0.000000e+00f;
  Conv2dOutput[(491)] = 0.000000e+00f;
  Conv2dOutput[(236)] = 0.000000e+00f;
  Conv2dOutput[(492)] = 0.000000e+00f;
  Conv2dOutput[(237)] = 0.000000e+00f;
  Conv2dOutput[(493)] = 0.000000e+00f;
  Conv2dOutput[(238)] = 0.000000e+00f;
  Conv2dOutput[(494)] = 0.000000e+00f;
  Conv2dOutput[(239)] = 0.000000e+00f;
  Conv2dOutput[(495)] = 0.000000e+00f;
  Conv2dOutput[(240)] = 0.000000e+00f;
  Conv2dOutput[(496)] = 0.000000e+00f;
  Conv2dOutput[(241)] = 0.000000e+00f;
  Conv2dOutput[(497)] = 0.000000e+00f;
  Conv2dOutput[(242)] = 0.000000e+00f;
  Conv2dOutput[(498)] = 0.000000e+00f;
  Conv2dOutput[(243)] = 0.000000e+00f;
  Conv2dOutput[(499)] = 0.000000e+00f;
  Conv2dOutput[(244)] = 0.000000e+00f;
  Conv2dOutput[(500)] = 0.000000e+00f;
  Conv2dOutput[(245)] = 0.000000e+00f;
  Conv2dOutput[(501)] = 0.000000e+00f;
  Conv2dOutput[(246)] = 0.000000e+00f;
  Conv2dOutput[(502)] = 0.000000e+00f;
  Conv2dOutput[(247)] = 0.000000e+00f;
  Conv2dOutput[(503)] = 0.000000e+00f;
  Conv2dOutput[(248)] = 0.000000e+00f;
  Conv2dOutput[(504)] = 0.000000e+00f;
  Conv2dOutput[(249)] = 0.000000e+00f;
  Conv2dOutput[(505)] = 0.000000e+00f;
  Conv2dOutput[(250)] = 0.000000e+00f;
  Conv2dOutput[(506)] = 0.000000e+00f;
  Conv2dOutput[(251)] = 0.000000e+00f;
  Conv2dOutput[(507)] = 0.000000e+00f;
  Conv2dOutput[(252)] = 0.000000e+00f;
  Conv2dOutput[(508)] = 0.000000e+00f;
  Conv2dOutput[(253)] = 0.000000e+00f;
  Conv2dOutput[(509)] = 0.000000e+00f;
  Conv2dOutput[(254)] = 0.000000e+00f;
  Conv2dOutput[(510)] = 0.000000e+00f;
  Conv2dOutput[(255)] = 0.000000e+00f;
  Conv2dOutput[(511)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 32))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 64))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 96))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 128))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 160))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 1280))];
    PaddedInput_shared[((((int)threadIdx.x) + 192))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 224))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 256))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 288))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 320))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 2560))];
    PaddedInput_shared[((((int)threadIdx.x) + 352))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 384))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 416))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 448))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 480))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 3840))];
    PaddedInput_shared[((((int)threadIdx.x) + 512))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 544))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 576))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 608))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 640))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 10240))];
    PaddedInput_shared[((((int)threadIdx.x) + 672))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 672) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 704))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 704) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 736))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 736) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 768))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 768) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 800))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 800) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 832))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 832) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 864))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 864) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 896))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 896) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 928))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 928) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 960))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 960) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 992))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 992) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1024))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1024) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1056))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1056) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1088))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1088) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1120))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1120) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1152))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1152) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1184))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1184) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1216))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1216) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1248))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1248) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1280))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 20480))];
    PaddedInput_shared[((((int)threadIdx.x) + 1312))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1312) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1344))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1344) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1376))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1376) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1408))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1408) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1440))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1440) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1472))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1472) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1504))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1504) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1536))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1536) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1568))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1568) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1600))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1600) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1632))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1632) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1664))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1664) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1696))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1696) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1728))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1728) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1760))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1760) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1792))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1792) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1824))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1824) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1856))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1856) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1888))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1888) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1920))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 30720))];
    PaddedInput_shared[((((int)threadIdx.x) + 1952))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1952) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1984))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 1984) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2016))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2016) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2048))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2048) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2080))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2080) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2112))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2112) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2144))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2144) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2176))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2176) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2208))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2208) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2240))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2240) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2272))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2272) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2304))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2304) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2336))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2336) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2368))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2368) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2400))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2400) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2432))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2432) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2464))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2464) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2496))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2496) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2528))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 40960) + (((((int)threadIdx.x) + 2528) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2560))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 40960) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)) + 327680))];
    PaddedInput_shared[((((int)threadIdx.x) + 2592))] = placeholder[(((((((((((int)threadIdx.x) + 2592) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2624))] = placeholder[(((((((((((int)threadIdx.x) + 2624) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2656))] = placeholder[(((((((((((int)threadIdx.x) + 2656) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2688))] = placeholder[(((((((((((int)threadIdx.x) + 2688) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2720))] = placeholder[(((((((((((int)threadIdx.x) + 2720) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2752))] = placeholder[(((((((((((int)threadIdx.x) + 2752) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2784))] = placeholder[(((((((((((int)threadIdx.x) + 2784) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2816))] = placeholder[(((((((((((int)threadIdx.x) + 2816) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2848))] = placeholder[(((((((((((int)threadIdx.x) + 2848) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2880))] = placeholder[(((((((((((int)threadIdx.x) + 2880) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2912))] = placeholder[(((((((((((int)threadIdx.x) + 2912) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2944))] = placeholder[(((((((((((int)threadIdx.x) + 2944) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 2976))] = placeholder[(((((((((((int)threadIdx.x) + 2976) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3008))] = placeholder[(((((((((((int)threadIdx.x) + 3008) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3040))] = placeholder[(((((((((((int)threadIdx.x) + 3040) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3072))] = placeholder[(((((((((((int)threadIdx.x) + 3072) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3104))] = placeholder[(((((((((((int)threadIdx.x) + 3104) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3136))] = placeholder[(((((((((((int)threadIdx.x) + 3136) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3168))] = placeholder[(((((((((((int)threadIdx.x) + 3168) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3200))] = placeholder[(((((((((((int)threadIdx.x) + 3200) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 640) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3232))] = placeholder[((((((((((((int)threadIdx.x) + 3232) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 672) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3264))] = placeholder[((((((((((((int)threadIdx.x) + 3264) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 704) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3296))] = placeholder[((((((((((((int)threadIdx.x) + 3296) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 736) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3328))] = placeholder[((((((((((((int)threadIdx.x) + 3328) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 768) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3360))] = placeholder[((((((((((((int)threadIdx.x) + 3360) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 800) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3392))] = placeholder[((((((((((((int)threadIdx.x) + 3392) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 832) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3424))] = placeholder[((((((((((((int)threadIdx.x) + 3424) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 864) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3456))] = placeholder[((((((((((((int)threadIdx.x) + 3456) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 896) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3488))] = placeholder[((((((((((((int)threadIdx.x) + 3488) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 928) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3520))] = placeholder[((((((((((((int)threadIdx.x) + 3520) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 960) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3552))] = placeholder[((((((((((((int)threadIdx.x) + 3552) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 992) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3584))] = placeholder[((((((((((((int)threadIdx.x) + 3584) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1024) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3616))] = placeholder[((((((((((((int)threadIdx.x) + 3616) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1056) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3648))] = placeholder[((((((((((((int)threadIdx.x) + 3648) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1088) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3680))] = placeholder[((((((((((((int)threadIdx.x) + 3680) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1120) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3712))] = placeholder[((((((((((((int)threadIdx.x) + 3712) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1152) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3744))] = placeholder[((((((((((((int)threadIdx.x) + 3744) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1184) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3776))] = placeholder[((((((((((((int)threadIdx.x) + 3776) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1216) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3808))] = placeholder[((((((((((((int)threadIdx.x) + 3808) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1248) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3840))] = placeholder[(((((((((((int)threadIdx.x) + 3840) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1280) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3872))] = placeholder[((((((((((((int)threadIdx.x) + 3872) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1312) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3904))] = placeholder[((((((((((((int)threadIdx.x) + 3904) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1344) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3936))] = placeholder[((((((((((((int)threadIdx.x) + 3936) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1376) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3968))] = placeholder[((((((((((((int)threadIdx.x) + 3968) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1408) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4000))] = placeholder[((((((((((((int)threadIdx.x) + 4000) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1440) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4032))] = placeholder[((((((((((((int)threadIdx.x) + 4032) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1472) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4064))] = placeholder[((((((((((((int)threadIdx.x) + 4064) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1504) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4096))] = placeholder[((((((((((((int)threadIdx.x) + 4096) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1536) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4128))] = placeholder[((((((((((((int)threadIdx.x) + 4128) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1568) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4160))] = placeholder[((((((((((((int)threadIdx.x) + 4160) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1600) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4192))] = placeholder[((((((((((((int)threadIdx.x) + 4192) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1632) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4224))] = placeholder[((((((((((((int)threadIdx.x) + 4224) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1664) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4256))] = placeholder[((((((((((((int)threadIdx.x) + 4256) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1696) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4288))] = placeholder[((((((((((((int)threadIdx.x) + 4288) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1728) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4320))] = placeholder[((((((((((((int)threadIdx.x) + 4320) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1760) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4352))] = placeholder[((((((((((((int)threadIdx.x) + 4352) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1792) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4384))] = placeholder[((((((((((((int)threadIdx.x) + 4384) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1824) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4416))] = placeholder[((((((((((((int)threadIdx.x) + 4416) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1856) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4448))] = placeholder[((((((((((((int)threadIdx.x) + 4448) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1888) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4480))] = placeholder[(((((((((((int)threadIdx.x) + 4480) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1920) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4512))] = placeholder[((((((((((((int)threadIdx.x) + 4512) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1952) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 32) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4544))] = placeholder[((((((((((((int)threadIdx.x) + 4544) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 1984) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 64) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4576))] = placeholder[((((((((((((int)threadIdx.x) + 4576) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2016) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 96) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4608))] = placeholder[((((((((((((int)threadIdx.x) + 4608) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2048) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 128) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4640))] = placeholder[((((((((((((int)threadIdx.x) + 4640) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2080) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 160) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4672))] = placeholder[((((((((((((int)threadIdx.x) + 4672) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2112) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 192) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4704))] = placeholder[((((((((((((int)threadIdx.x) + 4704) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2144) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 224) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4736))] = placeholder[((((((((((((int)threadIdx.x) + 4736) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2176) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 256) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4768))] = placeholder[((((((((((((int)threadIdx.x) + 4768) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2208) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 288) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4800))] = placeholder[((((((((((((int)threadIdx.x) + 4800) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2240) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 320) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4832))] = placeholder[((((((((((((int)threadIdx.x) + 4832) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2272) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 352) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4864))] = placeholder[((((((((((((int)threadIdx.x) + 4864) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2304) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 384) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4896))] = placeholder[((((((((((((int)threadIdx.x) + 4896) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2336) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 416) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4928))] = placeholder[((((((((((((int)threadIdx.x) + 4928) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2368) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 448) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4960))] = placeholder[((((((((((((int)threadIdx.x) + 4960) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2400) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 480) / 40) * 320)) + (rc_outer_outer * 40)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 4992))] = placeholder[((((((((((((int)threadIdx.x) + 4992) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2432) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 512) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 5024))] = placeholder[((((((((((((int)threadIdx.x) + 5024) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2464) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 544) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 5056))] = placeholder[((((((((((((int)threadIdx.x) + 5056) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2496) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 576) / 40) * 320)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 5088))] = placeholder[((((((((((((int)threadIdx.x) + 5088) / 2560) * 327680) + ((((int)blockIdx.x) >> 1) * 40960)) + (((((int)threadIdx.x) + 2528) / 640) * 10240)) + ((((int)blockIdx.x) & 1) * 5120)) + (((((int)threadIdx.x) + 608) / 40) * 320)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) + 8)))];
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((rc_outer_outer * 5120) + ((int)threadIdx.x)))];
    placeholder_shared[((((int)threadIdx.x) + 32))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 32))];
    placeholder_shared[((((int)threadIdx.x) + 64))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 64))];
    placeholder_shared[((((int)threadIdx.x) + 96))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 96))];
    placeholder_shared[((((int)threadIdx.x) + 128))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 128))];
    placeholder_shared[((((int)threadIdx.x) + 160))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 160))];
    placeholder_shared[((((int)threadIdx.x) + 192))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 192))];
    placeholder_shared[((((int)threadIdx.x) + 224))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 224))];
    placeholder_shared[((((int)threadIdx.x) + 256))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 256))];
    placeholder_shared[((((int)threadIdx.x) + 288))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 288))];
    placeholder_shared[((((int)threadIdx.x) + 320))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 320))];
    placeholder_shared[((((int)threadIdx.x) + 352))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 352))];
    placeholder_shared[((((int)threadIdx.x) + 384))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 384))];
    placeholder_shared[((((int)threadIdx.x) + 416))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 416))];
    placeholder_shared[((((int)threadIdx.x) + 448))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 448))];
    placeholder_shared[((((int)threadIdx.x) + 480))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 480))];
    placeholder_shared[((((int)threadIdx.x) + 512))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 512))];
    placeholder_shared[((((int)threadIdx.x) + 544))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 544))];
    placeholder_shared[((((int)threadIdx.x) + 576))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 576))];
    placeholder_shared[((((int)threadIdx.x) + 608))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 608))];
    placeholder_shared[((((int)threadIdx.x) + 640))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 640))];
    placeholder_shared[((((int)threadIdx.x) + 672))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 672))];
    placeholder_shared[((((int)threadIdx.x) + 704))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 704))];
    placeholder_shared[((((int)threadIdx.x) + 736))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 736))];
    placeholder_shared[((((int)threadIdx.x) + 768))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 768))];
    placeholder_shared[((((int)threadIdx.x) + 800))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 800))];
    placeholder_shared[((((int)threadIdx.x) + 832))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 832))];
    placeholder_shared[((((int)threadIdx.x) + 864))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 864))];
    placeholder_shared[((((int)threadIdx.x) + 896))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 896))];
    placeholder_shared[((((int)threadIdx.x) + 928))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 928))];
    placeholder_shared[((((int)threadIdx.x) + 960))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 960))];
    placeholder_shared[((((int)threadIdx.x) + 992))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 992))];
    placeholder_shared[((((int)threadIdx.x) + 1024))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1024))];
    placeholder_shared[((((int)threadIdx.x) + 1056))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1056))];
    placeholder_shared[((((int)threadIdx.x) + 1088))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1088))];
    placeholder_shared[((((int)threadIdx.x) + 1120))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1120))];
    placeholder_shared[((((int)threadIdx.x) + 1152))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1152))];
    placeholder_shared[((((int)threadIdx.x) + 1184))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1184))];
    placeholder_shared[((((int)threadIdx.x) + 1216))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1216))];
    placeholder_shared[((((int)threadIdx.x) + 1248))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1248))];
    placeholder_shared[((((int)threadIdx.x) + 1280))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1280))];
    placeholder_shared[((((int)threadIdx.x) + 1312))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1312))];
    placeholder_shared[((((int)threadIdx.x) + 1344))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1344))];
    placeholder_shared[((((int)threadIdx.x) + 1376))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1376))];
    placeholder_shared[((((int)threadIdx.x) + 1408))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1408))];
    placeholder_shared[((((int)threadIdx.x) + 1440))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1440))];
    placeholder_shared[((((int)threadIdx.x) + 1472))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1472))];
    placeholder_shared[((((int)threadIdx.x) + 1504))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1504))];
    placeholder_shared[((((int)threadIdx.x) + 1536))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1536))];
    placeholder_shared[((((int)threadIdx.x) + 1568))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1568))];
    placeholder_shared[((((int)threadIdx.x) + 1600))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1600))];
    placeholder_shared[((((int)threadIdx.x) + 1632))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1632))];
    placeholder_shared[((((int)threadIdx.x) + 1664))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1664))];
    placeholder_shared[((((int)threadIdx.x) + 1696))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1696))];
    placeholder_shared[((((int)threadIdx.x) + 1728))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1728))];
    placeholder_shared[((((int)threadIdx.x) + 1760))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1760))];
    placeholder_shared[((((int)threadIdx.x) + 1792))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1792))];
    placeholder_shared[((((int)threadIdx.x) + 1824))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1824))];
    placeholder_shared[((((int)threadIdx.x) + 1856))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1856))];
    placeholder_shared[((((int)threadIdx.x) + 1888))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1888))];
    placeholder_shared[((((int)threadIdx.x) + 1920))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1920))];
    placeholder_shared[((((int)threadIdx.x) + 1952))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1952))];
    placeholder_shared[((((int)threadIdx.x) + 1984))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 1984))];
    placeholder_shared[((((int)threadIdx.x) + 2016))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2016))];
    placeholder_shared[((((int)threadIdx.x) + 2048))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2048))];
    placeholder_shared[((((int)threadIdx.x) + 2080))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2080))];
    placeholder_shared[((((int)threadIdx.x) + 2112))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2112))];
    placeholder_shared[((((int)threadIdx.x) + 2144))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2144))];
    placeholder_shared[((((int)threadIdx.x) + 2176))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2176))];
    placeholder_shared[((((int)threadIdx.x) + 2208))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2208))];
    placeholder_shared[((((int)threadIdx.x) + 2240))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2240))];
    placeholder_shared[((((int)threadIdx.x) + 2272))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2272))];
    placeholder_shared[((((int)threadIdx.x) + 2304))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2304))];
    placeholder_shared[((((int)threadIdx.x) + 2336))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2336))];
    placeholder_shared[((((int)threadIdx.x) + 2368))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2368))];
    placeholder_shared[((((int)threadIdx.x) + 2400))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2400))];
    placeholder_shared[((((int)threadIdx.x) + 2432))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2432))];
    placeholder_shared[((((int)threadIdx.x) + 2464))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2464))];
    placeholder_shared[((((int)threadIdx.x) + 2496))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2496))];
    placeholder_shared[((((int)threadIdx.x) + 2528))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2528))];
    placeholder_shared[((((int)threadIdx.x) + 2560))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2560))];
    placeholder_shared[((((int)threadIdx.x) + 2592))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2592))];
    placeholder_shared[((((int)threadIdx.x) + 2624))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2624))];
    placeholder_shared[((((int)threadIdx.x) + 2656))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2656))];
    placeholder_shared[((((int)threadIdx.x) + 2688))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2688))];
    placeholder_shared[((((int)threadIdx.x) + 2720))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2720))];
    placeholder_shared[((((int)threadIdx.x) + 2752))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2752))];
    placeholder_shared[((((int)threadIdx.x) + 2784))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2784))];
    placeholder_shared[((((int)threadIdx.x) + 2816))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2816))];
    placeholder_shared[((((int)threadIdx.x) + 2848))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2848))];
    placeholder_shared[((((int)threadIdx.x) + 2880))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2880))];
    placeholder_shared[((((int)threadIdx.x) + 2912))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2912))];
    placeholder_shared[((((int)threadIdx.x) + 2944))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2944))];
    placeholder_shared[((((int)threadIdx.x) + 2976))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 2976))];
    placeholder_shared[((((int)threadIdx.x) + 3008))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3008))];
    placeholder_shared[((((int)threadIdx.x) + 3040))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3040))];
    placeholder_shared[((((int)threadIdx.x) + 3072))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3072))];
    placeholder_shared[((((int)threadIdx.x) + 3104))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3104))];
    placeholder_shared[((((int)threadIdx.x) + 3136))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3136))];
    placeholder_shared[((((int)threadIdx.x) + 3168))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3168))];
    placeholder_shared[((((int)threadIdx.x) + 3200))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3200))];
    placeholder_shared[((((int)threadIdx.x) + 3232))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3232))];
    placeholder_shared[((((int)threadIdx.x) + 3264))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3264))];
    placeholder_shared[((((int)threadIdx.x) + 3296))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3296))];
    placeholder_shared[((((int)threadIdx.x) + 3328))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3328))];
    placeholder_shared[((((int)threadIdx.x) + 3360))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3360))];
    placeholder_shared[((((int)threadIdx.x) + 3392))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3392))];
    placeholder_shared[((((int)threadIdx.x) + 3424))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3424))];
    placeholder_shared[((((int)threadIdx.x) + 3456))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3456))];
    placeholder_shared[((((int)threadIdx.x) + 3488))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3488))];
    placeholder_shared[((((int)threadIdx.x) + 3520))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3520))];
    placeholder_shared[((((int)threadIdx.x) + 3552))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3552))];
    placeholder_shared[((((int)threadIdx.x) + 3584))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3584))];
    placeholder_shared[((((int)threadIdx.x) + 3616))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3616))];
    placeholder_shared[((((int)threadIdx.x) + 3648))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3648))];
    placeholder_shared[((((int)threadIdx.x) + 3680))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3680))];
    placeholder_shared[((((int)threadIdx.x) + 3712))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3712))];
    placeholder_shared[((((int)threadIdx.x) + 3744))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3744))];
    placeholder_shared[((((int)threadIdx.x) + 3776))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3776))];
    placeholder_shared[((((int)threadIdx.x) + 3808))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3808))];
    placeholder_shared[((((int)threadIdx.x) + 3840))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3840))];
    placeholder_shared[((((int)threadIdx.x) + 3872))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3872))];
    placeholder_shared[((((int)threadIdx.x) + 3904))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3904))];
    placeholder_shared[((((int)threadIdx.x) + 3936))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3936))];
    placeholder_shared[((((int)threadIdx.x) + 3968))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 3968))];
    placeholder_shared[((((int)threadIdx.x) + 4000))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4000))];
    placeholder_shared[((((int)threadIdx.x) + 4032))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4032))];
    placeholder_shared[((((int)threadIdx.x) + 4064))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4064))];
    placeholder_shared[((((int)threadIdx.x) + 4096))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4096))];
    placeholder_shared[((((int)threadIdx.x) + 4128))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4128))];
    placeholder_shared[((((int)threadIdx.x) + 4160))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4160))];
    placeholder_shared[((((int)threadIdx.x) + 4192))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4192))];
    placeholder_shared[((((int)threadIdx.x) + 4224))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4224))];
    placeholder_shared[((((int)threadIdx.x) + 4256))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4256))];
    placeholder_shared[((((int)threadIdx.x) + 4288))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4288))];
    placeholder_shared[((((int)threadIdx.x) + 4320))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4320))];
    placeholder_shared[((((int)threadIdx.x) + 4352))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4352))];
    placeholder_shared[((((int)threadIdx.x) + 4384))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4384))];
    placeholder_shared[((((int)threadIdx.x) + 4416))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4416))];
    placeholder_shared[((((int)threadIdx.x) + 4448))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4448))];
    placeholder_shared[((((int)threadIdx.x) + 4480))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4480))];
    placeholder_shared[((((int)threadIdx.x) + 4512))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4512))];
    placeholder_shared[((((int)threadIdx.x) + 4544))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4544))];
    placeholder_shared[((((int)threadIdx.x) + 4576))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4576))];
    placeholder_shared[((((int)threadIdx.x) + 4608))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4608))];
    placeholder_shared[((((int)threadIdx.x) + 4640))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4640))];
    placeholder_shared[((((int)threadIdx.x) + 4672))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4672))];
    placeholder_shared[((((int)threadIdx.x) + 4704))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4704))];
    placeholder_shared[((((int)threadIdx.x) + 4736))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4736))];
    placeholder_shared[((((int)threadIdx.x) + 4768))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4768))];
    placeholder_shared[((((int)threadIdx.x) + 4800))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4800))];
    placeholder_shared[((((int)threadIdx.x) + 4832))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4832))];
    placeholder_shared[((((int)threadIdx.x) + 4864))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4864))];
    placeholder_shared[((((int)threadIdx.x) + 4896))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4896))];
    placeholder_shared[((((int)threadIdx.x) + 4928))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4928))];
    placeholder_shared[((((int)threadIdx.x) + 4960))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4960))];
    placeholder_shared[((((int)threadIdx.x) + 4992))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 4992))];
    placeholder_shared[((((int)threadIdx.x) + 5024))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 5024))];
    placeholder_shared[((((int)threadIdx.x) + 5056))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 5056))];
    placeholder_shared[((((int)threadIdx.x) + 5088))] = placeholder1[((((rc_outer_outer * 5120) + ((int)threadIdx.x)) + 5088))];
    __syncthreads();
    for (int yy_outer_inner = 0; yy_outer_inner < 4; ++yy_outer_inner) {
      for (int xx_outer_inner = 0; xx_outer_inner < 2; ++xx_outer_inner) {
        for (int ff_outer_inner = 0; ff_outer_inner < 32; ++ff_outer_inner) {
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2560))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 1))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 128))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2561))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 128))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 256))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2562))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 256))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 3))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 384))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2563))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 384))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 4))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 512))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2564))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 512))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 5))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 640))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2565))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 640))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 6))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 768))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2566))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 768))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 7))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 896))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2567))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 896))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 8))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1024))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2568))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1024))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 9))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1152))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2569))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1152))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1280))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2570))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1280))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 11))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1408))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2571))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1408))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 12))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1536))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2572))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1536))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 13))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1664))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2573))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1664))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 14))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1792))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2574))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1792))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 15))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1920))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2575))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 1920))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 16))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2048))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2576))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2048))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 17))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2176))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2577))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2176))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 18))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2304))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2578))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2304))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 19))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2432))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2579))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2432))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 20))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2560))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2580))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2560))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 21))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2688))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2581))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2688))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 22))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2816))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2582))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2816))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 23))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2944))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2583))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 2944))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 24))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3072))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2584))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3072))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 25))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3200))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2585))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3200))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 26))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3328))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2586))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3328))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 27))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3456))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2587))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3456))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 28))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3584))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2588))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3584))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 29))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3712))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2589))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3712))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 30))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3840))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2590))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3840))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 31))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3968))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2591))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 3968))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 32))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4096))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2592))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4096))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 33))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4224))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2593))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4224))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 34))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4352))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2594))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4352))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 35))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4480))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2595))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4480))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 36))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4608))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2596))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4608))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 37))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4736))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2597))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4736))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 38))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4864))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2598))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4864))]));
          Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] = (Conv2dOutput[((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 39))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4992))]));
          Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] = (Conv2dOutput[(((((yy_outer_inner * 64) + (xx_outer_inner * 32)) + ff_outer_inner) + 256))] + (PaddedInput_shared[(((((yy_outer_inner * 640) + ((((int)threadIdx.x) >> 2) * 80)) + (xx_outer_inner * 40)) + 2599))] * placeholder_shared[(((((((int)threadIdx.x) & 3) * 32) + ff_outer_inner) + 4992))]));
        }
      }
    }
  }
  for (int ax1_inner = 0; ax1_inner < 4; ++ax1_inner) {
    for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
      for (int ax3_inner = 0; ax3_inner < 32; ++ax3_inner) {
        T_relu[(((((((((((int)blockIdx.x) >> 1) * 16384) + (ax1_inner * 4096)) + ((((int)blockIdx.x) & 1) * 2048)) + ((((int)threadIdx.x) >> 2) * 256)) + (ax2_inner * 128)) + ((((int)threadIdx.x) & 3) * 32)) + ax3_inner))] = max((Conv2dOutput[((((ax1_inner * 64) + (ax2_inner * 32)) + ax3_inner))] + placeholder2[((((((int)threadIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
        T_relu[((((((((((((int)blockIdx.x) >> 1) * 16384) + (ax1_inner * 4096)) + ((((int)blockIdx.x) & 1) * 2048)) + ((((int)threadIdx.x) >> 2) * 256)) + (ax2_inner * 128)) + ((((int)threadIdx.x) & 3) * 32)) + ax3_inner) + 131072))] = max((Conv2dOutput[(((((ax1_inner * 64) + (ax2_inner * 32)) + ax3_inner) + 256))] + placeholder2[((((((int)threadIdx.x) & 3) * 32) + ax3_inner))]), 0.000000e+00f);
      }
    }
  }
}


