
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[32];
  __shared__ float PaddedInput_shared[256];
  __shared__ float placeholder_shared[1024];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 28; ++rc_outer_outer) {
    __syncthreads();
    if (((int)threadIdx.x) < 64) {
      PaddedInput_shared[((((int)threadIdx.x) * 4))] = placeholder[(((((((((((int)threadIdx.x) >> 4) * 175616) + ((((int)blockIdx.x) / 14) * 25088)) + (((((int)threadIdx.x) & 15) >> 2) * 6272)) + ((((int)blockIdx.x) % 14) * 448)) + (((((int)threadIdx.x) & 3) >> 1) * 224)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    }
    if (((int)threadIdx.x) < 64) {
      PaddedInput_shared[(((((int)threadIdx.x) * 4) + 1))] = placeholder[(((((((((((((int)threadIdx.x) * 4) + 1) >> 6) * 175616) + ((((int)blockIdx.x) / 14) * 25088)) + (((((((int)threadIdx.x) * 4) + 1) & 63) >> 4) * 6272)) + ((((int)blockIdx.x) % 14) * 448)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 224)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    }
    if (((int)threadIdx.x) < 64) {
      PaddedInput_shared[(((((int)threadIdx.x) * 4) + 2))] = placeholder[(((((((((((((int)threadIdx.x) * 4) + 2) >> 6) * 175616) + ((((int)blockIdx.x) / 14) * 25088)) + (((((((int)threadIdx.x) * 4) + 2) & 63) >> 4) * 6272)) + ((((int)blockIdx.x) % 14) * 448)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 224)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    }
    if (((int)threadIdx.x) < 64) {
      PaddedInput_shared[(((((int)threadIdx.x) * 4) + 3))] = placeholder[(((((((((((((int)threadIdx.x) * 4) + 3) >> 6) * 175616) + ((((int)blockIdx.x) / 14) * 25088)) + (((((((int)threadIdx.x) * 4) + 3) & 63) >> 4) * 6272)) + ((((int)blockIdx.x) % 14) * 448)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 224)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    }
    ((float2*)(placeholder_shared + ((((int)threadIdx.x) * 2))))[0] = ((float2*)(placeholder1 + (((rc_outer_outer * 1024) + (((int)threadIdx.x) * 2)))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 256))))[0] = ((float2*)(placeholder1 + ((((rc_outer_outer * 1024) + (((int)threadIdx.x) * 2)) + 256))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 512))))[0] = ((float2*)(placeholder1 + ((((rc_outer_outer * 1024) + (((int)threadIdx.x) * 2)) + 512))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 768))))[0] = ((float2*)(placeholder1 + ((((rc_outer_outer * 1024) + (((int)threadIdx.x) * 2)) + 768))))[0];
    __syncthreads();
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 6) * 128))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 6) * 128))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 8))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 16))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 24))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 16))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 24))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 64))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 72))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 64))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 72))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 80))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 88))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 80))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 88))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 1))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 9))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 1))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 9))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 17))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 25))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 17))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 25))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 65))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 73))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 65))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 73))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 81))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 89))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 81))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 89))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 2))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 2))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 18))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 26))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 18))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 26))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 66))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 74))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 66))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 74))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 82))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 90))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 82))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 90))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 3))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 11))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 3))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 11))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 19))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 27))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 19))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 27))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 67))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 75))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 67))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 75))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 83))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 91))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 83))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 91))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 32))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 40))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 32))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 40))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 48))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 56))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 48))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 56))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 96))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 104))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 96))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 104))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 112))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 120))] * placeholder_shared[(((((int)threadIdx.x) & 63) * 2))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 112))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 120))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 1))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 33))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 41))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 33))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 41))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 49))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 57))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 49))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 57))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 97))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 105))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 97))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 105))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 113))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 121))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 128))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 113))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 121))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 129))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 34))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 42))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 34))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 42))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 50))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 58))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 50))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 58))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 98))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 106))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 98))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 106))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 114))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 122))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 256))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 114))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 122))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 257))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 35))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 43))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 35))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 43))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 51))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 59))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 51))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 59))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 99))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 107))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 99))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 107))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 115))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 123))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 384))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 115))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 123))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 385))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 4))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 12))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 4))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 12))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 20))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 28))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 20))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 28))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 68))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 76))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 68))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 76))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 84))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 92))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 84))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 92))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 5))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 13))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 5))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 13))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 21))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 29))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 21))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 29))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 69))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 77))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 69))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 77))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 85))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 93))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 85))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 93))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 6))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 14))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 6))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 14))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 22))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 30))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 22))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 30))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 70))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 78))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 70))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 78))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 86))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 94))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 86))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 94))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 7))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 15))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 7))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 15))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 23))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 31))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 23))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 31))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 71))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 79))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 71))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 79))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 87))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 95))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 87))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 95))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 36))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 44))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 36))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 44))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 52))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 60))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 52))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 60))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 100))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 108))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 100))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 108))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 116))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 124))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 512))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 116))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 124))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 513))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 37))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 45))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 37))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 45))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 53))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 61))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 53))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 61))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 101))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 109))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 101))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 109))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 117))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 125))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 640))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 117))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 125))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 641))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 38))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 46))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 38))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 46))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 54))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 62))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 54))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 62))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 102))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 110))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 102))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 110))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 118))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 126))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 768))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 118))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 126))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 769))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 39))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 47))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 39))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 47))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 55))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 63))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 55))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 63))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 103))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 111))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 103))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 111))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 119))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 127))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 896))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 119))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 6) * 128) + 127))] * placeholder_shared[((((((int)threadIdx.x) & 63) * 2) + 897))]));
  }
  for (int ax0_inner = 0; ax0_inner < 2; ++ax0_inner) {
    for (int ax1_inner = 0; ax1_inner < 4; ++ax1_inner) {
      for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
        T_relu[(((((((((((int)threadIdx.x) >> 6) * 200704) + (ax0_inner * 100352)) + ((((int)blockIdx.x) / 14) * 14336)) + (ax1_inner * 3584)) + ((((int)blockIdx.x) % 14) * 256)) + ((((int)threadIdx.x) & 63) * 2)) + ax3_inner))] = max((Conv2dOutput[((((ax0_inner * 8) + (ax1_inner * 2)) + ax3_inner))] + placeholder2[((((((int)threadIdx.x) & 63) * 2) + ax3_inner))]), 0.000000e+00f);
        T_relu[((((((((((((int)threadIdx.x) >> 6) * 200704) + (ax0_inner * 100352)) + ((((int)blockIdx.x) / 14) * 14336)) + (ax1_inner * 3584)) + ((((int)blockIdx.x) % 14) * 256)) + ((((int)threadIdx.x) & 63) * 2)) + ax3_inner) + 128))] = max((Conv2dOutput[(((((ax0_inner * 8) + (ax1_inner * 2)) + ax3_inner) + 16))] + placeholder2[((((((int)threadIdx.x) & 63) * 2) + ax3_inner))]), 0.000000e+00f);
      }
    }
  }
}


