
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float Conv2dOutput[16];
  __shared__ float PaddedInput_shared[3840];
  __shared__ float placeholder_shared[2400];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)threadIdx.x) / 240) * 3840) + (((int)blockIdx.x) * 1920)) + (((((int)threadIdx.x) % 240) / 30) * 240)) + (rc_outer_outer * 30)) + (((int)threadIdx.x) % 30)))];
    PaddedInput_shared[((((int)threadIdx.x) + 640))] = placeholder[((((((((((int)threadIdx.x) + 640) / 240) * 3840) + (((int)blockIdx.x) * 1920)) + ((((((int)threadIdx.x) + 160) % 240) / 30) * 240)) + (rc_outer_outer * 30)) + ((((int)threadIdx.x) + 10) % 30)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1280))] = placeholder[((((((((((int)threadIdx.x) + 1280) / 240) * 3840) + (((int)blockIdx.x) * 1920)) + ((((((int)threadIdx.x) + 80) % 240) / 30) * 240)) + (rc_outer_outer * 30)) + ((((int)threadIdx.x) + 20) % 30)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1920))] = placeholder[((((((((((int)threadIdx.x) / 240) * 3840) + (((int)blockIdx.x) * 1920)) + (((((int)threadIdx.x) % 240) / 30) * 240)) + (rc_outer_outer * 30)) + (((int)threadIdx.x) % 30)) + 30720))];
    PaddedInput_shared[((((int)threadIdx.x) + 2560))] = placeholder[((((((((((int)threadIdx.x) + 2560) / 240) * 3840) + (((int)blockIdx.x) * 1920)) + ((((((int)threadIdx.x) + 160) % 240) / 30) * 240)) + (rc_outer_outer * 30)) + ((((int)threadIdx.x) + 10) % 30)))];
    PaddedInput_shared[((((int)threadIdx.x) + 3200))] = placeholder[((((((((((int)threadIdx.x) + 3200) / 240) * 3840) + (((int)blockIdx.x) * 1920)) + ((((((int)threadIdx.x) + 80) % 240) / 30) * 240)) + (rc_outer_outer * 30)) + ((((int)threadIdx.x) + 20) % 30)))];
    placeholder_shared[((((int)threadIdx.x) * 3))] = placeholder1[(((rc_outer_outer * 2400) + (((int)threadIdx.x) * 3)))];
    placeholder_shared[(((((int)threadIdx.x) * 3) + 1))] = placeholder1[(((rc_outer_outer * 2400) + ((((int)threadIdx.x) * 3) + 1)))];
    placeholder_shared[(((((int)threadIdx.x) * 3) + 2))] = placeholder1[(((rc_outer_outer * 2400) + ((((int)threadIdx.x) * 3) + 2)))];
    if (((int)threadIdx.x) < 160) {
      placeholder_shared[(((((int)threadIdx.x) * 3) + 1920))] = placeholder1[((((rc_outer_outer * 2400) + (((int)threadIdx.x) * 3)) + 1920))];
    }
    if (((int)threadIdx.x) < 160) {
      placeholder_shared[(((((int)threadIdx.x) * 3) + 1921))] = placeholder1[((((rc_outer_outer * 2400) + ((((int)threadIdx.x) * 3) + 1)) + 1920))];
    }
    if (((int)threadIdx.x) < 160) {
      placeholder_shared[(((((int)threadIdx.x) * 3) + 1922))] = placeholder1[((((rc_outer_outer * 2400) + ((((int)threadIdx.x) * 3) + 2)) + 1920))];
    }
    __syncthreads();
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((int)threadIdx.x) / 20) * 120))] * placeholder_shared[(((((int)threadIdx.x) % 20) * 4))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((int)threadIdx.x) / 20) * 120))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((int)threadIdx.x) / 20) * 120))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((int)threadIdx.x) / 20) * 120))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 3))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 30))] * placeholder_shared[(((((int)threadIdx.x) % 20) * 4))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 30))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 30))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 30))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 3))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 60))] * placeholder_shared[(((((int)threadIdx.x) % 20) * 4))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 60))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 60))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 60))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 3))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 90))] * placeholder_shared[(((((int)threadIdx.x) % 20) * 4))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 90))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 90))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 90))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 3))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 80))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 81))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 82))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 83))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 31))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 80))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 31))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 81))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 31))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 82))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 31))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 83))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 61))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 80))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 61))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 81))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 61))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 82))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 61))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 83))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 91))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 80))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 91))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 81))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 91))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 82))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 91))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 83))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 160))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 161))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 162))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 163))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 160))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 161))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 162))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 163))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 62))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 160))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 62))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 161))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 62))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 162))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 62))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 163))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 92))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 160))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 92))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 161))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 92))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 162))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 92))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 163))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 240))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 241))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 242))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 243))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 240))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 241))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 242))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 243))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 63))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 240))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 63))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 241))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 63))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 242))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 63))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 243))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 93))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 240))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 93))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 241))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 93))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 242))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 93))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 243))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 320))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 321))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 322))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 323))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 320))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 321))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 322))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 323))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 64))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 320))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 64))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 321))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 64))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 322))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 64))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 323))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 94))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 320))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 94))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 321))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 94))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 322))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 94))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 323))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 400))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 401))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 402))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 403))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 400))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 401))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 402))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 403))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 65))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 400))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 65))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 401))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 65))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 402))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 65))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 403))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 95))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 400))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 95))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 401))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 95))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 402))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 95))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 403))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 480))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 481))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 482))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 483))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 480))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 481))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 482))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 483))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 66))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 480))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 66))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 481))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 66))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 482))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 66))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 483))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 96))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 480))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 96))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 481))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 96))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 482))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 96))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 483))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 560))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 561))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 562))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 563))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 560))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 561))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 562))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 563))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 67))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 560))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 67))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 561))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 67))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 562))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 67))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 563))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 97))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 560))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 97))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 561))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 97))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 562))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 97))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 563))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 8))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 640))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 8))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 641))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 8))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 642))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 8))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 643))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 640))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 641))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 642))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 643))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 68))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 640))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 68))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 641))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 68))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 642))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 68))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 643))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 98))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 640))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 98))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 641))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 98))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 642))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 98))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 643))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 9))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 720))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 9))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 721))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 9))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 722))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 9))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 723))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 720))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 721))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 722))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 723))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 69))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 720))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 69))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 721))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 69))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 722))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 69))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 723))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 99))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 720))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 99))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 721))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 99))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 722))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 99))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 723))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 10))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 800))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 10))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 801))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 10))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 802))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 10))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 803))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 40))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 800))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 40))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 801))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 40))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 802))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 40))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 803))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 70))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 800))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 70))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 801))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 70))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 802))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 70))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 803))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 100))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 800))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 100))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 801))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 100))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 802))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 100))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 803))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 11))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 880))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 11))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 881))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 11))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 882))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 11))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 883))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 41))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 880))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 41))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 881))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 41))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 882))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 41))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 883))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 71))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 880))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 71))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 881))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 71))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 882))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 71))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 883))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 101))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 880))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 101))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 881))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 101))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 882))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 101))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 883))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 12))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 960))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 12))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 961))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 12))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 962))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 12))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 963))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 42))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 960))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 42))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 961))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 42))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 962))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 42))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 963))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 72))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 960))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 72))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 961))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 72))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 962))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 72))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 963))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 102))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 960))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 102))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 961))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 102))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 962))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 102))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 963))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 13))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1040))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 13))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1041))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 13))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1042))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 13))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1043))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 43))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1040))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 43))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1041))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 43))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1042))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 43))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1043))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 73))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1040))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 73))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1041))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 73))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1042))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 73))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1043))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 103))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1040))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 103))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1041))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 103))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1042))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 103))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1043))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 14))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1120))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 14))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1121))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 14))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1122))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 14))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1123))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 44))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1120))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 44))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1121))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 44))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1122))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 44))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1123))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 74))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1120))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 74))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1121))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 74))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1122))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 74))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1123))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 104))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1120))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 104))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1121))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 104))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1122))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 104))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1123))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 15))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1200))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 15))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1201))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 15))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1202))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 15))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1203))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 45))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1200))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 45))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1201))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 45))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1202))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 45))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1203))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 75))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1200))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 75))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1201))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 75))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1202))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 75))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1203))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 105))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1200))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 105))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1201))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 105))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1202))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 105))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1203))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1280))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1281))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1282))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1283))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 46))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1280))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 46))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1281))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 46))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1282))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 46))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1283))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 76))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1280))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 76))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1281))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 76))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1282))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 76))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1283))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 106))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1280))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 106))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1281))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 106))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1282))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 106))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1283))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1360))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1361))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1362))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1363))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 47))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1360))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 47))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1361))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 47))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1362))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 47))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1363))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 77))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1360))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 77))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1361))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 77))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1362))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 77))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1363))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 107))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1360))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 107))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1361))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 107))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1362))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 107))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1363))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1440))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1441))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1442))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1443))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 48))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1440))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 48))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1441))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 48))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1442))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 48))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1443))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 78))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1440))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 78))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1441))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 78))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1442))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 78))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1443))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 108))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1440))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 108))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1441))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 108))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1442))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 108))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1443))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1520))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1521))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1522))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1523))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 49))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1520))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 49))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1521))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 49))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1522))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 49))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1523))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 79))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1520))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 79))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1521))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 79))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1522))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 79))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1523))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 109))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1520))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 109))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1521))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 109))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1522))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 109))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1523))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1600))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1601))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1602))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1603))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 50))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1600))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 50))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1601))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 50))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1602))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 50))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1603))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 80))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1600))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 80))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1601))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 80))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1602))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 80))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1603))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 110))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1600))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 110))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1601))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 110))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1602))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 110))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1603))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1680))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1681))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1682))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1683))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 51))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1680))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 51))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1681))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 51))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1682))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 51))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1683))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 81))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1680))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 81))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1681))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 81))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1682))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 81))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1683))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 111))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1680))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 111))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1681))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 111))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1682))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 111))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1683))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1760))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1761))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1762))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1763))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 52))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1760))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 52))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1761))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 52))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1762))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 52))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1763))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 82))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1760))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 82))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1761))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 82))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1762))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 82))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1763))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 112))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1760))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 112))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1761))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 112))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1762))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 112))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1763))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1840))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1841))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1842))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1843))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 53))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1840))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 53))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1841))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 53))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1842))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 53))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1843))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 83))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1840))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 83))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1841))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 83))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1842))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 83))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1843))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 113))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1840))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 113))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1841))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 113))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1842))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 113))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1843))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 24))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1920))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 24))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1921))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 24))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1922))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 24))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1923))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 54))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1920))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 54))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1921))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 54))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1922))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 54))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1923))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 84))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1920))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 84))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1921))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 84))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1922))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 84))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1923))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 114))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1920))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 114))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1921))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 114))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1922))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 114))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 1923))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 25))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2000))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 25))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2001))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 25))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2002))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 25))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2003))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 55))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2000))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 55))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2001))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 55))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2002))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 55))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2003))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 85))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2000))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 85))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2001))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 85))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2002))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 85))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2003))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 115))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2000))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 115))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2001))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 115))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2002))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 115))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2003))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 26))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2080))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 26))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2081))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 26))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2082))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 26))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2083))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 56))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2080))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 56))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2081))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 56))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2082))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 56))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2083))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 86))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2080))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 86))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2081))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 86))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2082))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 86))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2083))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 116))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2080))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 116))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2081))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 116))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2082))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 116))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2083))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 27))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2160))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 27))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2161))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 27))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2162))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 27))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2163))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 57))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2160))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 57))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2161))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 57))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2162))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 57))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2163))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 87))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2160))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 87))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2161))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 87))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2162))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 87))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2163))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 117))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2160))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 117))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2161))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 117))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2162))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 117))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2163))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 28))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2240))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 28))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2241))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 28))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2242))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 28))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2243))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 58))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2240))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 58))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2241))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 58))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2242))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 58))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2243))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 88))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2240))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 88))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2241))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 88))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2242))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 88))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2243))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 118))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2240))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 118))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2241))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 118))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2242))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 118))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2243))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 29))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2320))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 29))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2321))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 29))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2322))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 29))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2323))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 59))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2320))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 59))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2321))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 59))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2322))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 59))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2323))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 89))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2320))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 89))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2321))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 89))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2322))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 89))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2323))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 119))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2320))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 119))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2321))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 119))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2322))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) / 20) * 120) + 119))] * placeholder_shared[((((((int)threadIdx.x) % 20) * 4) + 2323))]));
  }
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_add[((((((((((int)threadIdx.x) / 40) * 1280) + (((int)blockIdx.x) * 640)) + (((((int)threadIdx.x) % 40) / 20) * 320)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner))] = (Conv2dOutput[(((ax2_inner * 4) + ax3_inner))] + placeholder2[((((((int)threadIdx.x) % 20) * 4) + ax3_inner))]);
    }
  }
}


