
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3, float* __restrict__ placeholder4) {
  float Conv3dOutput[12544];
  __shared__ float PaddedInput_shared[1728];
  __shared__ float placeholder_shared[3456];
  for (int dd_outer_inner_init = 0; dd_outer_inner_init < 14; ++dd_outer_inner_init) {
    for (int nn_inner_init = 0; nn_inner_init < 4; ++nn_inner_init) {
      for (int hh_inner_init = 0; hh_inner_init < 7; ++hh_inner_init) {
        Conv3dOutput[((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6272))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 1))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6273))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 2))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6274))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 3))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6275))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 4))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6276))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 5))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6277))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6278))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 7))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6279))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 8))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6280))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 9))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6281))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 10))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6282))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 11))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6283))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 12))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6284))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 13))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6285))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 14))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6286))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 15))] = 0.000000e+00f;
        Conv3dOutput[(((((nn_inner_init * 1568) + (dd_outer_inner_init * 112)) + (hh_inner_init * 16)) + 6287))] = 0.000000e+00f;
      }
    }
  }
  for (int rc_outer_outer = 0; rc_outer_outer < 512; ++rc_outer_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer < 16; ++ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer) {
      PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 1))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 2))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 3))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 4))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 3584))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 5))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 6))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 7))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 3072))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 8))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 9))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 10))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 2560))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 11))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 12))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 13))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 2048))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 14))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 15))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 16))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 1536))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 17))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 18))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 19))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 1024))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 20))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 21))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 22))] = (((1 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15)) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) < 15)) ? placeholder[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) >> 4) * 50176) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 4) + ((int)threadIdx.x)) & 15) * 3584)) + rc_outer_outer) - 512))] : 0.000000e+00f);
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 23))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 24))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 25))] = 0.000000e+00f;
      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer * 108) + (((int)threadIdx.x) * 27)) + 26))] = 0.000000e+00f;
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 < 864; ++ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1) {
      placeholder_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 4) + ((int)threadIdx.x)))] = placeholder1[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 4) + ((int)threadIdx.x)) >> 7) * 262144) + (rc_outer_outer * 512)) + (((int)blockIdx.x) * 128)) + (((ax0_ax1_fused_ax2_fused_ax3_fused_ax4_fused_outer_outer1 * 4) + ((int)threadIdx.x)) & 127)))];
    }
    __syncthreads();
    for (int rd_outer_inner = 0; rd_outer_inner < 3; ++rd_outer_inner) {
      for (int rh_outer_inner = 0; rh_outer_inner < 3; ++rh_outer_inner) {
        for (int dd_outer_inner = 0; dd_outer_inner < 14; ++dd_outer_inner) {
          for (int rw_inner = 0; rw_inner < 3; ++rw_inner) {
            for (int nn_inner = 0; nn_inner < 4; ++nn_inner) {
              for (int hh_inner = 0; hh_inner < 7; ++hh_inner) {
                Conv3dOutput[((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)))] = (Conv3dOutput[((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[(((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6272))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6272))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 64))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 1))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 1))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 1))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6273))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6273))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 65))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 2))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 2))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 2))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6274))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6274))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 66))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 3))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 3))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 3))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6275))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6275))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 67))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 4))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 4))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 4))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6276))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6276))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 68))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 5))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 5))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 5))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6277))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6277))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 69))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 6))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6278))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6278))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 70))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 7))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 7))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 7))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6279))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6279))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 71))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 8))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 8))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 8))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6280))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6280))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 72))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 9))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 9))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 9))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6281))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6281))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 73))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 10))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 10))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 10))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6282))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6282))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 74))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 11))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 11))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 11))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6283))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6283))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 75))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 12))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 12))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 12))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6284))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6284))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 76))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 13))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 13))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 13))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6285))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6285))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 77))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 14))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 14))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 14))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6286))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6286))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 78))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 15))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 15))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 15))]));
                Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6287))] = (Conv3dOutput[(((((nn_inner * 1568) + (dd_outer_inner * 112)) + (hh_inner * 16)) + 6287))] + (PaddedInput_shared[(((((((nn_inner * 432) + (dd_outer_inner * 27)) + (rd_outer_inner * 27)) + (hh_inner * 3)) + (rh_outer_inner * 3)) + rw_inner))] * placeholder_shared[((((((rd_outer_inner * 1152) + (rh_outer_inner * 384)) + (rw_inner * 128)) + (((int)threadIdx.x) * 16)) + 79))]));
              }
            }
          }
        }
      }
    }
  }
  for (int ax0_inner = 0; ax0_inner < 4; ++ax0_inner) {
    for (int ax1_inner = 0; ax1_inner < 14; ++ax1_inner) {
      for (int ax2_inner = 0; ax2_inner < 7; ++ax2_inner) {
        for (int ax4_inner = 0; ax4_inner < 16; ++ax4_inner) {
          T_relu[(((((((ax0_inner * 50176) + (ax1_inner * 3584)) + (ax2_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 16)) + ax4_inner))] = max((((Conv3dOutput[(((((ax0_inner * 1568) + (ax1_inner * 112)) + (ax2_inner * 16)) + ax4_inner))] * placeholder2[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 16)) + ax4_inner))]) + placeholder3[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 16)) + ax4_inner))]) + placeholder4[(((((((ax0_inner * 50176) + (ax1_inner * 3584)) + (ax2_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 16)) + ax4_inner))]), 0.000000e+00f);
          T_relu[((((((((ax0_inner * 50176) + (ax1_inner * 3584)) + (ax2_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 16)) + ax4_inner) + 64))] = max((((Conv3dOutput[((((((ax0_inner * 1568) + (ax1_inner * 112)) + (ax2_inner * 16)) + ax4_inner) + 6272))] * placeholder2[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 16)) + ax4_inner) + 64))]) + placeholder3[(((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 16)) + ax4_inner) + 64))]) + placeholder4[((((((((ax0_inner * 50176) + (ax1_inner * 3584)) + (ax2_inner * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) * 16)) + ax4_inner) + 64))]), 0.000000e+00f);
        }
      }
    }
  }
}


