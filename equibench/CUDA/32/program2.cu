
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel1(float* __restrict__ T_multiply, float* __restrict__ Conv2dOutput, float* __restrict__ placeholder) {
  T_multiply[(((((int)blockIdx.x) * 32) + ((int)threadIdx.x)))] = ((Conv2dOutput[(((((int)blockIdx.x) * 32) + ((int)threadIdx.x)))] + placeholder[((((((int)blockIdx.x) * 32) + ((int)threadIdx.x)) % 240))]) * (max(min(((Conv2dOutput[(((((int)blockIdx.x) * 32) + ((int)threadIdx.x)))] + placeholder[((((((int)blockIdx.x) * 32) + ((int)threadIdx.x)) % 240))]) + 3.000000e+00f), 6.000000e+00f), 0.000000e+00f) * 1.666667e-01f));
}

extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ Conv2dOutput) {
  float Conv2dOutput_local[30];
  __shared__ float PaddedInput_shared[480];
  __shared__ float placeholder_shared[480];
  Conv2dOutput_local[(0)] = 0.000000e+00f;
  Conv2dOutput_local[(1)] = 0.000000e+00f;
  Conv2dOutput_local[(2)] = 0.000000e+00f;
  Conv2dOutput_local[(3)] = 0.000000e+00f;
  Conv2dOutput_local[(4)] = 0.000000e+00f;
  Conv2dOutput_local[(5)] = 0.000000e+00f;
  Conv2dOutput_local[(6)] = 0.000000e+00f;
  Conv2dOutput_local[(7)] = 0.000000e+00f;
  Conv2dOutput_local[(8)] = 0.000000e+00f;
  Conv2dOutput_local[(9)] = 0.000000e+00f;
  Conv2dOutput_local[(10)] = 0.000000e+00f;
  Conv2dOutput_local[(11)] = 0.000000e+00f;
  Conv2dOutput_local[(12)] = 0.000000e+00f;
  Conv2dOutput_local[(13)] = 0.000000e+00f;
  Conv2dOutput_local[(14)] = 0.000000e+00f;
  Conv2dOutput_local[(15)] = 0.000000e+00f;
  Conv2dOutput_local[(16)] = 0.000000e+00f;
  Conv2dOutput_local[(17)] = 0.000000e+00f;
  Conv2dOutput_local[(18)] = 0.000000e+00f;
  Conv2dOutput_local[(19)] = 0.000000e+00f;
  Conv2dOutput_local[(20)] = 0.000000e+00f;
  Conv2dOutput_local[(21)] = 0.000000e+00f;
  Conv2dOutput_local[(22)] = 0.000000e+00f;
  Conv2dOutput_local[(23)] = 0.000000e+00f;
  Conv2dOutput_local[(24)] = 0.000000e+00f;
  Conv2dOutput_local[(25)] = 0.000000e+00f;
  Conv2dOutput_local[(26)] = 0.000000e+00f;
  Conv2dOutput_local[(27)] = 0.000000e+00f;
  Conv2dOutput_local[(28)] = 0.000000e+00f;
  Conv2dOutput_local[(29)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 5; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[((((((((((int)blockIdx.x) / 60) * 36000) + ((((int)threadIdx.x) >> 4) * 1200)) + (((((int)blockIdx.x) % 60) >> 2) * 80)) + (((((int)threadIdx.x) & 15) >> 3) * 40)) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)))];
    PaddedInput_shared[((((int)threadIdx.x) + 120))] = placeholder[((((((((((int)blockIdx.x) / 60) * 36000) + (((((int)threadIdx.x) + 120) >> 4) * 1200)) + (((((int)blockIdx.x) % 60) >> 2) * 80)) + ((((((int)threadIdx.x) >> 3) + 1) & 1) * 40)) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)))];
    PaddedInput_shared[((((int)threadIdx.x) + 240))] = placeholder[(((((((((((int)blockIdx.x) / 60) * 36000) + ((((int)threadIdx.x) >> 4) * 1200)) + (((((int)blockIdx.x) % 60) >> 2) * 80)) + (((((int)threadIdx.x) & 15) >> 3) * 40)) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 18000))];
    PaddedInput_shared[((((int)threadIdx.x) + 360))] = placeholder[((((((((((int)blockIdx.x) / 60) * 36000) + (((((int)threadIdx.x) + 360) >> 4) * 1200)) + (((((int)blockIdx.x) % 60) >> 2) * 80)) + ((((((int)threadIdx.x) >> 3) + 1) & 1) * 40)) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)))];
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((((rc_outer_outer * 1920) + ((((int)threadIdx.x) / 60) * 240)) + ((((int)blockIdx.x) & 3) * 60)) + (((int)threadIdx.x) % 60)))];
    placeholder_shared[((((int)threadIdx.x) + 120))] = placeholder1[((((((rc_outer_outer * 1920) + ((((int)threadIdx.x) / 60) * 240)) + ((((int)blockIdx.x) & 3) * 60)) + (((int)threadIdx.x) % 60)) + 480))];
    placeholder_shared[((((int)threadIdx.x) + 240))] = placeholder1[((((((rc_outer_outer * 1920) + ((((int)threadIdx.x) / 60) * 240)) + ((((int)blockIdx.x) & 3) * 60)) + (((int)threadIdx.x) % 60)) + 960))];
    placeholder_shared[((((int)threadIdx.x) + 360))] = placeholder1[((((((rc_outer_outer * 1920) + ((((int)threadIdx.x) / 60) * 240)) + ((((int)blockIdx.x) & 3) * 60)) + (((int)threadIdx.x) % 60)) + 1440))];
    __syncthreads();
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[(((((int)threadIdx.x) % 6) * 10))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 1))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 2))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 3))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 4))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 5))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 6))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 7))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 8))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 9))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[(((((int)threadIdx.x) % 6) * 10))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 1))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 2))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 3))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 4))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 5))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 6))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 7))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 8))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 9))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[(((((int)threadIdx.x) % 6) * 10))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 1))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 2))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 3))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 4))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 5))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 6))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 7))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 8))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 9))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 60))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 61))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 62))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 63))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 64))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 65))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 66))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 67))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 68))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 69))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 60))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 61))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 62))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 63))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 64))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 65))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 66))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 67))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 68))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 69))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 60))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 61))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 62))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 63))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 64))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 65))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 66))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 67))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 68))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 69))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 120))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 121))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 122))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 123))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 124))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 125))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 126))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 127))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 128))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 129))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 120))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 121))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 122))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 123))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 124))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 125))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 126))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 127))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 128))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 129))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 120))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 121))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 122))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 123))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 124))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 125))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 126))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 127))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 128))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 129))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 180))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 181))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 182))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 183))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 184))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 185))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 186))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 187))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 188))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 189))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 180))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 181))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 182))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 183))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 184))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 185))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 186))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 187))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 188))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 189))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 180))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 181))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 182))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 183))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 184))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 185))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 186))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 187))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 188))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 189))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 240))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 241))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 242))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 243))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 244))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 245))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 246))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 247))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 248))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 249))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 240))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 241))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 242))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 243))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 244))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 245))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 246))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 247))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 248))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 249))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 240))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 241))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 242))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 243))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 244))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 245))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 246))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 247))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 248))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 249))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 300))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 301))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 302))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 303))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 304))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 305))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 306))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 307))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 308))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 309))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 300))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 301))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 302))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 303))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 304))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 305))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 306))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 307))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 308))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 309))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 300))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 301))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 302))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 303))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 304))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 305))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 306))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 307))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 308))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 309))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 360))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 361))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 362))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 363))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 364))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 365))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 366))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 367))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 368))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 369))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 360))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 361))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 362))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 363))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 364))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 365))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 366))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 367))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 368))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 369))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 360))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 361))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 362))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 363))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 364))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 365))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 366))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 367))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 368))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 369))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 420))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 421))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 422))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 423))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 424))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 425))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 426))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 427))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 428))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 429))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 420))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 421))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 422))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 423))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 424))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 425))]));
    Conv2dOutput_local[(16)] = (Conv2dOutput_local[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 426))]));
    Conv2dOutput_local[(17)] = (Conv2dOutput_local[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 427))]));
    Conv2dOutput_local[(18)] = (Conv2dOutput_local[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 428))]));
    Conv2dOutput_local[(19)] = (Conv2dOutput_local[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 429))]));
    Conv2dOutput_local[(20)] = (Conv2dOutput_local[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 420))]));
    Conv2dOutput_local[(21)] = (Conv2dOutput_local[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 421))]));
    Conv2dOutput_local[(22)] = (Conv2dOutput_local[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 422))]));
    Conv2dOutput_local[(23)] = (Conv2dOutput_local[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 423))]));
    Conv2dOutput_local[(24)] = (Conv2dOutput_local[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 424))]));
    Conv2dOutput_local[(25)] = (Conv2dOutput_local[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 425))]));
    Conv2dOutput_local[(26)] = (Conv2dOutput_local[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 426))]));
    Conv2dOutput_local[(27)] = (Conv2dOutput_local[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 427))]));
    Conv2dOutput_local[(28)] = (Conv2dOutput_local[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 428))]));
    Conv2dOutput_local[(29)] = (Conv2dOutput_local[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 12) * 48) + (((((int)threadIdx.x) % 12) / 6) * 8)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 6) * 10) + 429))]));
  }
  for (int yy_inner = 0; yy_inner < 3; ++yy_inner) {
    for (int ff_inner = 0; ff_inner < 10; ++ff_inner) {
      Conv2dOutput[((((((((((((int)blockIdx.x) / 60) * 216000) + ((((int)threadIdx.x) / 12) * 21600)) + (yy_inner * 7200)) + (((((int)blockIdx.x) % 60) >> 2) * 480)) + (((((int)threadIdx.x) % 12) / 6) * 240)) + ((((int)blockIdx.x) & 3) * 60)) + ((((int)threadIdx.x) % 6) * 10)) + ff_inner))] = Conv2dOutput_local[(((yy_inner * 10) + ff_inner))];
    }
  }
}


