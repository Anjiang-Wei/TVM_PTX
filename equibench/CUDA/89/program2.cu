
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel1(float* __restrict__ T_multiply, float* __restrict__ Conv2dOutput, float* __restrict__ placeholder) {
  T_multiply[(((((int)blockIdx.x) * 32) + ((int)threadIdx.x)))] = ((Conv2dOutput[(((((int)blockIdx.x) * 32) + ((int)threadIdx.x)))] + placeholder[((((((int)blockIdx.x) * 32) + ((int)threadIdx.x)) % 184))]) * (max(min(((Conv2dOutput[(((((int)blockIdx.x) * 32) + ((int)threadIdx.x)))] + placeholder[((((((int)blockIdx.x) * 32) + ((int)threadIdx.x)) % 184))]) + 3.000000e+00f), 6.000000e+00f), 0.000000e+00f) * 1.666667e-01f));
}

extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ Conv2dOutput) {
  float Conv2dOutput_local[16];
  __shared__ float PaddedInput_shared[2560];
  __shared__ float placeholder_shared[3680];
  Conv2dOutput_local[(0)] = 0.000000e+00f;
  Conv2dOutput_local[(8)] = 0.000000e+00f;
  Conv2dOutput_local[(1)] = 0.000000e+00f;
  Conv2dOutput_local[(9)] = 0.000000e+00f;
  Conv2dOutput_local[(2)] = 0.000000e+00f;
  Conv2dOutput_local[(10)] = 0.000000e+00f;
  Conv2dOutput_local[(3)] = 0.000000e+00f;
  Conv2dOutput_local[(11)] = 0.000000e+00f;
  Conv2dOutput_local[(4)] = 0.000000e+00f;
  Conv2dOutput_local[(12)] = 0.000000e+00f;
  Conv2dOutput_local[(5)] = 0.000000e+00f;
  Conv2dOutput_local[(13)] = 0.000000e+00f;
  Conv2dOutput_local[(6)] = 0.000000e+00f;
  Conv2dOutput_local[(14)] = 0.000000e+00f;
  Conv2dOutput_local[(7)] = 0.000000e+00f;
  Conv2dOutput_local[(15)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 2; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)threadIdx.x) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + (((((int)threadIdx.x) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 368))] = placeholder[((((((((((int)threadIdx.x) + 368) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + ((((((int)threadIdx.x) + 48) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 8) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 736))] = placeholder[((((((((((int)threadIdx.x) + 736) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + ((((((int)threadIdx.x) + 96) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 16) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1104))] = placeholder[((((((((((int)threadIdx.x) + 1104) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + ((((((int)threadIdx.x) + 144) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 24) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1472))] = placeholder[((((((((((int)threadIdx.x) + 1472) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + ((((((int)threadIdx.x) + 32) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 32) % 40)))];
    PaddedInput_shared[((((int)threadIdx.x) + 1840))] = placeholder[((((((((((int)threadIdx.x) + 1840) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + ((((((int)threadIdx.x) + 80) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + (((int)threadIdx.x) % 40)))];
    if (((int)threadIdx.x) < 352) {
      PaddedInput_shared[((((int)threadIdx.x) + 2208))] = placeholder[((((((((((int)threadIdx.x) + 2208) / 160) * 1280) + ((((int)blockIdx.x) >> 1) * 320)) + ((((((int)threadIdx.x) + 128) % 160) / 40) * 80)) + (rc_outer_outer * 40)) + ((((int)threadIdx.x) + 8) % 40)))];
    }
    ((float2*)(placeholder_shared + ((((int)threadIdx.x) * 2))))[0] = ((float2*)(placeholder1 + (((((rc_outer_outer * 7360) + ((((int)threadIdx.x) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 736))))[0] = ((float2*)(placeholder1 + ((((((rc_outer_outer * 7360) + ((((int)threadIdx.x) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)) + 1472))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 1472))))[0] = ((float2*)(placeholder1 + ((((((rc_outer_outer * 7360) + ((((int)threadIdx.x) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)) + 2944))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 2208))))[0] = ((float2*)(placeholder1 + ((((((rc_outer_outer * 7360) + ((((int)threadIdx.x) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)) + 4416))))[0];
    ((float2*)(placeholder_shared + (((((int)threadIdx.x) * 2) + 2944))))[0] = ((float2*)(placeholder1 + ((((((rc_outer_outer * 7360) + ((((int)threadIdx.x) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)) + 5888))))[0];
    __syncthreads();
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 80))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 80))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 81))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 1))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 81))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 160))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 240))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 160))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 240))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 161))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 241))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 161))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 241))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 320))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 400))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 320))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 400))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 321))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 401))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 321))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 401))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 480))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 560))] * placeholder_shared[(((((int)threadIdx.x) % 46) * 2))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 480))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 560))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 481))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 561))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 92))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 481))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 561))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 93))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 82))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 2))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 82))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 83))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 3))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 83))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 162))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 242))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 162))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 242))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 163))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 243))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 163))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 243))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 322))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 402))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 322))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 402))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 323))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 403))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 323))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 403))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 482))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 562))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 184))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 482))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 562))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 185))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 483))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 563))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 276))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 483))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 563))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 277))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 84))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 4))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 84))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 85))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 5))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 85))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 164))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 244))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 164))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 244))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 165))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 245))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 165))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 245))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 324))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 404))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 324))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 404))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 325))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 405))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 325))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 405))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 484))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 564))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 368))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 484))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 564))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 369))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 485))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 565))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 460))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 485))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 565))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 461))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 86))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 6))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 86))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 87))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 7))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 87))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 166))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 246))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 166))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 246))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 167))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 247))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 167))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 247))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 326))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 406))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 326))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 406))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 327))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 407))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 327))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 407))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 486))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 566))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 552))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 486))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 566))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 553))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 487))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 567))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 644))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 487))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 567))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 645))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 8))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 88))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 8))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 88))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 9))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 89))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 9))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 89))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 168))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 248))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 168))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 248))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 169))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 249))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 169))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 249))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 328))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 408))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 328))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 408))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 329))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 409))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 329))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 409))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 488))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 568))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 736))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 488))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 568))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 737))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 489))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 569))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 828))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 489))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 569))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 829))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 10))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 90))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 10))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 90))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 11))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 91))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 11))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 91))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 170))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 250))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 170))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 250))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 171))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 251))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 171))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 251))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 330))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 410))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 330))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 410))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 331))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 411))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 331))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 411))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 490))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 570))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 920))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 490))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 570))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 921))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 491))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 571))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1012))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 491))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 571))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1013))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 12))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 92))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 12))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 92))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 13))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 93))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 13))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 93))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 172))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 252))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 172))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 252))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 173))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 253))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 173))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 253))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 332))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 412))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 332))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 412))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 333))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 413))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 333))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 413))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 492))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 572))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1104))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 492))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 572))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1105))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 493))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 573))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1196))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 493))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 573))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1197))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 14))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 94))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 14))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 94))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 15))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 95))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 15))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 95))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 174))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 254))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 174))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 254))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 175))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 255))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 175))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 255))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 334))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 414))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 334))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 414))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 335))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 415))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 335))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 415))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 494))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 574))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1288))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 494))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 574))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1289))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 495))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 575))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1380))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 495))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 575))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1381))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 96))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 16))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 96))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 97))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 17))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 97))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 176))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 256))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 176))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 256))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 177))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 257))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 177))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 257))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 336))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 416))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 336))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 416))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 337))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 417))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 337))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 417))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 496))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 576))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1472))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 496))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 576))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1473))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 497))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 577))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1564))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 497))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 577))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1565))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 98))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 18))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 98))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 99))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 19))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 99))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 178))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 258))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 178))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 258))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 179))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 259))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 179))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 259))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 338))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 418))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 338))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 418))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 339))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 419))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 339))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 419))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 498))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 578))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1656))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 498))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 578))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1657))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 499))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 579))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1748))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 499))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 579))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1749))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 100))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 20))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 100))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 101))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 21))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 101))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 180))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 260))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 180))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 260))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 181))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 261))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 181))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 261))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 340))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 420))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 340))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 420))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 341))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 421))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 341))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 421))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 500))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 580))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1840))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 500))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 580))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1841))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 501))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 581))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1932))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 501))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 581))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 1933))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 102))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 22))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 102))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 103))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 23))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 103))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 182))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 262))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 182))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 262))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 183))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 263))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 183))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 263))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 342))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 422))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 342))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 422))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 343))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 423))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 343))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 423))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 502))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 582))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2024))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 502))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 582))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2025))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 503))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 583))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2116))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 503))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 583))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2117))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 24))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 104))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 24))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 104))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 25))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 105))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 25))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 105))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 184))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 264))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 184))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 264))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 185))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 265))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 185))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 265))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 344))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 424))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 344))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 424))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 345))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 425))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 345))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 425))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 504))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 584))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2208))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 504))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 584))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2209))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 505))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 585))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2300))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 505))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 585))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2301))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 26))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 106))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 26))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 106))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 27))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 107))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 27))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 107))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 186))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 266))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 186))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 266))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 187))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 267))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 187))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 267))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 346))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 426))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 346))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 426))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 347))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 427))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 347))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 427))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 506))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 586))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2392))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 506))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 586))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2393))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 507))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 587))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2484))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 507))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 587))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2485))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 28))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 108))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 28))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 108))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 29))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 109))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 29))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 109))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 188))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 268))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 188))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 268))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 189))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 269))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 189))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 269))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 348))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 428))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 348))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 428))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 349))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 429))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 349))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 429))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 508))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 588))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2576))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 508))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 588))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2577))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 509))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 589))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2668))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 509))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 589))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2669))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 30))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 110))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 30))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 110))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 31))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 111))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 31))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 111))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 190))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 270))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 190))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 270))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 191))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 271))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 191))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 271))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 350))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 430))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 350))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 430))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 351))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 431))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 351))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 431))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 510))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 590))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2760))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 510))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 590))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2761))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 511))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 591))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2852))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 511))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 591))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2853))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 112))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 32))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 112))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 113))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 33))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 113))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 192))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 272))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 192))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 272))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 193))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 273))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 193))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 273))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 352))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 432))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 352))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 432))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 353))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 433))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 353))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 433))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 512))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 592))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2944))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 512))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 592))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 2945))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 513))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 593))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3036))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 513))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 593))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3037))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 114))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 34))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 114))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 115))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 35))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 115))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 194))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 274))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 194))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 274))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 195))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 275))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 195))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 275))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 354))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 434))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 354))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 434))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 355))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 435))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 355))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 435))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 514))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 594))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3128))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 514))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 594))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3129))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 515))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 595))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3220))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 515))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 595))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3221))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 116))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 36))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 116))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 117))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 37))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 117))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 196))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 276))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 196))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 276))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 197))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 277))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 197))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 277))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 356))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 436))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 356))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 436))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 357))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 437))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 357))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 437))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 516))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 596))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3312))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 516))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 596))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3313))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 517))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 597))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3404))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 517))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 597))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3405))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 118))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 38))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 118))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(0)] = (Conv2dOutput_local[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(8)] = (Conv2dOutput_local[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 119))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(1)] = (Conv2dOutput_local[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 39))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(9)] = (Conv2dOutput_local[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 119))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 198))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 278))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 198))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 278))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(2)] = (Conv2dOutput_local[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 199))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(10)] = (Conv2dOutput_local[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 279))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(3)] = (Conv2dOutput_local[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 199))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(11)] = (Conv2dOutput_local[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 279))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 358))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 438))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 358))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 438))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(4)] = (Conv2dOutput_local[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 359))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(12)] = (Conv2dOutput_local[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 439))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(5)] = (Conv2dOutput_local[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 359))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(13)] = (Conv2dOutput_local[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 439))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 518))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 598))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3496))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 518))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 598))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3497))]));
    Conv2dOutput_local[(6)] = (Conv2dOutput_local[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 519))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(14)] = (Conv2dOutput_local[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 599))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3588))]));
    Conv2dOutput_local[(7)] = (Conv2dOutput_local[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 519))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
    Conv2dOutput_local[(15)] = (Conv2dOutput_local[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 92) * 640) + (((((int)threadIdx.x) % 92) / 46) * 40)) + 599))] * placeholder_shared[((((((int)threadIdx.x) % 46) * 2) + 3589))]));
  }
  for (int yy_inner = 0; yy_inner < 4; ++yy_inner) {
    for (int ff_inner = 0; ff_inner < 2; ++ff_inner) {
      Conv2dOutput[(((((((((((int)threadIdx.x) / 92) * 11776) + (yy_inner * 2944)) + ((((int)blockIdx.x) >> 1) * 736)) + (((((int)threadIdx.x) % 92) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)) + ff_inner))] = Conv2dOutput_local[(((yy_inner * 2) + ff_inner))];
      Conv2dOutput[((((((((((((int)threadIdx.x) / 92) * 11776) + (yy_inner * 2944)) + ((((int)blockIdx.x) >> 1) * 736)) + (((((int)threadIdx.x) % 92) / 46) * 184)) + ((((int)blockIdx.x) & 1) * 92)) + ((((int)threadIdx.x) % 46) * 2)) + ff_inner) + 368))] = Conv2dOutput_local[((((yy_inner * 2) + ff_inner) + 8))];
    }
  }
}


