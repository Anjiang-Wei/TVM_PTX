
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv3dOutput[128];
  __shared__ float PaddedInput_shared[4608];
  __shared__ float placeholder_shared[1152];
  for (int nn_outer_inner_init = 0; nn_outer_inner_init < 2; ++nn_outer_inner_init) {
    Conv3dOutput[((nn_outer_inner_init * 64))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 1))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 4))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 5))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 16))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 17))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 20))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 21))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 32))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 33))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 36))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 37))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 48))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 49))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 52))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 53))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 2))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 3))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 6))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 7))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 18))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 19))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 22))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 23))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 34))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 35))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 38))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 39))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 50))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 51))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 54))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 55))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 8))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 9))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 12))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 13))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 24))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 25))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 28))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 29))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 40))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 41))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 44))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 45))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 56))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 57))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 60))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 61))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 10))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 11))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 14))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 15))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 26))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 27))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 30))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 31))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 42))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 43))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 46))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 47))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 58))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 59))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 62))] = 0.000000e+00f;
    Conv3dOutput[(((nn_outer_inner_init * 64) + 63))] = 0.000000e+00f;
  }
  for (int rd_outer_outer = 0; rd_outer_outer < 3; ++rd_outer_outer) {
    for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
      __syncthreads();
      PaddedInput_shared[(((int)threadIdx.x))] = ((((((1 <= ((((((int)blockIdx.x) >> 4) * 16) + (((int)threadIdx.x) / 72)) + rd_outer_outer)) && (1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((int)threadIdx.x) % 72) / 12)))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((int)threadIdx.x) % 72) / 12)) < 33)) && (2 <= (((int)threadIdx.x) % 12))) && ((((int)threadIdx.x) % 12) < 10)) ? placeholder[(((((((((((((int)blockIdx.x) >> 4) * 262144) + ((((int)threadIdx.x) / 72) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((int)threadIdx.x) % 72) / 12) * 512)) + (((((int)threadIdx.x) % 12) >> 1) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 512))] = (((((1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 4) % 36) / 6))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 4) % 36) / 6)) < 33)) && (1 <= (((((int)threadIdx.x) >> 1) + 4) % 6))) && ((((((int)threadIdx.x) >> 1) + 4) % 6) < 5)) ? placeholder[(((((((((((((int)blockIdx.x) >> 4) * 262144) + (((((int)threadIdx.x) + 512) / 72) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 4) % 36) / 6) * 512)) + ((((((int)threadIdx.x) >> 1) + 4) % 6) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 1024))] = (((((((1 <= ((((((int)blockIdx.x) >> 4) * 16) + ((((((int)threadIdx.x) >> 1) + 512) % 576) / 36)) + rd_outer_outer)) && (((((((int)blockIdx.x) >> 4) * 16) + ((((((int)threadIdx.x) >> 1) + 512) % 576) / 36)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 8) % 36) / 6)))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 8) % 36) / 6)) < 33)) && (1 <= (((((int)threadIdx.x) >> 1) + 2) % 6))) && ((((((int)threadIdx.x) >> 1) + 2) % 6) < 5)) ? placeholder[(((((((((((((((int)threadIdx.x) + 1024) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + (((((((int)threadIdx.x) >> 1) + 512) % 576) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 8) % 36) / 6) * 512)) + ((((((int)threadIdx.x) >> 1) + 2) % 6) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 1536))] = (((((1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 12) % 36) / 6))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 12) % 36) / 6)) < 33)) && (2 <= (((int)threadIdx.x) % 12))) && ((((int)threadIdx.x) % 12) < 10)) ? placeholder[(((((((((((((((int)threadIdx.x) + 1536) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + ((((((int)threadIdx.x) >> 1) + 192) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 12) % 36) / 6) * 512)) + (((((int)threadIdx.x) % 12) >> 1) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 2048))] = (((((((1 <= ((((((int)blockIdx.x) >> 4) * 16) + ((((((int)threadIdx.x) >> 1) + 448) % 576) / 36)) + rd_outer_outer)) && (((((((int)blockIdx.x) >> 4) * 16) + ((((((int)threadIdx.x) >> 1) + 448) % 576) / 36)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 16) % 36) / 6)))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 16) % 36) / 6)) < 33)) && (1 <= (((((int)threadIdx.x) >> 1) + 4) % 6))) && ((((((int)threadIdx.x) >> 1) + 4) % 6) < 5)) ? placeholder[(((((((((((((((int)threadIdx.x) + 2048) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + (((((((int)threadIdx.x) >> 1) + 448) % 576) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 16) % 36) / 6) * 512)) + ((((((int)threadIdx.x) >> 1) + 4) % 6) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 2560))] = (((((1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 20) % 36) / 6))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 20) % 36) / 6)) < 33)) && (1 <= (((((int)threadIdx.x) >> 1) + 2) % 6))) && ((((((int)threadIdx.x) >> 1) + 2) % 6) < 5)) ? placeholder[(((((((((((((((int)threadIdx.x) + 2560) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + ((((((int)threadIdx.x) >> 1) + 128) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 20) % 36) / 6) * 512)) + ((((((int)threadIdx.x) >> 1) + 2) % 6) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 3072))] = (((((((1 <= ((((((int)blockIdx.x) >> 4) * 16) + ((((((int)threadIdx.x) >> 1) + 384) % 576) / 36)) + rd_outer_outer)) && (((((((int)blockIdx.x) >> 4) * 16) + ((((((int)threadIdx.x) >> 1) + 384) % 576) / 36)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 24) % 36) / 6)))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 24) % 36) / 6)) < 33)) && (2 <= (((int)threadIdx.x) % 12))) && ((((int)threadIdx.x) % 12) < 10)) ? placeholder[(((((((((((((((int)threadIdx.x) + 3072) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + (((((((int)threadIdx.x) >> 1) + 384) % 576) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 24) % 36) / 6) * 512)) + (((((int)threadIdx.x) % 12) >> 1) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 3584))] = (((((1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 28) % 36) / 6))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 28) % 36) / 6)) < 33)) && (1 <= (((((int)threadIdx.x) >> 1) + 4) % 6))) && ((((((int)threadIdx.x) >> 1) + 4) % 6) < 5)) ? placeholder[(((((((((((((((int)threadIdx.x) + 3584) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + ((((((int)threadIdx.x) >> 1) + 64) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 28) % 36) / 6) * 512)) + ((((((int)threadIdx.x) >> 1) + 4) % 6) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      PaddedInput_shared[((((int)threadIdx.x) + 4096))] = ((((((((((((int)blockIdx.x) >> 4) * 16) + (((((int)threadIdx.x) >> 1) + 320) / 36)) + rd_outer_outer) < 65) && (1 <= ((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 32) % 36) / 6)))) && (((((((int)blockIdx.x) & 15) >> 1) * 4) + ((((((int)threadIdx.x) >> 1) + 32) % 36) / 6)) < 33)) && (1 <= (((((int)threadIdx.x) >> 1) + 2) % 6))) && ((((((int)threadIdx.x) >> 1) + 2) % 6) < 5)) ? placeholder[(((((((((((((((int)threadIdx.x) + 4096) / 1152) * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + ((((((int)threadIdx.x) >> 1) + 320) / 36) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((((int)threadIdx.x) >> 1) + 32) % 36) / 6) * 512)) + ((((((int)threadIdx.x) >> 1) + 2) % 6) * 128)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) - 17024))] : 0.000000e+00f);
      placeholder_shared[((((int)threadIdx.x) * 2))] = placeholder1[(((((((rd_outer_outer * 147456) + ((((int)threadIdx.x) >> 6) * 16384)) + (rc_outer_outer * 256)) + (((((int)threadIdx.x) & 63) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2)))];
      placeholder_shared[(((((int)threadIdx.x) * 2) + 1))] = placeholder1[(((((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 2) + 1) >> 7) * 16384)) + (rc_outer_outer * 256)) + (((((((int)threadIdx.x) * 2) + 1) & 127) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((((int)threadIdx.x) * 2) + 1) & 63)))];
      if (((int)threadIdx.x) < 64) {
        placeholder_shared[(((((((((int)threadIdx.x) * 2) + 1024) / 384) * 384) + (((int)threadIdx.x) * 2)) + 256))] = placeholder1[((((((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 2) + 1024) / 384) * 49152)) + (rc_outer_outer * 256)) + ((((int)threadIdx.x) >> 5) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 31) * 2)) + 32768))];
      }
      if (((int)threadIdx.x) < 64) {
        placeholder_shared[(((((((((int)threadIdx.x) * 2) + 1025) / 384) * 384) + (((int)threadIdx.x) * 2)) + 257))] = placeholder1[((((((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 2) + 1025) / 384) * 49152)) + (rc_outer_outer * 256)) + ((((((int)threadIdx.x) * 2) + 1) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((((int)threadIdx.x) * 2) + 1) & 63)) + 32768))];
      }
      __syncthreads();
      for (int rh_outer_inner = 0; rh_outer_inner < 3; ++rh_outer_inner) {
        for (int rw_outer_inner = 0; rw_outer_inner < 3; ++rw_outer_inner) {
          for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
            for (int nn_outer_inner = 0; nn_outer_inner < 2; ++nn_outer_inner) {
              Conv3dOutput[((nn_outer_inner * 64))] = (Conv3dOutput[((nn_outer_inner * 64))] + (PaddedInput_shared[(((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 1))] = (Conv3dOutput[(((nn_outer_inner * 64) + 1))] + (PaddedInput_shared[(((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 4))] = (Conv3dOutput[(((nn_outer_inner * 64) + 4))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 2))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 5))] = (Conv3dOutput[(((nn_outer_inner * 64) + 5))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 2))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 16))] = (Conv3dOutput[(((nn_outer_inner * 64) + 16))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 72))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 17))] = (Conv3dOutput[(((nn_outer_inner * 64) + 17))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 72))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 20))] = (Conv3dOutput[(((nn_outer_inner * 64) + 20))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 74))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 21))] = (Conv3dOutput[(((nn_outer_inner * 64) + 21))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 74))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 32))] = (Conv3dOutput[(((nn_outer_inner * 64) + 32))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1152))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 33))] = (Conv3dOutput[(((nn_outer_inner * 64) + 33))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1152))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 36))] = (Conv3dOutput[(((nn_outer_inner * 64) + 36))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1154))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 37))] = (Conv3dOutput[(((nn_outer_inner * 64) + 37))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1154))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 48))] = (Conv3dOutput[(((nn_outer_inner * 64) + 48))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1224))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 49))] = (Conv3dOutput[(((nn_outer_inner * 64) + 49))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1224))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 52))] = (Conv3dOutput[(((nn_outer_inner * 64) + 52))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1226))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 53))] = (Conv3dOutput[(((nn_outer_inner * 64) + 53))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1226))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 2))] = (Conv3dOutput[(((nn_outer_inner * 64) + 2))] + (PaddedInput_shared[(((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 3))] = (Conv3dOutput[(((nn_outer_inner * 64) + 3))] + (PaddedInput_shared[(((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 6))] = (Conv3dOutput[(((nn_outer_inner * 64) + 6))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 2))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 7))] = (Conv3dOutput[(((nn_outer_inner * 64) + 7))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 2))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 18))] = (Conv3dOutput[(((nn_outer_inner * 64) + 18))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 72))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 19))] = (Conv3dOutput[(((nn_outer_inner * 64) + 19))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 72))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 22))] = (Conv3dOutput[(((nn_outer_inner * 64) + 22))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 74))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 23))] = (Conv3dOutput[(((nn_outer_inner * 64) + 23))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 74))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 34))] = (Conv3dOutput[(((nn_outer_inner * 64) + 34))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1152))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 35))] = (Conv3dOutput[(((nn_outer_inner * 64) + 35))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1152))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 38))] = (Conv3dOutput[(((nn_outer_inner * 64) + 38))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1154))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 39))] = (Conv3dOutput[(((nn_outer_inner * 64) + 39))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1154))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 50))] = (Conv3dOutput[(((nn_outer_inner * 64) + 50))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1224))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 51))] = (Conv3dOutput[(((nn_outer_inner * 64) + 51))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1224))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 54))] = (Conv3dOutput[(((nn_outer_inner * 64) + 54))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1226))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 55))] = (Conv3dOutput[(((nn_outer_inner * 64) + 55))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1226))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 8))] = (Conv3dOutput[(((nn_outer_inner * 64) + 8))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 4))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 9))] = (Conv3dOutput[(((nn_outer_inner * 64) + 9))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 4))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 12))] = (Conv3dOutput[(((nn_outer_inner * 64) + 12))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 6))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 13))] = (Conv3dOutput[(((nn_outer_inner * 64) + 13))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 6))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 24))] = (Conv3dOutput[(((nn_outer_inner * 64) + 24))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 76))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 25))] = (Conv3dOutput[(((nn_outer_inner * 64) + 25))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 76))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 28))] = (Conv3dOutput[(((nn_outer_inner * 64) + 28))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 78))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 29))] = (Conv3dOutput[(((nn_outer_inner * 64) + 29))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 78))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 40))] = (Conv3dOutput[(((nn_outer_inner * 64) + 40))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1156))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 41))] = (Conv3dOutput[(((nn_outer_inner * 64) + 41))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1156))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 44))] = (Conv3dOutput[(((nn_outer_inner * 64) + 44))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1158))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 45))] = (Conv3dOutput[(((nn_outer_inner * 64) + 45))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1158))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 56))] = (Conv3dOutput[(((nn_outer_inner * 64) + 56))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1228))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 57))] = (Conv3dOutput[(((nn_outer_inner * 64) + 57))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1228))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 60))] = (Conv3dOutput[(((nn_outer_inner * 64) + 60))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1230))] * placeholder_shared[(((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 61))] = (Conv3dOutput[(((nn_outer_inner * 64) + 61))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1230))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 1))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 10))] = (Conv3dOutput[(((nn_outer_inner * 64) + 10))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 4))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 11))] = (Conv3dOutput[(((nn_outer_inner * 64) + 11))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 4))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 14))] = (Conv3dOutput[(((nn_outer_inner * 64) + 14))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 6))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 15))] = (Conv3dOutput[(((nn_outer_inner * 64) + 15))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 6))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 26))] = (Conv3dOutput[(((nn_outer_inner * 64) + 26))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 76))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 27))] = (Conv3dOutput[(((nn_outer_inner * 64) + 27))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 76))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 30))] = (Conv3dOutput[(((nn_outer_inner * 64) + 30))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 78))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 31))] = (Conv3dOutput[(((nn_outer_inner * 64) + 31))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 78))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 42))] = (Conv3dOutput[(((nn_outer_inner * 64) + 42))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1156))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 43))] = (Conv3dOutput[(((nn_outer_inner * 64) + 43))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1156))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 46))] = (Conv3dOutput[(((nn_outer_inner * 64) + 46))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1158))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 47))] = (Conv3dOutput[(((nn_outer_inner * 64) + 47))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1158))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 58))] = (Conv3dOutput[(((nn_outer_inner * 64) + 58))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1228))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 59))] = (Conv3dOutput[(((nn_outer_inner * 64) + 59))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1228))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 62))] = (Conv3dOutput[(((nn_outer_inner * 64) + 62))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1230))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 2))]));
              Conv3dOutput[(((nn_outer_inner * 64) + 63))] = (Conv3dOutput[(((nn_outer_inner * 64) + 63))] + (PaddedInput_shared[((((((((nn_outer_inner * 2304) + ((((int)threadIdx.x) >> 6) * 144)) + (((((int)threadIdx.x) & 63) >> 4) * 12)) + (rh_outer_inner * 12)) + (rw_outer_inner * 2)) + rc_outer_inner) + 1230))] * placeholder_shared[((((((rh_outer_inner * 384) + (rw_outer_inner * 128)) + (rc_outer_inner * 64)) + ((((int)threadIdx.x) & 15) * 4)) + 3))]));
            }
          }
        }
      }
    }
  }
  for (int ax0_inner = 0; ax0_inner < 4; ++ax0_inner) {
    for (int ax1_inner = 0; ax1_inner < 2; ++ax1_inner) {
      for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
        for (int ax4_inner = 0; ax4_inner < 4; ++ax4_inner) {
          T_relu[(((((((((((ax0_inner * 1048576) + ((((int)blockIdx.x) >> 4) * 262144)) + ((((int)threadIdx.x) >> 6) * 32768)) + (ax1_inner * 16384)) + (((((int)blockIdx.x) & 15) >> 1) * 2048)) + (((((int)threadIdx.x) & 63) >> 4) * 512)) + (ax3_inner * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 15) * 4)) + ax4_inner))] = max(((Conv3dOutput[(((((ax0_inner * 32) + (ax1_inner * 16)) + (ax3_inner * 4)) + ax4_inner))] * placeholder2[(((((((int)blockIdx.x) & 1) * 64) + ((((int)threadIdx.x) & 15) * 4)) + ax4_inner))]) + placeholder3[(((((((int)blockIdx.x) & 1) * 64) + ((((int)threadIdx.x) & 15) * 4)) + ax4_inner))]), 0.000000e+00f);
        }
      }
    }
  }
}


