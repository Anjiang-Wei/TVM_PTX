
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv2dOutput[80];
  __shared__ float PaddedInput_shared[240];
  __shared__ float placeholder_shared[4096];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(60)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(64)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(68)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(72)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(56)] = 0.000000e+00f;
  Conv2dOutput[(76)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(61)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(65)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(69)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(73)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(57)] = 0.000000e+00f;
  Conv2dOutput[(77)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(62)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(66)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(70)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(74)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(58)] = 0.000000e+00f;
  Conv2dOutput[(78)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(63)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(67)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(71)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  Conv2dOutput[(75)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(59)] = 0.000000e+00f;
  Conv2dOutput[(79)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[((((int)threadIdx.x) * 2))] = placeholder[((((((((int)threadIdx.x) >> 3) * 3840) + ((((int)blockIdx.x) >> 2) * 256)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) & 7) * 2)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 2) + 1))] = placeholder[((((((((((int)threadIdx.x) * 2) + 1) >> 4) * 3840) + ((((int)blockIdx.x) >> 2) * 256)) + (rc_outer_outer * 16)) + (((((int)threadIdx.x) * 2) + 1) & 15)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 2) + 96))] = placeholder[(((((((((int)threadIdx.x) >> 3) * 3840) + ((((int)blockIdx.x) >> 2) * 256)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) & 7) * 2)) + 23040))];
    PaddedInput_shared[(((((int)threadIdx.x) * 2) + 97))] = placeholder[(((((((((((int)threadIdx.x) * 2) + 1) >> 4) * 3840) + ((((int)blockIdx.x) >> 2) * 256)) + (rc_outer_outer * 16)) + (((((int)threadIdx.x) * 2) + 1) & 15)) + 23040))];
    if (((int)threadIdx.x) < 24) {
      PaddedInput_shared[(((((int)threadIdx.x) * 2) + 192))] = placeholder[(((((((((int)threadIdx.x) >> 3) * 3840) + ((((int)blockIdx.x) >> 2) * 256)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) & 7) * 2)) + 46080))];
    }
    if (((int)threadIdx.x) < 24) {
      PaddedInput_shared[(((((int)threadIdx.x) * 2) + 193))] = placeholder[(((((((((((int)threadIdx.x) * 2) + 1) >> 4) * 3840) + ((((int)blockIdx.x) >> 2) * 256)) + (rc_outer_outer * 16)) + (((((int)threadIdx.x) * 2) + 1) & 15)) + 46080))];
    }
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)))];
    placeholder_shared[((((int)threadIdx.x) + 48))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 48))];
    placeholder_shared[((((int)threadIdx.x) + 96))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 96))];
    placeholder_shared[((((int)threadIdx.x) + 144))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 144))];
    placeholder_shared[((((int)threadIdx.x) + 192))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 192))];
    placeholder_shared[((((int)threadIdx.x) + 240))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 240) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 240) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 288))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 288) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 336))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 336) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 80)))];
    placeholder_shared[((((int)threadIdx.x) + 384))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 384) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 128)))];
    placeholder_shared[((((int)threadIdx.x) + 432))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 432) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 176)))];
    placeholder_shared[((((int)threadIdx.x) + 480))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 480) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 224) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 528))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 528) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 576))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 576) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 64)))];
    placeholder_shared[((((int)threadIdx.x) + 624))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 624) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 112)))];
    placeholder_shared[((((int)threadIdx.x) + 672))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 672) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 160)))];
    placeholder_shared[((((int)threadIdx.x) + 720))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 720) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 208)))];
    placeholder_shared[((((int)threadIdx.x) + 768))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 3072))];
    placeholder_shared[((((int)threadIdx.x) + 816))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 816) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 48)))];
    placeholder_shared[((((int)threadIdx.x) + 864))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 864) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 96)))];
    placeholder_shared[((((int)threadIdx.x) + 912))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 912) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 144)))];
    placeholder_shared[((((int)threadIdx.x) + 960))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 960) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 192)))];
    placeholder_shared[((((int)threadIdx.x) + 1008))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1008) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 240) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 1056))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1056) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 1104))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1104) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 80)))];
    placeholder_shared[((((int)threadIdx.x) + 1152))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1152) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 128)))];
    placeholder_shared[((((int)threadIdx.x) + 1200))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1200) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 176)))];
    placeholder_shared[((((int)threadIdx.x) + 1248))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1248) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 224) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 1296))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1296) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 1344))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1344) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 64)))];
    placeholder_shared[((((int)threadIdx.x) + 1392))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1392) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 112)))];
    placeholder_shared[((((int)threadIdx.x) + 1440))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1440) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 160)))];
    placeholder_shared[((((int)threadIdx.x) + 1488))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1488) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 208)))];
    placeholder_shared[((((int)threadIdx.x) + 1536))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 6144))];
    placeholder_shared[((((int)threadIdx.x) + 1584))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1584) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 48)))];
    placeholder_shared[((((int)threadIdx.x) + 1632))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1632) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 96)))];
    placeholder_shared[((((int)threadIdx.x) + 1680))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1680) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 144)))];
    placeholder_shared[((((int)threadIdx.x) + 1728))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1728) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 192)))];
    placeholder_shared[((((int)threadIdx.x) + 1776))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1776) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 240) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 1824))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1824) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 1872))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1872) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 80)))];
    placeholder_shared[((((int)threadIdx.x) + 1920))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1920) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 128)))];
    placeholder_shared[((((int)threadIdx.x) + 1968))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 1968) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 176)))];
    placeholder_shared[((((int)threadIdx.x) + 2016))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2016) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 224) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 2064))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2064) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 2112))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2112) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 64)))];
    placeholder_shared[((((int)threadIdx.x) + 2160))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2160) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 112)))];
    placeholder_shared[((((int)threadIdx.x) + 2208))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2208) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 160)))];
    placeholder_shared[((((int)threadIdx.x) + 2256))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2256) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 208)))];
    placeholder_shared[((((int)threadIdx.x) + 2304))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 9216))];
    placeholder_shared[((((int)threadIdx.x) + 2352))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2352) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 48)))];
    placeholder_shared[((((int)threadIdx.x) + 2400))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2400) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 96)))];
    placeholder_shared[((((int)threadIdx.x) + 2448))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2448) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 144)))];
    placeholder_shared[((((int)threadIdx.x) + 2496))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2496) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 192)))];
    placeholder_shared[((((int)threadIdx.x) + 2544))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2544) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 240) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 2592))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2592) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 2640))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2640) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 80)))];
    placeholder_shared[((((int)threadIdx.x) + 2688))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2688) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 128)))];
    placeholder_shared[((((int)threadIdx.x) + 2736))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2736) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 176)))];
    placeholder_shared[((((int)threadIdx.x) + 2784))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2784) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 224) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 2832))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2832) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 2880))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2880) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 64)))];
    placeholder_shared[((((int)threadIdx.x) + 2928))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2928) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 112)))];
    placeholder_shared[((((int)threadIdx.x) + 2976))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 2976) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 160)))];
    placeholder_shared[((((int)threadIdx.x) + 3024))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3024) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 208)))];
    placeholder_shared[((((int)threadIdx.x) + 3072))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 12288))];
    placeholder_shared[((((int)threadIdx.x) + 3120))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3120) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 48)))];
    placeholder_shared[((((int)threadIdx.x) + 3168))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3168) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 96)))];
    placeholder_shared[((((int)threadIdx.x) + 3216))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3216) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 144)))];
    placeholder_shared[((((int)threadIdx.x) + 3264))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3264) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 192)))];
    placeholder_shared[((((int)threadIdx.x) + 3312))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3312) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 240) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 3360))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3360) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 3408))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3408) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 80)))];
    placeholder_shared[((((int)threadIdx.x) + 3456))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3456) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 128)))];
    placeholder_shared[((((int)threadIdx.x) + 3504))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3504) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 176)))];
    placeholder_shared[((((int)threadIdx.x) + 3552))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3552) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + ((((int)threadIdx.x) + 224) & 255)))];
    placeholder_shared[((((int)threadIdx.x) + 3600))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3600) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 16)))];
    placeholder_shared[((((int)threadIdx.x) + 3648))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3648) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 64)))];
    placeholder_shared[((((int)threadIdx.x) + 3696))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3696) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 112)))];
    placeholder_shared[((((int)threadIdx.x) + 3744))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3744) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 160)))];
    placeholder_shared[((((int)threadIdx.x) + 3792))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3792) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 208)))];
    placeholder_shared[((((int)threadIdx.x) + 3840))] = placeholder1[(((((rc_outer_outer * 16384) + ((((int)blockIdx.x) & 3) * 256)) + ((int)threadIdx.x)) + 15360))];
    placeholder_shared[((((int)threadIdx.x) + 3888))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3888) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 48)))];
    placeholder_shared[((((int)threadIdx.x) + 3936))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3936) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 96)))];
    placeholder_shared[((((int)threadIdx.x) + 3984))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 3984) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 144)))];
    placeholder_shared[((((int)threadIdx.x) + 4032))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 4032) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 192)))];
    if (((int)threadIdx.x) < 16) {
      placeholder_shared[((((int)threadIdx.x) + 4080))] = placeholder1[(((((rc_outer_outer * 16384) + (((((int)threadIdx.x) + 4080) >> 8) * 1024)) + ((((int)blockIdx.x) & 3) * 256)) + (((int)threadIdx.x) + 240)))];
    }
    __syncthreads();
    for (int ff_outer_inner = 0; ff_outer_inner < 4; ++ff_outer_inner) {
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 4) * 80))] * placeholder_shared[((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[(((((int)threadIdx.x) >> 4) * 80))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 64))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[(((((int)threadIdx.x) >> 4) * 80))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 128))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[(((((int)threadIdx.x) >> 4) * 80))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 192))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 16))] * placeholder_shared[((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 16))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 64))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 16))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 128))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 16))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 192))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 32))] * placeholder_shared[((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 32))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 64))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 32))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 128))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 32))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 192))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 48))] * placeholder_shared[((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 48))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 64))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 48))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 128))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 48))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 192))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 64))] * placeholder_shared[((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 64))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 64))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 64))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 128))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 64))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 192))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 1))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 256))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 1))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 320))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 1))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 384))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 1))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 448))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 17))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 256))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 17))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 320))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 17))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 384))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 17))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 448))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 33))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 256))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 33))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 320))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 33))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 384))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 33))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 448))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 49))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 256))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 49))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 320))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 49))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 384))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 49))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 448))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 65))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 256))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 65))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 320))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 65))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 384))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 65))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 448))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 2))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 512))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 2))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 576))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 2))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 640))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 2))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 704))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 18))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 512))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 18))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 576))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 18))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 640))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 18))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 704))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 34))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 512))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 34))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 576))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 34))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 640))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 34))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 704))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 50))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 512))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 50))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 576))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 50))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 640))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 50))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 704))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 66))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 512))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 66))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 576))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 66))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 640))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 66))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 704))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 3))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 768))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 3))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 832))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 3))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 896))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 3))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 960))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 19))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 768))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 19))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 832))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 19))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 896))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 19))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 960))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 35))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 768))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 35))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 832))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 35))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 896))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 35))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 960))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 51))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 768))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 51))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 832))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 51))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 896))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 51))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 960))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 67))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 768))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 67))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 832))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 67))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 896))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 67))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 960))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 4))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1024))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 4))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1088))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 4))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1152))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 4))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1216))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 20))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1024))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 20))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1088))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 20))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1152))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 20))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1216))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 36))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1024))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 36))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1088))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 36))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1152))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 36))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1216))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 52))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1024))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 52))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1088))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 52))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1152))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 52))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1216))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 68))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1024))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 68))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1088))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 68))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1152))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 68))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1216))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 5))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1280))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 5))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1344))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 5))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1408))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 5))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1472))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 21))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1280))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 21))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1344))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 21))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1408))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 21))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1472))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 37))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1280))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 37))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1344))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 37))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1408))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 37))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1472))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 53))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1280))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 53))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1344))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 53))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1408))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 53))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1472))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 69))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1280))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 69))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1344))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 69))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1408))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 69))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1472))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 6))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1536))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 6))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1600))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 6))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1664))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 6))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1728))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 22))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1536))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 22))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1600))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 22))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1664))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 22))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1728))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 38))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1536))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 38))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1600))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 38))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1664))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 38))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1728))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 54))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1536))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 54))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1600))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 54))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1664))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 54))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1728))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 70))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1536))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 70))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1600))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 70))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1664))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 70))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1728))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 7))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1792))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 7))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1856))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 7))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1920))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 7))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1984))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 23))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1792))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 23))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1856))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 23))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1920))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 23))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1984))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 39))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1792))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 39))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1856))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 39))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1920))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 39))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1984))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 55))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1792))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 55))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1856))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 55))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1920))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 55))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1984))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 71))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1792))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 71))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1856))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 71))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1920))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 71))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 1984))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 8))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2048))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 8))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2112))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 8))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2176))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 8))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2240))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 24))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2048))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 24))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2112))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 24))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2176))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 24))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2240))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 40))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2048))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 40))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2112))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 40))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2176))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 40))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2240))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 56))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2048))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 56))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2112))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 56))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2176))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 56))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2240))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 72))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2048))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 72))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2112))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 72))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2176))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 72))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2240))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 9))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2304))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 9))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2368))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 9))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2432))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 9))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2496))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 25))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2304))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 25))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2368))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 25))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2432))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 25))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2496))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 41))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2304))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 41))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2368))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 41))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2432))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 41))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2496))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 57))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2304))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 57))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2368))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 57))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2432))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 57))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2496))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 73))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2304))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 73))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2368))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 73))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2432))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 73))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2496))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2560))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2624))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2688))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2752))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 26))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2560))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 26))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2624))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 26))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2688))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 26))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2752))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 42))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2560))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 42))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2624))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 42))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2688))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 42))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2752))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 58))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2560))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 58))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2624))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 58))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2688))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 58))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2752))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 74))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2560))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 74))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2624))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 74))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2688))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 74))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2752))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 11))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2816))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 11))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2880))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 11))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2944))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 11))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3008))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 27))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2816))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 27))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2880))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 27))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2944))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 27))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3008))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 43))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2816))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 43))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2880))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 43))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2944))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 43))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3008))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 59))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2816))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 59))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2880))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 59))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2944))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 59))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3008))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 75))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2816))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 75))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2880))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 75))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 2944))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 75))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3008))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 12))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3072))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 12))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3136))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 12))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3200))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 12))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3264))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 28))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3072))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 28))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3136))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 28))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3200))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 28))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3264))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 44))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3072))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 44))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3136))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 44))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3200))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 44))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3264))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 60))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3072))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 60))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3136))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 60))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3200))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 60))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3264))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 76))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3072))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 76))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3136))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 76))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3200))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 76))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3264))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 13))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3328))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 13))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3392))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 13))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3456))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 13))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3520))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 29))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3328))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 29))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3392))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 29))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3456))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 29))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3520))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 45))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3328))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 45))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3392))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 45))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3456))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 45))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3520))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 61))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3328))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 61))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3392))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 61))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3456))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 61))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3520))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 77))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3328))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 77))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3392))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 77))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3456))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 77))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3520))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 14))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3584))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 14))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3648))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 14))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3712))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 14))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3776))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 30))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3584))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 30))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3648))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 30))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3712))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 30))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3776))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 46))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3584))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 46))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3648))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 46))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3712))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 46))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3776))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 62))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3584))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 62))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3648))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 62))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3712))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 62))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3776))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 78))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3584))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 78))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3648))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 78))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3712))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 78))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3776))]));
      Conv2dOutput[(ff_outer_inner)] = (Conv2dOutput[(ff_outer_inner)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 15))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3840))]));
      Conv2dOutput[((ff_outer_inner + 20))] = (Conv2dOutput[((ff_outer_inner + 20))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 15))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3904))]));
      Conv2dOutput[((ff_outer_inner + 40))] = (Conv2dOutput[((ff_outer_inner + 40))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 15))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3968))]));
      Conv2dOutput[((ff_outer_inner + 60))] = (Conv2dOutput[((ff_outer_inner + 60))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 15))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 4032))]));
      Conv2dOutput[((ff_outer_inner + 4))] = (Conv2dOutput[((ff_outer_inner + 4))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 31))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3840))]));
      Conv2dOutput[((ff_outer_inner + 24))] = (Conv2dOutput[((ff_outer_inner + 24))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 31))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3904))]));
      Conv2dOutput[((ff_outer_inner + 44))] = (Conv2dOutput[((ff_outer_inner + 44))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 31))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3968))]));
      Conv2dOutput[((ff_outer_inner + 64))] = (Conv2dOutput[((ff_outer_inner + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 31))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 4032))]));
      Conv2dOutput[((ff_outer_inner + 8))] = (Conv2dOutput[((ff_outer_inner + 8))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 47))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3840))]));
      Conv2dOutput[((ff_outer_inner + 28))] = (Conv2dOutput[((ff_outer_inner + 28))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 47))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3904))]));
      Conv2dOutput[((ff_outer_inner + 48))] = (Conv2dOutput[((ff_outer_inner + 48))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 47))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3968))]));
      Conv2dOutput[((ff_outer_inner + 68))] = (Conv2dOutput[((ff_outer_inner + 68))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 47))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 4032))]));
      Conv2dOutput[((ff_outer_inner + 12))] = (Conv2dOutput[((ff_outer_inner + 12))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 63))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3840))]));
      Conv2dOutput[((ff_outer_inner + 32))] = (Conv2dOutput[((ff_outer_inner + 32))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 63))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3904))]));
      Conv2dOutput[((ff_outer_inner + 52))] = (Conv2dOutput[((ff_outer_inner + 52))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 63))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3968))]));
      Conv2dOutput[((ff_outer_inner + 72))] = (Conv2dOutput[((ff_outer_inner + 72))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 63))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 4032))]));
      Conv2dOutput[((ff_outer_inner + 16))] = (Conv2dOutput[((ff_outer_inner + 16))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 79))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3840))]));
      Conv2dOutput[((ff_outer_inner + 36))] = (Conv2dOutput[((ff_outer_inner + 36))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 79))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3904))]));
      Conv2dOutput[((ff_outer_inner + 56))] = (Conv2dOutput[((ff_outer_inner + 56))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 79))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 3968))]));
      Conv2dOutput[((ff_outer_inner + 76))] = (Conv2dOutput[((ff_outer_inner + 76))] + (PaddedInput_shared[((((((int)threadIdx.x) >> 4) * 80) + 79))] * placeholder_shared[(((((((int)threadIdx.x) & 15) * 4) + ff_outer_inner) + 4032))]));
    }
  }
  for (int ax1_inner = 0; ax1_inner < 5; ++ax1_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[(((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner))] = max(((Conv2dOutput[(((ax1_inner * 4) + ax3_inner))] + placeholder2[(((((((int)blockIdx.x) & 3) * 256) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner))]) + placeholder3[(((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 64))] = max(((Conv2dOutput[((((ax1_inner * 4) + ax3_inner) + 20))] + placeholder2[((((((((int)blockIdx.x) & 3) * 256) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 64))]) + placeholder3[((((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 64))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 128))] = max(((Conv2dOutput[((((ax1_inner * 4) + ax3_inner) + 40))] + placeholder2[((((((((int)blockIdx.x) & 3) * 256) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 128))]) + placeholder3[((((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 128))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 192))] = max(((Conv2dOutput[((((ax1_inner * 4) + ax3_inner) + 60))] + placeholder2[((((((((int)blockIdx.x) & 3) * 256) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 192))]) + placeholder3[((((((((((int)threadIdx.x) >> 4) * 76800) + (ax1_inner * 15360)) + (((int)blockIdx.x) * 256)) + ((((int)threadIdx.x) & 15) * 4)) + ax3_inner) + 192))]), 0.000000e+00f);
    }
  }
}


