
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ compute, float* __restrict__ placeholder2) {
  float Conv2dOutput[6912];
  __shared__ float PaddedInput_shared[2400];
  __shared__ float placeholder_shared[144];
  for (int yy_outer_inner_init = 0; yy_outer_inner_init < 3; ++yy_outer_inner_init) {
    for (int xx_outer_inner_init = 0; xx_outer_inner_init < 2; ++xx_outer_inner_init) {
      for (int nn_inner_init = 0; nn_inner_init < 4; ++nn_inner_init) {
        for (int yy_inner_init = 0; yy_inner_init < 2; ++yy_inner_init) {
          for (int ff_inner_init = 0; ff_inner_init < 12; ++ff_inner_init) {
            Conv2dOutput[((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 576))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 1152))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 1728))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 2304))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 2880))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 3456))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 4032))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 4608))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 5184))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 5760))] = 0.000000e+00f;
            Conv2dOutput[(((((((nn_inner_init * 144) + (yy_outer_inner_init * 48)) + (yy_inner_init * 24)) + (xx_outer_inner_init * 12)) + ff_inner_init) + 6336))] = 0.000000e+00f;
          }
        }
      }
    }
  }
  for (int rc_outer_outer = 0; rc_outer_outer < 24; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 50))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + (((((int)threadIdx.x) + 50) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 100))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 7200))];
    PaddedInput_shared[((((int)threadIdx.x) + 150))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + (((((int)threadIdx.x) + 150) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 200))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 14400))];
    PaddedInput_shared[((((int)threadIdx.x) + 250))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + (((((int)threadIdx.x) + 250) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 300))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 21600))];
    PaddedInput_shared[((((int)threadIdx.x) + 350))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + (((((int)threadIdx.x) + 350) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 400))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 28800))];
    PaddedInput_shared[((((int)threadIdx.x) + 450))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + (((((int)threadIdx.x) + 450) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 500))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 36000))];
    PaddedInput_shared[((((int)threadIdx.x) + 550))] = placeholder[(((((((((int)blockIdx.x) / 3) * 43200) + (((((int)threadIdx.x) + 550) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 600))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 86400))];
    PaddedInput_shared[((((int)threadIdx.x) + 650))] = placeholder[(((((((((((int)threadIdx.x) + 650) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 50) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 700))] = placeholder[(((((((((((int)threadIdx.x) + 700) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 100) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 750))] = placeholder[(((((((((((int)threadIdx.x) + 750) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 150) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 800))] = placeholder[(((((((((((int)threadIdx.x) + 800) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 200) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 850))] = placeholder[(((((((((((int)threadIdx.x) + 850) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 250) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 900))] = placeholder[(((((((((((int)threadIdx.x) + 900) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 300) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 950))] = placeholder[(((((((((((int)threadIdx.x) + 950) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 350) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1000))] = placeholder[(((((((((((int)threadIdx.x) + 1000) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 400) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1050))] = placeholder[(((((((((((int)threadIdx.x) + 1050) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 450) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1100))] = placeholder[(((((((((((int)threadIdx.x) + 1100) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 500) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1150))] = placeholder[(((((((((((int)threadIdx.x) + 1150) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 550) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1200))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 172800))];
    PaddedInput_shared[((((int)threadIdx.x) + 1250))] = placeholder[(((((((((((int)threadIdx.x) + 1250) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 50) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1300))] = placeholder[(((((((((((int)threadIdx.x) + 1300) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 100) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1350))] = placeholder[(((((((((((int)threadIdx.x) + 1350) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 150) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1400))] = placeholder[(((((((((((int)threadIdx.x) + 1400) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 200) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1450))] = placeholder[(((((((((((int)threadIdx.x) + 1450) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 250) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1500))] = placeholder[(((((((((((int)threadIdx.x) + 1500) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 300) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1550))] = placeholder[(((((((((((int)threadIdx.x) + 1550) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 350) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1600))] = placeholder[(((((((((((int)threadIdx.x) + 1600) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 400) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1650))] = placeholder[(((((((((((int)threadIdx.x) + 1650) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 450) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1700))] = placeholder[(((((((((((int)threadIdx.x) + 1700) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 500) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1750))] = placeholder[(((((((((((int)threadIdx.x) + 1750) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 550) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1800))] = placeholder[((((((((((int)blockIdx.x) / 3) * 43200) + ((((int)threadIdx.x) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer) + 259200))];
    PaddedInput_shared[((((int)threadIdx.x) + 1850))] = placeholder[(((((((((((int)threadIdx.x) + 1850) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 50) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1900))] = placeholder[(((((((((((int)threadIdx.x) + 1900) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 100) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 1950))] = placeholder[(((((((((((int)threadIdx.x) + 1950) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 150) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2000))] = placeholder[(((((((((((int)threadIdx.x) + 2000) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 200) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2050))] = placeholder[(((((((((((int)threadIdx.x) + 2050) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 250) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2100))] = placeholder[(((((((((((int)threadIdx.x) + 2100) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 300) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2150))] = placeholder[(((((((((((int)threadIdx.x) + 2150) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 350) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2200))] = placeholder[(((((((((((int)threadIdx.x) + 2200) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 400) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2250))] = placeholder[(((((((((((int)threadIdx.x) + 2250) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 450) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2300))] = placeholder[(((((((((((int)threadIdx.x) + 2300) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 500) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + ((((int)threadIdx.x) % 20) * 24)) + rc_outer_outer))];
    PaddedInput_shared[((((int)threadIdx.x) + 2350))] = placeholder[(((((((((((int)threadIdx.x) + 2350) / 600) * 86400) + ((((int)blockIdx.x) / 3) * 43200)) + (((((int)threadIdx.x) + 550) / 20) * 1440)) + ((((int)blockIdx.x) % 3) * 480)) + (((((int)threadIdx.x) + 10) % 20) * 24)) + rc_outer_outer))];
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((rc_outer_outer * 144) + ((int)threadIdx.x)))];
    placeholder_shared[((((int)threadIdx.x) + 50))] = placeholder1[((((rc_outer_outer * 144) + ((int)threadIdx.x)) + 50))];
    if (((int)threadIdx.x) < 44) {
      placeholder_shared[((((int)threadIdx.x) + 100))] = placeholder1[((((rc_outer_outer * 144) + ((int)threadIdx.x)) + 100))];
    }
    __syncthreads();
    for (int yy_outer_inner = 0; yy_outer_inner < 3; ++yy_outer_inner) {
      for (int xx_outer_inner = 0; xx_outer_inner < 2; ++xx_outer_inner) {
        for (int nn_inner = 0; nn_inner < 4; ++nn_inner) {
          for (int yy_inner = 0; yy_inner < 2; ++yy_inner) {
            for (int ff_inner = 0; ff_inner < 12; ++ff_inner) {
              Conv2dOutput[((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner))] = (Conv2dOutput[((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner))] + (PaddedInput_shared[(((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner))] * placeholder_shared[((((((int)threadIdx.x) & 1) * 12) + ff_inner))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 576))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 576))] + (PaddedInput_shared[(((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 24))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 1152))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 1152))] + (PaddedInput_shared[(((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 48))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 1728))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 1728))] + (PaddedInput_shared[(((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 72))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 2304))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 2304))] + (PaddedInput_shared[(((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 96))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 2880))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 2880))] + (PaddedInput_shared[(((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 120))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 3456))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 3456))] + (PaddedInput_shared[((((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 1) * 12) + ff_inner))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 4032))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 4032))] + (PaddedInput_shared[((((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 24))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 4608))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 4608))] + (PaddedInput_shared[((((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 48))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 5184))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 5184))] + (PaddedInput_shared[((((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 72))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 5760))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 5760))] + (PaddedInput_shared[((((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 96))]));
              Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 6336))] = (Conv2dOutput[(((((((nn_inner * 144) + (yy_outer_inner * 48)) + (yy_inner * 24)) + (xx_outer_inner * 12)) + ff_inner) + 6336))] + (PaddedInput_shared[((((((((nn_inner * 600) + ((((int)threadIdx.x) / 10) * 120)) + (yy_outer_inner * 40)) + (yy_inner * 20)) + (((((int)threadIdx.x) % 10) >> 1) * 2)) + xx_outer_inner) + 10))] * placeholder_shared[(((((((int)threadIdx.x) & 1) * 12) + ff_inner) + 120))]));
            }
          }
        }
      }
    }
  }
  for (int i0_inner = 0; i0_inner < 4; ++i0_inner) {
    for (int i1_inner = 0; i1_inner < 6; ++i1_inner) {
      for (int i2_inner = 0; i2_inner < 2; ++i2_inner) {
        for (int i3_inner = 0; i3_inner < 12; ++i3_inner) {
          compute[((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner))] = max(min((Conv2dOutput[(((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner))] + placeholder2[((((((int)threadIdx.x) & 1) * 12) + i3_inner))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 24))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 576))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 24))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 48))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 1152))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 48))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 72))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 1728))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 72))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 96))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 2304))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 96))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 120))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 2880))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 120))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 1440))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 3456))] + placeholder2[((((((int)threadIdx.x) & 1) * 12) + i3_inner))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 1464))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 4032))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 24))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 1488))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 4608))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 48))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 1512))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 5184))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 72))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 1536))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 5760))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 96))]), 6.000000e+00f), 0.000000e+00f);
          compute[(((((((((((i0_inner * 518400) + ((((int)blockIdx.x) / 3) * 259200)) + ((((int)threadIdx.x) / 10) * 51840)) + (i1_inner * 8640)) + ((((int)blockIdx.x) % 3) * 2880)) + (((((int)threadIdx.x) % 10) >> 1) * 288)) + (i2_inner * 144)) + ((((int)threadIdx.x) & 1) * 12)) + i3_inner) + 1560))] = max(min((Conv2dOutput[((((((i0_inner * 144) + (i1_inner * 24)) + (i2_inner * 12)) + i3_inner) + 6336))] + placeholder2[(((((((int)threadIdx.x) & 1) * 12) + i3_inner) + 120))]), 6.000000e+00f), 0.000000e+00f);
        }
      }
    }
  }
}


