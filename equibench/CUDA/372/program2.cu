
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float Conv2dOutput[512];
  __shared__ float PaddedInput_shared[3840];
  __shared__ float placeholder_shared[32];
  for (int nn_outer_inner_init = 0; nn_outer_inner_init < 2; ++nn_outer_inner_init) {
    for (int nn_inner_init = 0; nn_inner_init < 2; ++nn_inner_init) {
      for (int yy_inner_init = 0; yy_inner_init < 4; ++yy_inner_init) {
        Conv2dOutput[((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 256))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 1))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 257))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 2))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 258))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 3))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 259))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 4))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 260))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 5))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 261))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 6))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 262))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 7))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 263))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 8))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 264))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 9))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 265))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 10))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 266))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 11))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 267))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 12))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 268))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 13))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 269))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 14))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 270))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 15))] = 0.000000e+00f;
        Conv2dOutput[(((((nn_outer_inner_init * 128) + (nn_inner_init * 64)) + (yy_inner_init * 16)) + 271))] = 0.000000e+00f;
      }
    }
  }
  for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)))];
    PaddedInput_shared[((((int)threadIdx.x) + 60))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3840))];
    PaddedInput_shared[((((int)threadIdx.x) + 120))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 7680))];
    PaddedInput_shared[((((int)threadIdx.x) + 180))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 11520))];
    PaddedInput_shared[((((int)threadIdx.x) + 240))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 15360))];
    PaddedInput_shared[((((int)threadIdx.x) + 300))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 19200))];
    PaddedInput_shared[((((int)threadIdx.x) + 360))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 23040))];
    PaddedInput_shared[((((int)threadIdx.x) + 420))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 26880))];
    PaddedInput_shared[((((int)threadIdx.x) + 480))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 460800))];
    PaddedInput_shared[((((int)threadIdx.x) + 540))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 464640))];
    PaddedInput_shared[((((int)threadIdx.x) + 600))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 468480))];
    PaddedInput_shared[((((int)threadIdx.x) + 660))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 472320))];
    PaddedInput_shared[((((int)threadIdx.x) + 720))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 476160))];
    PaddedInput_shared[((((int)threadIdx.x) + 780))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 480000))];
    PaddedInput_shared[((((int)threadIdx.x) + 840))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 483840))];
    PaddedInput_shared[((((int)threadIdx.x) + 900))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 487680))];
    PaddedInput_shared[((((int)threadIdx.x) + 960))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 921600))];
    PaddedInput_shared[((((int)threadIdx.x) + 1020))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 925440))];
    PaddedInput_shared[((((int)threadIdx.x) + 1080))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 929280))];
    PaddedInput_shared[((((int)threadIdx.x) + 1140))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 933120))];
    PaddedInput_shared[((((int)threadIdx.x) + 1200))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 936960))];
    PaddedInput_shared[((((int)threadIdx.x) + 1260))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 940800))];
    PaddedInput_shared[((((int)threadIdx.x) + 1320))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 944640))];
    PaddedInput_shared[((((int)threadIdx.x) + 1380))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 948480))];
    PaddedInput_shared[((((int)threadIdx.x) + 1440))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1382400))];
    PaddedInput_shared[((((int)threadIdx.x) + 1500))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1386240))];
    PaddedInput_shared[((((int)threadIdx.x) + 1560))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1390080))];
    PaddedInput_shared[((((int)threadIdx.x) + 1620))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1393920))];
    PaddedInput_shared[((((int)threadIdx.x) + 1680))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1397760))];
    PaddedInput_shared[((((int)threadIdx.x) + 1740))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1401600))];
    PaddedInput_shared[((((int)threadIdx.x) + 1800))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1405440))];
    PaddedInput_shared[((((int)threadIdx.x) + 1860))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1409280))];
    PaddedInput_shared[((((int)threadIdx.x) + 1920))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1843200))];
    PaddedInput_shared[((((int)threadIdx.x) + 1980))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1847040))];
    PaddedInput_shared[((((int)threadIdx.x) + 2040))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1850880))];
    PaddedInput_shared[((((int)threadIdx.x) + 2100))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1854720))];
    PaddedInput_shared[((((int)threadIdx.x) + 2160))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1858560))];
    PaddedInput_shared[((((int)threadIdx.x) + 2220))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1862400))];
    PaddedInput_shared[((((int)threadIdx.x) + 2280))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1866240))];
    PaddedInput_shared[((((int)threadIdx.x) + 2340))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 1870080))];
    PaddedInput_shared[((((int)threadIdx.x) + 2400))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2304000))];
    PaddedInput_shared[((((int)threadIdx.x) + 2460))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2307840))];
    PaddedInput_shared[((((int)threadIdx.x) + 2520))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2311680))];
    PaddedInput_shared[((((int)threadIdx.x) + 2580))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2315520))];
    PaddedInput_shared[((((int)threadIdx.x) + 2640))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2319360))];
    PaddedInput_shared[((((int)threadIdx.x) + 2700))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2323200))];
    PaddedInput_shared[((((int)threadIdx.x) + 2760))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2327040))];
    PaddedInput_shared[((((int)threadIdx.x) + 2820))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2330880))];
    PaddedInput_shared[((((int)threadIdx.x) + 2880))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2764800))];
    PaddedInput_shared[((((int)threadIdx.x) + 2940))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2768640))];
    PaddedInput_shared[((((int)threadIdx.x) + 3000))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2772480))];
    PaddedInput_shared[((((int)threadIdx.x) + 3060))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2776320))];
    PaddedInput_shared[((((int)threadIdx.x) + 3120))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2780160))];
    PaddedInput_shared[((((int)threadIdx.x) + 3180))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2784000))];
    PaddedInput_shared[((((int)threadIdx.x) + 3240))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2787840))];
    PaddedInput_shared[((((int)threadIdx.x) + 3300))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 2791680))];
    PaddedInput_shared[((((int)threadIdx.x) + 3360))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3225600))];
    PaddedInput_shared[((((int)threadIdx.x) + 3420))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3229440))];
    PaddedInput_shared[((((int)threadIdx.x) + 3480))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3233280))];
    PaddedInput_shared[((((int)threadIdx.x) + 3540))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3237120))];
    PaddedInput_shared[((((int)threadIdx.x) + 3600))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3240960))];
    PaddedInput_shared[((((int)threadIdx.x) + 3660))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3244800))];
    PaddedInput_shared[((((int)threadIdx.x) + 3720))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3248640))];
    PaddedInput_shared[((((int)threadIdx.x) + 3780))] = placeholder[((((((((((int)blockIdx.x) >> 2) * 30720) + ((((int)blockIdx.x) & 3) * 960)) + ((((int)threadIdx.x) >> 1) * 32)) + (rc_outer_outer * 2)) + (((int)threadIdx.x) & 1)) + 3252480))];
    if (((int)threadIdx.x) < 32) {
      placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((rc_outer_outer * 32) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
      for (int nn_outer_inner = 0; nn_outer_inner < 2; ++nn_outer_inner) {
        for (int nn_inner = 0; nn_inner < 2; ++nn_inner) {
          for (int yy_inner = 0; yy_inner < 4; ++yy_inner) {
            Conv2dOutput[((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)))] = (Conv2dOutput[((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[(((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 256))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 256))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[(((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 1))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 1))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 1))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 257))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 257))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 1))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 2))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 2))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 2))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 258))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 258))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 2))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 3))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 3))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 3))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 259))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 259))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 3))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 4))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 4))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 4))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 260))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 260))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 4))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 5))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 5))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 5))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 261))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 261))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 5))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 6))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 6))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 6))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 262))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 262))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 6))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 7))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 7))] + (PaddedInput_shared[(((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 7))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 263))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 263))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1920))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 7))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 8))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 8))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[(((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 264))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 264))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[(((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 9))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 9))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 1))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 265))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 265))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 1))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 10))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 10))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 2))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 266))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 266))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 2))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 11))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 11))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 3))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 267))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 267))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 3))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 12))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 12))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 4))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 268))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 268))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 4))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 13))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 13))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 5))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 269))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 269))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 5))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 14))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 14))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 6))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 270))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 270))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 6))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 15))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 15))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 2))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 7))]));
            Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 271))] = (Conv2dOutput[(((((nn_outer_inner * 128) + (nn_inner * 64)) + (yy_inner * 16)) + 271))] + (PaddedInput_shared[((((((((nn_outer_inner * 960) + (nn_inner * 480)) + ((((int)threadIdx.x) / 30) * 240)) + (yy_inner * 60)) + (((((int)threadIdx.x) % 30) >> 1) * 4)) + rc_outer_inner) + 1922))] * placeholder_shared[((((rc_outer_inner * 16) + ((((int)threadIdx.x) & 1) * 8)) + 7))]));
          }
        }
      }
    }
  }
  for (int ax0_inner = 0; ax0_inner < 4; ++ax0_inner) {
    for (int ax1_inner = 0; ax1_inner < 4; ++ax1_inner) {
      for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
        for (int ax3_inner = 0; ax3_inner < 8; ++ax3_inner) {
          T_add[((((((((((ax0_inner * 230400) + ((((int)blockIdx.x) >> 2) * 15360)) + ((((int)threadIdx.x) / 30) * 7680)) + (ax1_inner * 1920)) + ((((int)blockIdx.x) & 3) * 480)) + (((((int)threadIdx.x) % 30) >> 1) * 32)) + (ax2_inner * 16)) + ((((int)threadIdx.x) & 1) * 8)) + ax3_inner))] = (Conv2dOutput[(((((ax0_inner * 64) + (ax1_inner * 16)) + (ax2_inner * 8)) + ax3_inner))] + placeholder2[((((((int)threadIdx.x) & 1) * 8) + ax3_inner))]);
          T_add[(((((((((((ax0_inner * 230400) + ((((int)blockIdx.x) >> 2) * 15360)) + ((((int)threadIdx.x) / 30) * 7680)) + (ax1_inner * 1920)) + ((((int)blockIdx.x) & 3) * 480)) + (((((int)threadIdx.x) % 30) >> 1) * 32)) + (ax2_inner * 16)) + ((((int)threadIdx.x) & 1) * 8)) + ax3_inner) + 921600))] = (Conv2dOutput[((((((ax0_inner * 64) + (ax1_inner * 16)) + (ax2_inner * 8)) + ax3_inner) + 256))] + placeholder2[((((((int)threadIdx.x) & 1) * 8) + ax3_inner))]);
        }
      }
    }
  }
}


