
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv3dOutput[256];
  __shared__ float PaddedInput_shared[5120];
  __shared__ float placeholder_shared[2304];
  for (int hh_outer_inner_init = 0; hh_outer_inner_init < 4; ++hh_outer_inner_init) {
    Conv3dOutput[((hh_outer_inner_init * 8))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 32))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 64))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 96))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 128))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 160))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 192))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 224))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 4))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 36))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 68))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 100))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 132))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 164))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 196))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 228))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 1))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 33))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 65))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 97))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 129))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 161))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 193))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 225))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 5))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 37))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 69))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 101))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 133))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 165))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 197))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 229))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 2))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 34))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 66))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 98))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 130))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 162))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 194))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 226))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 6))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 38))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 70))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 102))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 134))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 166))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 198))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 230))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 3))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 35))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 67))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 99))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 131))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 163))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 195))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 227))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 7))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 39))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 71))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 103))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 135))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 167))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 199))] = 0.000000e+00f;
    Conv3dOutput[(((hh_outer_inner_init * 8) + 231))] = 0.000000e+00f;
  }
  for (int rd_outer_outer = 0; rd_outer_outer < 3; ++rd_outer_outer) {
    for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
      __syncthreads();
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[((((int)threadIdx.x) * 16))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) && (1 <= (((int)blockIdx.x) & 1))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 17024))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 1))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) && (1 <= (((int)blockIdx.x) & 1))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 17023))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 2))] = ((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16896))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 3))] = ((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16895))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 4))] = ((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16768))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 5))] = ((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16767))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 6))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) && ((((int)blockIdx.x) & 1) < 1)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16640))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 7))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((int)threadIdx.x) % 160) / 5)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + ((((int)threadIdx.x) % 5) * 2)))) && ((((int)blockIdx.x) & 1) < 1)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) / 160) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) % 160) / 5) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((int)threadIdx.x) % 5) * 1024)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16639))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 8))] = ((((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) && (1 <= (((int)blockIdx.x) & 1))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 17024))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 9))] = ((((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) && (1 <= (((int)blockIdx.x) & 1))) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 17023))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 10))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16896))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 11))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16895))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 12))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16768))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 13))] = (((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16767))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 14))] = ((((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) && ((((int)blockIdx.x) & 1) < 1)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16640))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 320) {
        PaddedInput_shared[(((((int)threadIdx.x) * 16) + 15))] = ((((((1 <= (((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer)) && ((((((((int)blockIdx.x) & 15) >> 3) * 32) + ((((((int)threadIdx.x) * 2) + 1) % 320) / 10)) + rd_outer_outer) < 65)) && (1 <= ((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)))) && (((((((int)blockIdx.x) & 7) >> 1) * 8) + (((((int)threadIdx.x) * 2) + 1) % 10)) < 33)) && ((((int)blockIdx.x) & 1) < 1)) ? placeholder[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((((int)threadIdx.x) * 2) + 1) / 320) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((((int)threadIdx.x) * 2) + 1) % 320) / 10) * 16384)) + (rd_outer_outer * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + ((((((int)threadIdx.x) * 2) + 1) % 10) * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (rc_outer_outer * 2)) - 16639))] : 0.000000e+00f);
      }
      if (((int)threadIdx.x) < 384) {
        placeholder_shared[((((int)threadIdx.x) * 6))] = placeholder1[(((((rd_outer_outer * 147456) + (((((int)threadIdx.x) * 6) >> 8) * 16384)) + (rc_outer_outer * 256)) + ((((int)threadIdx.x) * 6) & 255)))];
      }
      if (((int)threadIdx.x) < 384) {
        placeholder_shared[(((((int)threadIdx.x) * 6) + 1))] = placeholder1[(((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 6) + 1) >> 8) * 16384)) + (rc_outer_outer * 256)) + (((((int)threadIdx.x) * 6) + 1) & 255)))];
      }
      if (((int)threadIdx.x) < 384) {
        placeholder_shared[(((((int)threadIdx.x) * 6) + 2))] = placeholder1[(((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 6) + 2) >> 8) * 16384)) + (rc_outer_outer * 256)) + (((((int)threadIdx.x) * 6) + 2) & 255)))];
      }
      if (((int)threadIdx.x) < 384) {
        placeholder_shared[(((((int)threadIdx.x) * 6) + 3))] = placeholder1[(((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 6) + 3) >> 8) * 16384)) + (rc_outer_outer * 256)) + (((((int)threadIdx.x) * 6) + 3) & 255)))];
      }
      if (((int)threadIdx.x) < 384) {
        placeholder_shared[(((((int)threadIdx.x) * 6) + 4))] = placeholder1[(((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 6) + 4) >> 8) * 16384)) + (rc_outer_outer * 256)) + (((((int)threadIdx.x) * 6) + 4) & 255)))];
      }
      if (((int)threadIdx.x) < 384) {
        placeholder_shared[(((((int)threadIdx.x) * 6) + 5))] = placeholder1[(((((rd_outer_outer * 147456) + ((((((int)threadIdx.x) * 6) + 5) >> 8) * 16384)) + (rc_outer_outer * 256)) + (((((int)threadIdx.x) * 6) + 5) & 255)))];
      }
      __syncthreads();
      for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
        for (int hh_outer_inner = 0; hh_outer_inner < 4; ++hh_outer_inner) {
          for (int cc_outer_inner = 0; cc_outer_inner < 4; ++cc_outer_inner) {
            for (int rh_inner = 0; rh_inner < 3; ++rh_inner) {
              Conv3dOutput[(((hh_outer_inner * 8) + cc_outer_inner))] = (Conv3dOutput[(((hh_outer_inner * 8) + cc_outer_inner))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 32))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 32))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 32))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 64))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 64))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 640))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 96))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 96))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 672))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 128))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 128))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1280))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 160))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 160))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1312))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 192))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 192))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1920))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 224))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 224))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1952))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 4))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 4))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 2))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 36))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 36))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 34))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 68))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 68))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 642))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 100))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 100))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 674))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 132))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 132))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1282))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 164))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 164))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1314))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 196))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 196))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1922))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 228))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 228))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1954))] * placeholder_shared[(((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner))]));
              Conv3dOutput[(((hh_outer_inner * 8) + cc_outer_inner))] = (Conv3dOutput[(((hh_outer_inner * 8) + cc_outer_inner))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 2))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 32))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 32))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 34))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 64))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 64))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 642))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 96))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 96))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 674))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 128))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 128))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1282))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 160))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 160))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1314))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 192))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 192))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1922))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 224))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 224))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1954))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 4))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 4))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 4))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 36))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 36))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 36))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 68))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 68))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 644))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 100))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 100))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 676))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 132))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 132))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1284))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 164))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 164))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1316))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 196))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 196))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1924))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 228))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 228))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1956))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 256))]));
              Conv3dOutput[(((hh_outer_inner * 8) + cc_outer_inner))] = (Conv3dOutput[(((hh_outer_inner * 8) + cc_outer_inner))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 4))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 32))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 32))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 36))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 64))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 64))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 644))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 96))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 96))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 676))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 128))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 128))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1284))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 160))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 160))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1316))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 192))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 192))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1924))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 224))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 224))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1956))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 4))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 4))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 6))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 36))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 36))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 38))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 68))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 68))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 646))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 100))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 100))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 678))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 132))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 132))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1286))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 164))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 164))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1318))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 196))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 196))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1926))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
              Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 228))] = (Conv3dOutput[((((hh_outer_inner * 8) + cc_outer_inner) + 228))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 8) * 2560) + (((((int)threadIdx.x) & 255) >> 5) * 80)) + (hh_outer_inner * 8)) + (rh_inner * 8)) + rc_outer_inner) + 1958))] * placeholder_shared[((((((rh_inner * 768) + (rc_outer_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + cc_outer_inner) + 512))]));
            }
          }
        }
      }
    }
  }
  for (int ax2_inner = 0; ax2_inner < 4; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 2; ++ax3_inner) {
      for (int ax4_inner = 0; ax4_inner < 4; ++ax4_inner) {
        T_relu[((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner))] = max(((Conv3dOutput[((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 2048))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 32))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 131072))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 64))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 133120))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 96))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 262144))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 128))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 264192))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 160))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 393216))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 192))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
        T_relu[(((((((((((((((int)blockIdx.x) >> 4) * 2097152) + ((((int)threadIdx.x) >> 8) * 1048576)) + (((((int)blockIdx.x) & 15) >> 3) * 524288)) + (((((int)threadIdx.x) & 255) >> 5) * 16384)) + (((((int)blockIdx.x) & 7) >> 1) * 4096)) + (ax2_inner * 512)) + ((((int)blockIdx.x) & 1) * 256)) + (ax3_inner * 128)) + ((((int)threadIdx.x) & 31) * 4)) + ax4_inner) + 395264))] = max(((Conv3dOutput[(((((ax2_inner * 8) + (ax3_inner * 4)) + ax4_inner) + 224))] * placeholder2[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]) + placeholder3[((((((int)threadIdx.x) & 31) * 4) + ax4_inner))]), 0.000000e+00f);
      }
    }
  }
}


