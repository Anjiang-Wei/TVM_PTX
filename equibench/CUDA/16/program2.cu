
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float DepthwiseConv2d[256];
  __shared__ float PaddedInput_shared[8448];
  __shared__ float placeholder_shared[12];
  for (int i_outer_inner_init = 0; i_outer_inner_init < 2; ++i_outer_inner_init) {
    for (int j_outer_inner_init = 0; j_outer_inner_init < 2; ++j_outer_inner_init) {
      DepthwiseConv2d[(((i_outer_inner_init * 32) + (j_outer_inner_init * 16)))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 64))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 128))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 192))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 1))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 65))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 129))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 193))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 2))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 66))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 130))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 194))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 3))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 67))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 131))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 195))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 4))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 68))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 132))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 196))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 5))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 69))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 133))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 197))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 6))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 70))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 134))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 198))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 7))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 71))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 135))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 199))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 8))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 72))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 136))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 200))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 9))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 73))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 137))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 201))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 10))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 74))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 138))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 202))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 11))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 75))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 139))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 203))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 12))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 76))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 140))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 204))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 13))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 77))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 141))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 205))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 14))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 78))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 142))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 206))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 15))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 79))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 143))] = 0.000000e+00f;
      DepthwiseConv2d[((((i_outer_inner_init * 32) + (j_outer_inner_init * 16)) + 207))] = 0.000000e+00f;
    }
  }
  for (int di_outer_outer = 0; di_outer_outer < 3; ++di_outer_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer < 264; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer) {
      PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 32) + ((int)threadIdx.x)))] = (((((1 <= ((((((int)blockIdx.x) >> 3) * 32) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 8) + (((int)threadIdx.x) >> 2)) / 66)) + di_outer_outer)) && (((((((int)blockIdx.x) >> 3) * 32) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 8) + (((int)threadIdx.x) >> 2)) / 66)) + di_outer_outer) < 129)) && (1 <= ((((((int)blockIdx.x) & 7) >> 2) * 64) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 8) + (((int)threadIdx.x) >> 2)) % 66)))) && (((((((int)blockIdx.x) & 7) >> 2) * 64) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 8) + (((int)threadIdx.x) >> 2)) % 66)) < 129)) ? placeholder[((((((((((((int)blockIdx.x) >> 3) * 65536) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 8) + (((int)threadIdx.x) >> 2)) / 66) * 2048)) + (di_outer_outer * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 8) + (((int)threadIdx.x) >> 2)) % 66) * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) - 2064))] : 0.000000e+00f);
    }
    if (((int)threadIdx.x) < 4) {
      placeholder_shared[((((int)threadIdx.x) * 3))] = placeholder1[(((((di_outer_outer * 48) + (((((int)threadIdx.x) * 3) >> 2) * 16)) + ((((int)blockIdx.x) & 3) * 4)) + ((((int)threadIdx.x) * 3) & 3)))];
    }
    if (((int)threadIdx.x) < 4) {
      placeholder_shared[(((((int)threadIdx.x) * 3) + 1))] = placeholder1[(((((di_outer_outer * 48) + ((((((int)threadIdx.x) * 3) + 1) >> 2) * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((((int)threadIdx.x) * 3) + 1) & 3)))];
    }
    if (((int)threadIdx.x) < 4) {
      placeholder_shared[(((((int)threadIdx.x) * 3) + 2))] = placeholder1[(((((di_outer_outer * 48) + ((((((int)threadIdx.x) * 3) + 2) >> 2) * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((((int)threadIdx.x) * 3) + 2) & 3)))];
    }
    __syncthreads();
    for (int i_outer_inner = 0; i_outer_inner < 2; ++i_outer_inner) {
      for (int j_outer_inner = 0; j_outer_inner < 2; ++j_outer_inner) {
        for (int dj_inner = 0; dj_inner < 3; ++dj_inner) {
          DepthwiseConv2d[(((i_outer_inner * 32) + (j_outer_inner * 16)))] = (DepthwiseConv2d[(((i_outer_inner * 32) + (j_outer_inner * 16)))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 64))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 64))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 128))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 128))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 128))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4224))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 192))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 192))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4352))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 1))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 1))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 65))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 65))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 132))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 129))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 129))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4228))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 193))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 193))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4356))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 2))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 2))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 8))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 66))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 66))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 136))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 130))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 130))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4232))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 194))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 194))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4360))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 3))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 3))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 12))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 67))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 67))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 140))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 131))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 131))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4236))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 195))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 195))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4364))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 4))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 4))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 16))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 68))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 68))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 144))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 132))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 132))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4240))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 196))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 196))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4368))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 5))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 5))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 20))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 69))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 69))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 148))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 133))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 133))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4244))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 197))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 197))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4372))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 6))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 6))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 24))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 70))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 70))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 152))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 134))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 134))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4248))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 198))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 198))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4376))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 7))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 7))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 28))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 71))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 71))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 156))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 135))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 135))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4252))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 199))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 199))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4380))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 8))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 8))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 32))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 72))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 72))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 160))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 136))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 136))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4256))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 200))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 200))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4384))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 9))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 9))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 36))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 73))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 73))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 164))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 137))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 137))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4260))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 201))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 201))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4388))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 10))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 10))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 40))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 74))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 74))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 168))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 138))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 138))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4264))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 202))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 202))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4392))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 11))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 11))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 44))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 75))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 75))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 172))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 139))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 139))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4268))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 203))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 203))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4396))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 12))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 12))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 48))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 76))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 76))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 176))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 140))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 140))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4272))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 204))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 204))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4400))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 13))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 13))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 52))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 77))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 77))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 180))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 141))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 141))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4276))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 205))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 205))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4404))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 14))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 14))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 56))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 78))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 78))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 184))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 142))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 142))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4280))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 206))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 206))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4408))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 15))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 15))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 60))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 79))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 79))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 188))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 143))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 143))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4284))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
          DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 207))] = (DepthwiseConv2d[((((i_outer_inner * 32) + (j_outer_inner * 16)) + 207))] + (PaddedInput_shared[((((((((((int)threadIdx.x) >> 2) * 528) + (i_outer_inner * 264)) + (j_outer_inner * 64)) + (dj_inner * 4)) + (((int)threadIdx.x) & 3)) + 4412))] * placeholder_shared[(((dj_inner * 4) + (((int)threadIdx.x) & 3)))]));
        }
      }
    }
  }
  for (int ax1_inner = 0; ax1_inner < 2; ++ax1_inner) {
    for (int ax2_inner = 0; ax2_inner < 32; ++ax2_inner) {
      T_relu[(((((((((((int)blockIdx.x) >> 3) * 65536) + ((((int)threadIdx.x) >> 2) * 4096)) + (ax1_inner * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax2_inner * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)))] = max((DepthwiseConv2d[(((ax1_inner * 32) + ax2_inner))] + placeholder2[((((((int)blockIdx.x) & 3) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.x) >> 3) * 65536) + ((((int)threadIdx.x) >> 2) * 4096)) + (ax1_inner * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax2_inner * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 512))] = max((DepthwiseConv2d[((((ax1_inner * 32) + ax2_inner) + 64))] + placeholder2[((((((int)blockIdx.x) & 3) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.x) >> 3) * 65536) + ((((int)threadIdx.x) >> 2) * 4096)) + (ax1_inner * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax2_inner * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 32768))] = max((DepthwiseConv2d[((((ax1_inner * 32) + ax2_inner) + 128))] + placeholder2[((((((int)blockIdx.x) & 3) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.x) >> 3) * 65536) + ((((int)threadIdx.x) >> 2) * 4096)) + (ax1_inner * 2048)) + (((((int)blockIdx.x) & 7) >> 2) * 1024)) + (ax2_inner * 16)) + ((((int)blockIdx.x) & 3) * 4)) + (((int)threadIdx.x) & 3)) + 33280))] = max((DepthwiseConv2d[((((ax1_inner * 32) + ax2_inner) + 192))] + placeholder2[((((((int)blockIdx.x) & 3) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
    }
  }
}


