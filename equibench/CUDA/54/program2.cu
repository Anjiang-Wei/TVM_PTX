
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv3dOutput[128];
  __shared__ float PaddedInput_shared[1176];
  __shared__ float placeholder_shared[1536];
  for (int cc_outer_inner_init = 0; cc_outer_inner_init < 32; ++cc_outer_inner_init) {
    Conv3dOutput[((cc_outer_inner_init * 2))] = 0.000000e+00f;
    Conv3dOutput[(((cc_outer_inner_init * 2) + 64))] = 0.000000e+00f;
    Conv3dOutput[(((cc_outer_inner_init * 2) + 1))] = 0.000000e+00f;
    Conv3dOutput[(((cc_outer_inner_init * 2) + 65))] = 0.000000e+00f;
  }
  for (int rd_outer_outer = 0; rd_outer_outer < 3; ++rd_outer_outer) {
    for (int rh_outer_outer = 0; rh_outer_outer < 3; ++rh_outer_outer) {
      for (int rc_outer_outer = 0; rc_outer_outer < 128; ++rc_outer_outer) {
        __syncthreads();
        PaddedInput_shared[((((int)threadIdx.x) * 2))] = ((((((1 <= ((((int)threadIdx.x) / 42) + rd_outer_outer)) && (1 <= (((((int)threadIdx.x) % 42) / 6) + rh_outer_outer))) && ((((((int)threadIdx.x) % 42) / 6) + rh_outer_outer) < 8)) && (2 <= (((int)threadIdx.x) % 6))) && ((((int)threadIdx.x) % 6) < 4)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((int)threadIdx.x) / 6) * 512)) + (((((int)threadIdx.x) % 6) >> 1) * 512)) + (rh_outer_outer * 512)) + (rc_outer_outer * 4)) + ((((int)threadIdx.x) & 1) * 2)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((int)threadIdx.x) * 2) + 1))] = ((((((1 <= ((((((int)threadIdx.x) * 2) + 1) / 84) + rd_outer_outer)) && (1 <= (((((((int)threadIdx.x) * 2) + 1) % 84) / 12) + rh_outer_outer))) && ((((((((int)threadIdx.x) * 2) + 1) % 84) / 12) + rh_outer_outer) < 8)) && (4 <= (((((int)threadIdx.x) * 2) + 1) % 12))) && ((((((int)threadIdx.x) * 2) + 1) % 12) < 8)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 1) / 12) * 512)) + (((((((int)threadIdx.x) * 2) + 1) % 12) >> 2) * 512)) + (rh_outer_outer * 512)) + (rc_outer_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 196) / 12) * 12) + ((((((int)threadIdx.x) >> 1) + 1) % 3) * 4)) + ((((int)threadIdx.x) & 1) * 2)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 28) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 28) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((int)threadIdx.x) >> 1) + 1) % 3))) && ((((((int)threadIdx.x) >> 1) + 1) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 196) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((int)threadIdx.x) >> 1) + 1) % 3) * 512)) + (rc_outer_outer * 4)) + ((((int)threadIdx.x) & 1) * 2)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 197) / 12) * 12) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3) * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 29) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 29) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3))) && ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 197) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3) * 512)) + (rc_outer_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 392) / 12) * 12) + ((((((int)threadIdx.x) >> 1) + 2) % 3) * 4)) + ((((int)threadIdx.x) & 1) * 2)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 56) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 56) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((int)threadIdx.x) >> 1) + 2) % 3))) && ((((((int)threadIdx.x) >> 1) + 2) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 392) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((int)threadIdx.x) >> 1) + 2) % 3) * 512)) + (rc_outer_outer * 4)) + ((((int)threadIdx.x) & 1) * 2)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 393) / 12) * 12) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3) * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 57) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 57) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3))) && ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 393) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3) * 512)) + (rc_outer_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((int)threadIdx.x) * 2) + 588))] = (((((1 <= (((((int)threadIdx.x) % 42) / 6) + rh_outer_outer)) && ((((((int)threadIdx.x) % 42) / 6) + rh_outer_outer) < 8)) && (2 <= (((int)threadIdx.x) % 6))) && ((((int)threadIdx.x) % 6) < 4)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((int)threadIdx.x) / 6) * 512)) + (((((int)threadIdx.x) % 6) >> 1) * 512)) + (rh_outer_outer * 512)) + (rc_outer_outer * 4)) + ((((int)threadIdx.x) & 1) * 2)) + 20480))] : 0.000000e+00f);
        PaddedInput_shared[((((((((int)threadIdx.x) * 2) + 589) / 12) * 12) + (((((int)threadIdx.x) * 2) + 1) % 12)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 1) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 1) % 84) / 12) + rh_outer_outer) < 8)) && (4 <= (((((int)threadIdx.x) * 2) + 1) % 12))) && ((((((int)threadIdx.x) * 2) + 1) % 12) < 8)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 589) / 12) * 512)) + (((((((int)threadIdx.x) * 2) + 1) % 12) >> 2) * 512)) + (rh_outer_outer * 512)) + (rc_outer_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 784) / 12) * 12) + ((((((int)threadIdx.x) >> 1) + 1) % 3) * 4)) + ((((int)threadIdx.x) & 1) * 2)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 28) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 28) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((int)threadIdx.x) >> 1) + 1) % 3))) && ((((((int)threadIdx.x) >> 1) + 1) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 784) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((int)threadIdx.x) >> 1) + 1) % 3) * 512)) + (rc_outer_outer * 4)) + ((((int)threadIdx.x) & 1) * 2)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 785) / 12) * 12) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3) * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)))] = (((((1 <= (((((((int)threadIdx.x) * 2) + 29) % 84) / 12) + rh_outer_outer)) && ((((((((int)threadIdx.x) * 2) + 29) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3))) && ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 785) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 1) % 3) * 512)) + (rc_outer_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 980) / 12) * 12) + ((((((int)threadIdx.x) >> 1) + 2) % 3) * 4)) + ((((int)threadIdx.x) & 1) * 2)))] = ((((((((((((int)threadIdx.x) * 2) + 980) / 84) + rd_outer_outer) < 15) && (1 <= (((((((int)threadIdx.x) * 2) + 56) % 84) / 12) + rh_outer_outer))) && ((((((((int)threadIdx.x) * 2) + 56) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((int)threadIdx.x) >> 1) + 2) % 3))) && ((((((int)threadIdx.x) >> 1) + 2) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 980) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((int)threadIdx.x) >> 1) + 2) % 3) * 512)) + (rc_outer_outer * 4)) + ((((int)threadIdx.x) & 1) * 2)) - 4608))] : 0.000000e+00f);
        PaddedInput_shared[(((((((((int)threadIdx.x) * 2) + 981) / 12) * 12) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3) * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)))] = ((((((((((((int)threadIdx.x) * 2) + 981) / 84) + rd_outer_outer) < 15) && (1 <= (((((((int)threadIdx.x) * 2) + 57) % 84) / 12) + rh_outer_outer))) && ((((((((int)threadIdx.x) * 2) + 57) % 84) / 12) + rh_outer_outer) < 8)) && (1 <= (((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3))) && ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3) < 2)) ? placeholder[((((((((rd_outer_outer * 3584) + ((((((int)threadIdx.x) * 2) + 981) / 12) * 512)) + (rh_outer_outer * 512)) + ((((((((int)threadIdx.x) * 2) + 1) >> 2) + 2) % 3) * 512)) + (rc_outer_outer * 4)) + (((((int)threadIdx.x) * 2) + 1) & 3)) - 4608))] : 0.000000e+00f);
        placeholder_shared[(((int)threadIdx.x))] = placeholder1[((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (rc_outer_outer * 2048)) + (((int)blockIdx.x) * 128)) + ((int)threadIdx.x)))];
        placeholder_shared[((((int)threadIdx.x) + 98))] = placeholder1[(((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 98) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 98) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 196))] = placeholder1[(((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 196) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 68) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 294))] = placeholder1[(((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 294) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 38) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 392))] = placeholder1[(((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 392) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) + 8)))];
        placeholder_shared[((((int)threadIdx.x) + 490))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 490) >> 9) * 262144)) + (rc_outer_outer * 2048)) + ((((((int)threadIdx.x) + 490) & 511) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 106) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 588))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 588) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 76) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 76) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 686))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 686) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 174) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 46) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 784))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 784) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 272) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) + 16)))];
        placeholder_shared[((((int)threadIdx.x) + 882))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 882) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 370) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 114) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 980))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 980) >> 9) * 262144)) + (rc_outer_outer * 2048)) + ((((((int)threadIdx.x) + 468) & 511) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 84) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 1078))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 1078) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 54) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 54) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 1176))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 1176) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 152) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) + 24)))];
        placeholder_shared[((((int)threadIdx.x) + 1274))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 1274) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 250) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 122) & 127)))];
        placeholder_shared[((((int)threadIdx.x) + 1372))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 1372) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 348) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + ((((int)threadIdx.x) + 92) & 127)))];
        if (((int)threadIdx.x) < 66) {
          placeholder_shared[((((int)threadIdx.x) + 1470))] = placeholder1[((((((((rd_outer_outer * 2359296) + (rh_outer_outer * 786432)) + (((((int)threadIdx.x) + 1470) >> 9) * 262144)) + (rc_outer_outer * 2048)) + (((((int)threadIdx.x) + 446) >> 7) * 512)) + (((int)blockIdx.x) * 128)) + (((int)threadIdx.x) + 62)))];
        }
        __syncthreads();
        for (int cc_outer_inner = 0; cc_outer_inner < 32; ++cc_outer_inner) {
          for (int rw_inner = 0; rw_inner < 3; ++rw_inner) {
            Conv3dOutput[((cc_outer_inner * 2))] = (Conv3dOutput[((cc_outer_inner * 2))] + (PaddedInput_shared[(((((int)threadIdx.x) * 12) + (rw_inner * 4)))] * placeholder_shared[(((rw_inner * 512) + (cc_outer_inner * 2)))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 64))] = (Conv3dOutput[(((cc_outer_inner * 2) + 64))] + (PaddedInput_shared[(((((int)threadIdx.x) * 12) + (rw_inner * 4)))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 64))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 1))] = (Conv3dOutput[(((cc_outer_inner * 2) + 1))] + (PaddedInput_shared[(((((int)threadIdx.x) * 12) + (rw_inner * 4)))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 1))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 65))] = (Conv3dOutput[(((cc_outer_inner * 2) + 65))] + (PaddedInput_shared[(((((int)threadIdx.x) * 12) + (rw_inner * 4)))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 65))]));
            Conv3dOutput[((cc_outer_inner * 2))] = (Conv3dOutput[((cc_outer_inner * 2))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 1))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 128))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 64))] = (Conv3dOutput[(((cc_outer_inner * 2) + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 1))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 192))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 1))] = (Conv3dOutput[(((cc_outer_inner * 2) + 1))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 1))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 129))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 65))] = (Conv3dOutput[(((cc_outer_inner * 2) + 65))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 1))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 193))]));
            Conv3dOutput[((cc_outer_inner * 2))] = (Conv3dOutput[((cc_outer_inner * 2))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 2))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 256))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 64))] = (Conv3dOutput[(((cc_outer_inner * 2) + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 2))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 320))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 1))] = (Conv3dOutput[(((cc_outer_inner * 2) + 1))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 2))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 257))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 65))] = (Conv3dOutput[(((cc_outer_inner * 2) + 65))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 2))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 321))]));
            Conv3dOutput[((cc_outer_inner * 2))] = (Conv3dOutput[((cc_outer_inner * 2))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 3))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 384))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 64))] = (Conv3dOutput[(((cc_outer_inner * 2) + 64))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 3))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 448))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 1))] = (Conv3dOutput[(((cc_outer_inner * 2) + 1))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 3))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 385))]));
            Conv3dOutput[(((cc_outer_inner * 2) + 65))] = (Conv3dOutput[(((cc_outer_inner * 2) + 65))] + (PaddedInput_shared[((((((int)threadIdx.x) * 12) + (rw_inner * 4)) + 3))] * placeholder_shared[((((rw_inner * 512) + (cc_outer_inner * 2)) + 449))]));
          }
        }
      }
    }
  }
  for (int ax4_inner = 0; ax4_inner < 64; ++ax4_inner) {
    T_relu[((((((int)threadIdx.x) * 512) + (((int)blockIdx.x) * 128)) + ax4_inner))] = max(((Conv3dOutput[(ax4_inner)] * placeholder2[(((((int)blockIdx.x) * 128) + ax4_inner))]) + placeholder3[(((((int)blockIdx.x) * 128) + ax4_inner))]), 0.000000e+00f);
    T_relu[(((((((int)threadIdx.x) * 512) + (((int)blockIdx.x) * 128)) + ax4_inner) + 64))] = max(((Conv3dOutput[((ax4_inner + 64))] * placeholder2[((((((int)blockIdx.x) * 128) + ax4_inner) + 64))]) + placeholder3[((((((int)blockIdx.x) * 128) + ax4_inner) + 64))]), 0.000000e+00f);
  }
}


