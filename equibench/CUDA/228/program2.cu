
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[56];
  __shared__ float PaddedInput_shared[3136];
  __shared__ float placeholder_shared[64];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 56; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)))];
    PaddedInput_shared[((((int)threadIdx.x) + 224))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 12544))];
    PaddedInput_shared[((((int)threadIdx.x) + 448))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 25088))];
    PaddedInput_shared[((((int)threadIdx.x) + 672))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 37632))];
    PaddedInput_shared[((((int)threadIdx.x) + 896))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 50176))];
    PaddedInput_shared[((((int)threadIdx.x) + 1120))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 62720))];
    PaddedInput_shared[((((int)threadIdx.x) + 1344))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 75264))];
    PaddedInput_shared[((((int)threadIdx.x) + 1568))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 87808))];
    PaddedInput_shared[((((int)threadIdx.x) + 1792))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 100352))];
    PaddedInput_shared[((((int)threadIdx.x) + 2016))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 112896))];
    PaddedInput_shared[((((int)threadIdx.x) + 2240))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 125440))];
    PaddedInput_shared[((((int)threadIdx.x) + 2464))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 137984))];
    PaddedInput_shared[((((int)threadIdx.x) + 2688))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 150528))];
    PaddedInput_shared[((((int)threadIdx.x) + 2912))] = placeholder[((((((((int)threadIdx.x) >> 2) * 224) + (rc_outer_outer * 4)) + (((int)threadIdx.x) & 3)) + 163072))];
    if (((int)threadIdx.x) < 64) {
      placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((((rc_outer_outer * 512) + ((((int)threadIdx.x) >> 4) * 128)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) & 15)))];
    }
    __syncthreads();
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 2) * 56))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 16))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 20))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 24))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 28))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 32))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 36))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 40))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 44))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 48))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 52))] * placeholder_shared[(((((int)threadIdx.x) & 3) * 4))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 1))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 5))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 9))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 13))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 17))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 21))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 25))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 29))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 33))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 37))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 41))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 45))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 49))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 53))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 16))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 2) * 56))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 4))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 8))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 12))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 16))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 20))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 24))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 28))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 32))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 36))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 40))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 44))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 48))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 52))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 1))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 1))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 5))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 9))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 13))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 17))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 21))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 25))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 29))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 33))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 37))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 41))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 45))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 49))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 53))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 17))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 2) * 56))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 4))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 8))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 12))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 16))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 20))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 24))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 28))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 32))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 36))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 40))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 44))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 48))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 52))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 2))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 1))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 5))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 9))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 13))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 17))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 21))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 25))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 29))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 33))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 37))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 41))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 45))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 49))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 53))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 18))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 2) * 56))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 4))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 8))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 12))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 16))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 20))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 24))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 28))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 32))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 36))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 40))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 44))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 48))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 52))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 3))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 1))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 5))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 9))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 13))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 17))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 21))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 25))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 29))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 33))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 37))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 41))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 45))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 49))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 53))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 19))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 2))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 6))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 14))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 18))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 22))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 26))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 30))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 34))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 38))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 42))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 46))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 50))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 54))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 32))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 3))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 7))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 11))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 15))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 19))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 23))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 27))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 31))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 35))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 39))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 43))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 47))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 51))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 55))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 48))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 2))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 6))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 14))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 18))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 22))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 26))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 30))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 34))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 38))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 42))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 46))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 50))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 54))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 33))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 3))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 7))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 11))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 15))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 19))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 23))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 27))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 31))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 35))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 39))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 43))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 47))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 51))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 55))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 49))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 2))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 6))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 14))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 18))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 22))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 26))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 30))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 34))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 38))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 42))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 46))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 50))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 54))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 34))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 3))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 7))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 11))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 15))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 19))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 23))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 27))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 31))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 35))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 39))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 43))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 47))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 51))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 55))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 50))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 2))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 6))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 10))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 14))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 18))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 22))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 26))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 30))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 34))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 38))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 42))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 46))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 50))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 54))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 35))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 3))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 7))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 11))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 15))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 19))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 23))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 27))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 31))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 35))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 39))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 43))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 47))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 51))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
    Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 56) + 55))] * placeholder_shared[((((((int)threadIdx.x) & 3) * 4) + 51))]));
  }
  for (int ax2_inner = 0; ax2_inner < 14; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
      T_relu[(((((((((int)threadIdx.x) >> 2) * 1792) + (ax2_inner * 128)) + (((int)blockIdx.x) * 16)) + ((((int)threadIdx.x) & 3) * 4)) + ax3_inner))] = max((Conv2dOutput[(((ax2_inner * 4) + ax3_inner))] + placeholder2[((((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) & 3) * 4)) + ax3_inner))]), 0.000000e+00f);
    }
  }
}


