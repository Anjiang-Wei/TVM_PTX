
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv2dOutput[1024];
  __shared__ float PaddedInput_shared[16384];
  __shared__ float placeholder_shared[65536];
  for (int xx_outer_inner_init = 0; xx_outer_inner_init < 4; ++xx_outer_inner_init) {
    for (int xx_inner_init = 0; xx_inner_init < 4; ++xx_inner_init) {
      Conv2dOutput[(((xx_outer_inner_init * 128) + (xx_inner_init * 32)))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 512))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 1))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 513))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 2))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 514))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 3))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 515))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 4))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 516))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 5))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 517))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 6))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 518))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 7))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 519))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 8))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 520))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 9))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 521))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 10))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 522))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 11))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 523))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 12))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 524))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 13))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 525))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 14))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 526))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 15))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 527))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 16))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 528))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 17))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 529))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 18))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 530))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 19))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 531))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 20))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 532))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 21))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 533))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 22))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 534))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 23))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 535))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 24))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 536))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 25))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 537))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 26))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 538))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 27))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 539))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 28))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 540))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 29))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 541))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 30))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 542))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 31))] = 0.000000e+00f;
      Conv2dOutput[((((xx_outer_inner_init * 128) + (xx_inner_init * 32)) + 543))] = 0.000000e+00f;
    }
  }
  for (int rc_outer_outer = 0; rc_outer_outer < 4; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 256))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 1024))];
    PaddedInput_shared[((((int)threadIdx.x) + 512))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 2048))];
    PaddedInput_shared[((((int)threadIdx.x) + 768))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 3072))];
    PaddedInput_shared[((((int)threadIdx.x) + 1024))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 4096))];
    PaddedInput_shared[((((int)threadIdx.x) + 1280))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 5120))];
    PaddedInput_shared[((((int)threadIdx.x) + 1536))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 6144))];
    PaddedInput_shared[((((int)threadIdx.x) + 1792))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 7168))];
    PaddedInput_shared[((((int)threadIdx.x) + 2048))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 8192))];
    PaddedInput_shared[((((int)threadIdx.x) + 2304))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 9216))];
    PaddedInput_shared[((((int)threadIdx.x) + 2560))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 10240))];
    PaddedInput_shared[((((int)threadIdx.x) + 2816))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 11264))];
    PaddedInput_shared[((((int)threadIdx.x) + 3072))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 12288))];
    PaddedInput_shared[((((int)threadIdx.x) + 3328))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 13312))];
    PaddedInput_shared[((((int)threadIdx.x) + 3584))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 14336))];
    PaddedInput_shared[((((int)threadIdx.x) + 3840))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 15360))];
    PaddedInput_shared[((((int)threadIdx.x) + 4096))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 16384))];
    PaddedInput_shared[((((int)threadIdx.x) + 4352))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 17408))];
    PaddedInput_shared[((((int)threadIdx.x) + 4608))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 18432))];
    PaddedInput_shared[((((int)threadIdx.x) + 4864))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 19456))];
    PaddedInput_shared[((((int)threadIdx.x) + 5120))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 20480))];
    PaddedInput_shared[((((int)threadIdx.x) + 5376))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 21504))];
    PaddedInput_shared[((((int)threadIdx.x) + 5632))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 22528))];
    PaddedInput_shared[((((int)threadIdx.x) + 5888))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 23552))];
    PaddedInput_shared[((((int)threadIdx.x) + 6144))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 24576))];
    PaddedInput_shared[((((int)threadIdx.x) + 6400))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 25600))];
    PaddedInput_shared[((((int)threadIdx.x) + 6656))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 26624))];
    PaddedInput_shared[((((int)threadIdx.x) + 6912))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 27648))];
    PaddedInput_shared[((((int)threadIdx.x) + 7168))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 28672))];
    PaddedInput_shared[((((int)threadIdx.x) + 7424))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 29696))];
    PaddedInput_shared[((((int)threadIdx.x) + 7680))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 30720))];
    PaddedInput_shared[((((int)threadIdx.x) + 7936))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 31744))];
    PaddedInput_shared[((((int)threadIdx.x) + 8192))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + ((((int)blockIdx.x) & 1) * 32768)) + ((((int)threadIdx.x) >> 6) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)) + 65536))];
    PaddedInput_shared[((((int)threadIdx.x) + 8448))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 8448) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 4) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 8704))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 8704) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 8) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 8960))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 8960) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 12) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 9216))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 9216) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 16) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 9472))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 9472) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 20) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 9728))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 9728) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 24) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 9984))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 9984) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 28) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 10240))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 10240) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 32) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 10496))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 10496) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 36) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 10752))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 10752) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 40) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 11008))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 11008) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 44) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 11264))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 11264) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 48) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 11520))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 11520) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 52) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 11776))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 11776) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 56) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 12032))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 12032) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 60) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 12288))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 12288) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 64) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 12544))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 12544) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 68) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 12800))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 12800) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 72) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 13056))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 13056) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 76) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 13312))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 13312) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 80) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 13568))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 13568) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 84) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 13824))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 13824) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 88) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 14080))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 14080) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 92) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 14336))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 14336) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 96) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 14592))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 14592) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 100) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 14848))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 14848) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 104) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 15104))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 15104) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 108) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 15360))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 15360) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 112) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 15616))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 15616) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 116) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 15872))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 15872) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 120) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    PaddedInput_shared[((((int)threadIdx.x) + 16128))] = placeholder[((((((((((int)blockIdx.x) >> 1) * 131072) + (((((int)threadIdx.x) + 16128) >> 13) * 65536)) + ((((int)blockIdx.x) & 1) * 32768)) + (((((int)threadIdx.x) >> 6) + 124) * 256)) + (rc_outer_outer * 64)) + (((int)threadIdx.x) & 63)))];
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer < 256; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer) {
      placeholder_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 256) + ((int)threadIdx.x)))] = placeholder1[((((rc_outer_outer * 65536) + (ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 256)) + ((int)threadIdx.x)))];
    }
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 8; ++rc_outer_inner) {
      for (int xx_outer_inner = 0; xx_outer_inner < 4; ++xx_outer_inner) {
        for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
          for (int xx_inner = 0; xx_inner < 4; ++xx_inner) {
            Conv2dOutput[(((xx_outer_inner * 128) + (xx_inner * 32)))] = (Conv2dOutput[(((xx_outer_inner * 128) + (xx_inner * 32)))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 512))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 512))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 512))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 1))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 1))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 1))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 513))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 513))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 513))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 2))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 2))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 2))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 514))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 514))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 514))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 3))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 3))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 3))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 515))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 515))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 515))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 4))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 4))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 4))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 516))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 516))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 516))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 5))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 5))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 5))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 517))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 517))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 517))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 6))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 6))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 6))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 518))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 518))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 518))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 7))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 7))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 7))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 519))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 519))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 519))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 8))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 8))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 8))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 520))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 520))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 520))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 9))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 9))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 9))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 521))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 521))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 521))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 10))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 10))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 10))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 522))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 522))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 522))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 11))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 11))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 11))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 523))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 523))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 523))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 12))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 12))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 12))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 524))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 524))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 524))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 13))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 13))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 13))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 525))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 525))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 525))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 14))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 14))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 14))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 526))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 526))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 526))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 15))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 15))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 15))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 527))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 527))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 527))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 16))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 16))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 16))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 528))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 528))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 528))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 17))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 17))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 17))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 529))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 529))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 529))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 18))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 18))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 18))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 530))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 530))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 530))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 19))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 19))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 19))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 531))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 531))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 531))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 20))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 20))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 20))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 532))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 532))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 532))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 21))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 21))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 21))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 533))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 533))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 533))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 22))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 22))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 22))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 534))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 534))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 534))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 23))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 23))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 23))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 535))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 535))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 535))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 24))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 24))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 24))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 536))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 536))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 536))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 25))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 25))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 25))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 537))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 537))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 537))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 26))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 26))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 26))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 538))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 538))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 538))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 27))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 27))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 27))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 539))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 539))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 539))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 28))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 28))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 28))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 540))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 540))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 540))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 29))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 29))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 29))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 541))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 541))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 541))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 30))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 30))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 30))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 542))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 542))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 542))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 31))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 31))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 31))]));
            Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 543))] = (Conv2dOutput[((((xx_outer_inner * 128) + (xx_inner * 32)) + 543))] + (PaddedInput_shared[(((((((((int)threadIdx.x) >> 4) * 1024) + (xx_outer_inner * 256)) + (xx_inner * 64)) + (rc_outer_inner * 8)) + rc_inner))] * placeholder_shared[(((((rc_outer_inner * 8192) + (rc_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + 543))]));
          }
        }
      }
    }
  }
  for (int ax2_inner = 0; ax2_inner < 16; ++ax2_inner) {
    for (int ax3_inner = 0; ax3_inner < 32; ++ax3_inner) {
      T_relu[(((((((((((int)blockIdx.x) >> 1) * 524288) + ((((int)threadIdx.x) >> 7) * 262144)) + ((((int)blockIdx.x) & 1) * 131072)) + (((((int)threadIdx.x) & 127) >> 4) * 16384)) + (ax2_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + ax3_inner))] = max(((Conv2dOutput[(((ax2_inner * 32) + ax3_inner))] + placeholder2[((((((int)threadIdx.x) & 15) * 32) + ax3_inner))]) + placeholder3[(((((((((((int)blockIdx.x) >> 1) * 524288) + ((((int)threadIdx.x) >> 7) * 262144)) + ((((int)blockIdx.x) & 1) * 131072)) + (((((int)threadIdx.x) & 127) >> 4) * 16384)) + (ax2_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + ax3_inner))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.x) >> 1) * 524288) + ((((int)threadIdx.x) >> 7) * 262144)) + ((((int)blockIdx.x) & 1) * 131072)) + (((((int)threadIdx.x) & 127) >> 4) * 16384)) + (ax2_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + ax3_inner) + 512))] = max(((Conv2dOutput[((((ax2_inner * 32) + ax3_inner) + 512))] + placeholder2[(((((((int)threadIdx.x) & 15) * 32) + ax3_inner) + 512))]) + placeholder3[((((((((((((int)blockIdx.x) >> 1) * 524288) + ((((int)threadIdx.x) >> 7) * 262144)) + ((((int)blockIdx.x) & 1) * 131072)) + (((((int)threadIdx.x) & 127) >> 4) * 16384)) + (ax2_inner * 1024)) + ((((int)threadIdx.x) & 15) * 32)) + ax3_inner) + 512))]), 0.000000e+00f);
    }
  }
}


