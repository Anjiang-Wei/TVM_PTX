
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[5];
  __shared__ float PaddedInput_shared[540];
  __shared__ float placeholder_shared[144];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 12))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 12))];
    PaddedInput_shared[((((int)threadIdx.x) + 24))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 24))];
    PaddedInput_shared[((((int)threadIdx.x) + 36))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 576))];
    PaddedInput_shared[((((int)threadIdx.x) + 48))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 48) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 60))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 60) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 72))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 1152))];
    PaddedInput_shared[((((int)threadIdx.x) + 84))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 84) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 96))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 96) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 108))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 1728))];
    PaddedInput_shared[((((int)threadIdx.x) + 120))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 120) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 132))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 132) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 144))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 2304))];
    PaddedInput_shared[((((int)threadIdx.x) + 156))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 156) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 168))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 168) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 180))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 8640))];
    PaddedInput_shared[((((int)threadIdx.x) + 192))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 192) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 204))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 204) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 216))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 216) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 36) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 228))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 228) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 48) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 240))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 240) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 60) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 252))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 252) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 72) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 264))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 264) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 84) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 276))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 276) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 96) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 288))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 288) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 108) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 300))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 300) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 120) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 312))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 312) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 132) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 324))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 324) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 144) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 336))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 336) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 156) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 348))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 348) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 168) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 360))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 17280))];
    PaddedInput_shared[((((int)threadIdx.x) + 372))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 372) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 384))] = placeholder[(((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 384) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 396))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 396) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 36) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 408))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 408) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 48) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 420))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 420) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 60) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 432))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 432) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 72) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 444))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 444) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 84) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 456))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 456) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 96) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 468))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 468) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 108) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 480))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 480) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 120) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 492))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 492) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 132) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    PaddedInput_shared[((((int)threadIdx.x) + 504))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 504) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 144) / 36) * 576)) + (rc_outer_outer * 36)) + ((int)threadIdx.x)))];
    PaddedInput_shared[((((int)threadIdx.x) + 516))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 516) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 156) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12)))];
    PaddedInput_shared[((((int)threadIdx.x) + 528))] = placeholder[((((((((((int)blockIdx.x) / 96) * 25920) + (((((int)threadIdx.x) + 528) / 180) * 8640)) + (((((int)blockIdx.x) % 96) >> 5) * 2880)) + (((((int)threadIdx.x) + 168) / 36) * 576)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 24)))];
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)))];
    placeholder_shared[((((int)threadIdx.x) + 12))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 384))];
    placeholder_shared[((((int)threadIdx.x) + 24))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 768))];
    placeholder_shared[((((int)threadIdx.x) + 36))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 1152))];
    placeholder_shared[((((int)threadIdx.x) + 48))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 1536))];
    placeholder_shared[((((int)threadIdx.x) + 60))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 1920))];
    placeholder_shared[((((int)threadIdx.x) + 72))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 2304))];
    placeholder_shared[((((int)threadIdx.x) + 84))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 2688))];
    placeholder_shared[((((int)threadIdx.x) + 96))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 3072))];
    placeholder_shared[((((int)threadIdx.x) + 108))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 3456))];
    placeholder_shared[((((int)threadIdx.x) + 120))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 3840))];
    placeholder_shared[((((int)threadIdx.x) + 132))] = placeholder1[((((((rc_outer_outer * 4608) + ((((int)threadIdx.x) >> 2) * 128)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 4224))];
    __syncthreads();
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 2) * 180))] * placeholder_shared[((((int)threadIdx.x) & 3))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 36))] * placeholder_shared[((((int)threadIdx.x) & 3))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 72))] * placeholder_shared[((((int)threadIdx.x) & 3))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 108))] * placeholder_shared[((((int)threadIdx.x) & 3))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 144))] * placeholder_shared[((((int)threadIdx.x) & 3))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 4))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 37))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 4))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 73))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 4))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 109))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 4))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 145))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 4))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 8))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 38))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 8))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 74))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 8))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 110))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 8))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 146))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 8))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 12))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 39))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 12))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 75))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 12))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 111))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 12))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 147))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 12))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 16))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 40))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 16))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 76))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 16))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 112))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 16))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 148))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 16))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 20))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 41))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 20))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 77))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 20))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 113))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 20))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 149))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 20))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 24))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 42))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 24))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 78))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 24))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 114))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 24))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 150))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 24))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 28))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 43))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 28))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 79))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 28))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 115))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 28))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 151))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 28))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 32))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 44))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 32))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 80))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 32))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 116))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 32))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 152))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 32))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 36))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 45))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 36))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 81))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 36))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 117))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 36))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 153))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 36))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 40))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 46))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 40))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 82))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 40))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 118))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 40))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 154))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 40))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 44))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 47))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 44))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 83))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 44))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 119))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 44))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 155))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 44))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 48))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 48))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 48))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 84))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 48))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 120))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 48))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 156))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 48))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 52))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 49))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 52))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 85))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 52))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 121))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 52))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 157))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 52))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 56))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 50))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 56))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 86))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 56))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 122))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 56))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 158))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 56))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 60))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 51))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 60))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 87))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 60))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 123))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 60))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 159))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 60))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 16))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 64))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 52))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 64))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 88))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 64))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 124))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 64))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 160))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 64))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 17))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 68))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 53))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 68))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 89))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 68))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 125))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 68))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 161))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 68))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 18))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 72))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 54))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 72))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 90))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 72))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 126))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 72))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 162))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 72))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 19))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 76))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 55))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 76))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 91))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 76))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 127))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 76))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 163))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 76))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 20))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 80))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 56))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 80))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 92))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 80))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 128))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 80))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 164))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 80))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 21))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 84))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 57))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 84))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 93))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 84))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 129))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 84))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 165))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 84))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 22))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 88))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 58))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 88))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 94))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 88))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 130))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 88))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 166))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 88))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 23))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 92))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 59))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 92))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 95))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 92))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 131))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 92))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 167))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 92))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 24))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 96))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 60))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 96))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 96))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 96))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 132))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 96))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 168))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 96))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 25))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 100))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 61))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 100))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 97))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 100))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 133))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 100))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 169))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 100))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 26))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 104))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 62))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 104))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 98))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 104))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 134))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 104))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 170))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 104))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 27))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 108))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 63))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 108))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 99))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 108))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 135))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 108))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 171))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 108))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 28))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 112))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 64))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 112))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 100))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 112))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 136))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 112))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 172))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 112))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 29))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 116))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 65))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 116))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 101))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 116))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 137))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 116))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 173))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 116))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 30))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 120))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 66))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 120))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 102))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 120))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 138))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 120))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 174))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 120))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 31))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 124))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 67))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 124))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 103))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 124))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 139))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 124))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 175))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 124))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 32))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 128))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 68))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 128))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 104))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 128))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 140))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 128))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 176))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 128))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 33))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 132))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 69))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 132))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 105))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 132))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 141))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 132))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 177))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 132))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 34))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 136))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 70))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 136))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 106))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 136))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 142))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 136))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 178))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 136))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 35))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 140))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 71))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 140))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 107))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 140))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 143))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 140))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 2) * 180) + 179))] * placeholder_shared[(((((int)threadIdx.x) & 3) + 140))]));
  }
  T_relu[(((((((((int)blockIdx.x) / 96) * 5760) + ((((int)threadIdx.x) >> 2) * 1920)) + (((((int)blockIdx.x) % 96) >> 5) * 640)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)))] = max((Conv2dOutput[(0)] + placeholder2[((((((int)blockIdx.x) & 31) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.x) / 96) * 5760) + ((((int)threadIdx.x) >> 2) * 1920)) + (((((int)blockIdx.x) % 96) >> 5) * 640)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 128))] = max((Conv2dOutput[(1)] + placeholder2[((((((int)blockIdx.x) & 31) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.x) / 96) * 5760) + ((((int)threadIdx.x) >> 2) * 1920)) + (((((int)blockIdx.x) % 96) >> 5) * 640)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 256))] = max((Conv2dOutput[(2)] + placeholder2[((((((int)blockIdx.x) & 31) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.x) / 96) * 5760) + ((((int)threadIdx.x) >> 2) * 1920)) + (((((int)blockIdx.x) % 96) >> 5) * 640)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 384))] = max((Conv2dOutput[(3)] + placeholder2[((((((int)blockIdx.x) & 31) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.x) / 96) * 5760) + ((((int)threadIdx.x) >> 2) * 1920)) + (((((int)blockIdx.x) % 96) >> 5) * 640)) + ((((int)blockIdx.x) & 31) * 4)) + (((int)threadIdx.x) & 3)) + 512))] = max((Conv2dOutput[(4)] + placeholder2[((((((int)blockIdx.x) & 31) * 4) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
}


