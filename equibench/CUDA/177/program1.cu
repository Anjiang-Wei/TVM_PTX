
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[48];
  __shared__ float PaddedInput_shared[5760];
  __shared__ float placeholder_shared[144];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 30))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 30))];
  PaddedInput_shared[((((int)threadIdx.x) + 60))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 60))];
  PaddedInput_shared[((((int)threadIdx.x) + 90))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 90))];
  PaddedInput_shared[((((int)threadIdx.x) + 120))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 120))];
  PaddedInput_shared[((((int)threadIdx.x) + 150))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 150))];
  PaddedInput_shared[((((int)threadIdx.x) + 180))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 180))];
  PaddedInput_shared[((((int)threadIdx.x) + 210))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 210))];
  PaddedInput_shared[((((int)threadIdx.x) + 240))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 1440))];
  PaddedInput_shared[((((int)threadIdx.x) + 270))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 270) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 300))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 300) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 330))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 330) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 360))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 360) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 390))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 390) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 420))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 420) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 450))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 450) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 480))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 2880))];
  PaddedInput_shared[((((int)threadIdx.x) + 510))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 510) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 540))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 540) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 570))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 570) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 600))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 600) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 630))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 630) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 660))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 660) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 690))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 690) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 720))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 4320))];
  PaddedInput_shared[((((int)threadIdx.x) + 750))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 750) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 780))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 780) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 810))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 810) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 840))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 840) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 870))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 870) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 900))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 900) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 930))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 930) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 960))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 5760))];
  PaddedInput_shared[((((int)threadIdx.x) + 990))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 990) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1020))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1020) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1050))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1050) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1080))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1080) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1110))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1110) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1140))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1140) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1170))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1170) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1200))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 7200))];
  PaddedInput_shared[((((int)threadIdx.x) + 1230))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1230) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1260))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1260) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1290))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1290) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1320))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1320) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1350))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1350) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1380))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1380) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1410))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)threadIdx.x) + 1410) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1440))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 86400))];
  PaddedInput_shared[((((int)threadIdx.x) + 1470))] = placeholder[(((((((((int)threadIdx.x) + 1470) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1500))] = placeholder[(((((((((int)threadIdx.x) + 1500) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1530))] = placeholder[(((((((((int)threadIdx.x) + 1530) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1560))] = placeholder[(((((((((int)threadIdx.x) + 1560) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1590))] = placeholder[(((((((((int)threadIdx.x) + 1590) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1620))] = placeholder[(((((((((int)threadIdx.x) + 1620) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1650))] = placeholder[(((((((((int)threadIdx.x) + 1650) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1680))] = placeholder[((((((((((int)threadIdx.x) + 1680) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 240) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1710))] = placeholder[((((((((((int)threadIdx.x) + 1710) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 270) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1740))] = placeholder[((((((((((int)threadIdx.x) + 1740) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 300) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1770))] = placeholder[((((((((((int)threadIdx.x) + 1770) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 330) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1800))] = placeholder[((((((((((int)threadIdx.x) + 1800) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 360) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1830))] = placeholder[((((((((((int)threadIdx.x) + 1830) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 390) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1860))] = placeholder[((((((((((int)threadIdx.x) + 1860) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 420) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1890))] = placeholder[((((((((((int)threadIdx.x) + 1890) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 450) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1920))] = placeholder[((((((((((int)threadIdx.x) + 1920) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 480) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1950))] = placeholder[((((((((((int)threadIdx.x) + 1950) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 510) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 1980))] = placeholder[((((((((((int)threadIdx.x) + 1980) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 540) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2010))] = placeholder[((((((((((int)threadIdx.x) + 2010) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 570) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2040))] = placeholder[((((((((((int)threadIdx.x) + 2040) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 600) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2070))] = placeholder[((((((((((int)threadIdx.x) + 2070) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 630) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2100))] = placeholder[((((((((((int)threadIdx.x) + 2100) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 660) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2130))] = placeholder[((((((((((int)threadIdx.x) + 2130) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 690) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2160))] = placeholder[((((((((((int)threadIdx.x) + 2160) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 720) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2190))] = placeholder[((((((((((int)threadIdx.x) + 2190) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 750) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2220))] = placeholder[((((((((((int)threadIdx.x) + 2220) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 780) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2250))] = placeholder[((((((((((int)threadIdx.x) + 2250) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 810) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2280))] = placeholder[((((((((((int)threadIdx.x) + 2280) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 840) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2310))] = placeholder[((((((((((int)threadIdx.x) + 2310) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 870) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2340))] = placeholder[((((((((((int)threadIdx.x) + 2340) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 900) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2370))] = placeholder[((((((((((int)threadIdx.x) + 2370) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 930) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2400))] = placeholder[((((((((((int)threadIdx.x) + 2400) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 960) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2430))] = placeholder[((((((((((int)threadIdx.x) + 2430) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 990) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2460))] = placeholder[((((((((((int)threadIdx.x) + 2460) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1020) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2490))] = placeholder[((((((((((int)threadIdx.x) + 2490) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1050) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2520))] = placeholder[((((((((((int)threadIdx.x) + 2520) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1080) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2550))] = placeholder[((((((((((int)threadIdx.x) + 2550) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1110) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2580))] = placeholder[((((((((((int)threadIdx.x) + 2580) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1140) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2610))] = placeholder[((((((((((int)threadIdx.x) + 2610) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1170) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2640))] = placeholder[((((((((((int)threadIdx.x) + 2640) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1200) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2670))] = placeholder[((((((((((int)threadIdx.x) + 2670) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1230) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2700))] = placeholder[((((((((((int)threadIdx.x) + 2700) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1260) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2730))] = placeholder[((((((((((int)threadIdx.x) + 2730) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1290) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2760))] = placeholder[((((((((((int)threadIdx.x) + 2760) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1320) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2790))] = placeholder[((((((((((int)threadIdx.x) + 2790) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1350) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2820))] = placeholder[((((((((((int)threadIdx.x) + 2820) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1380) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2850))] = placeholder[((((((((((int)threadIdx.x) + 2850) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1410) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2880))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 172800))];
  PaddedInput_shared[((((int)threadIdx.x) + 2910))] = placeholder[(((((((((int)threadIdx.x) + 2910) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2940))] = placeholder[(((((((((int)threadIdx.x) + 2940) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 2970))] = placeholder[(((((((((int)threadIdx.x) + 2970) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3000))] = placeholder[(((((((((int)threadIdx.x) + 3000) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3030))] = placeholder[(((((((((int)threadIdx.x) + 3030) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3060))] = placeholder[(((((((((int)threadIdx.x) + 3060) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3090))] = placeholder[(((((((((int)threadIdx.x) + 3090) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3120))] = placeholder[((((((((((int)threadIdx.x) + 3120) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 240) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3150))] = placeholder[((((((((((int)threadIdx.x) + 3150) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 270) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3180))] = placeholder[((((((((((int)threadIdx.x) + 3180) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 300) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3210))] = placeholder[((((((((((int)threadIdx.x) + 3210) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 330) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3240))] = placeholder[((((((((((int)threadIdx.x) + 3240) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 360) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3270))] = placeholder[((((((((((int)threadIdx.x) + 3270) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 390) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3300))] = placeholder[((((((((((int)threadIdx.x) + 3300) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 420) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3330))] = placeholder[((((((((((int)threadIdx.x) + 3330) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 450) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3360))] = placeholder[((((((((((int)threadIdx.x) + 3360) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 480) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3390))] = placeholder[((((((((((int)threadIdx.x) + 3390) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 510) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3420))] = placeholder[((((((((((int)threadIdx.x) + 3420) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 540) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3450))] = placeholder[((((((((((int)threadIdx.x) + 3450) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 570) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3480))] = placeholder[((((((((((int)threadIdx.x) + 3480) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 600) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3510))] = placeholder[((((((((((int)threadIdx.x) + 3510) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 630) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3540))] = placeholder[((((((((((int)threadIdx.x) + 3540) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 660) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3570))] = placeholder[((((((((((int)threadIdx.x) + 3570) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 690) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3600))] = placeholder[((((((((((int)threadIdx.x) + 3600) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 720) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3630))] = placeholder[((((((((((int)threadIdx.x) + 3630) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 750) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3660))] = placeholder[((((((((((int)threadIdx.x) + 3660) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 780) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3690))] = placeholder[((((((((((int)threadIdx.x) + 3690) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 810) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3720))] = placeholder[((((((((((int)threadIdx.x) + 3720) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 840) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3750))] = placeholder[((((((((((int)threadIdx.x) + 3750) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 870) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3780))] = placeholder[((((((((((int)threadIdx.x) + 3780) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 900) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3810))] = placeholder[((((((((((int)threadIdx.x) + 3810) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 930) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3840))] = placeholder[((((((((((int)threadIdx.x) + 3840) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 960) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3870))] = placeholder[((((((((((int)threadIdx.x) + 3870) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 990) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3900))] = placeholder[((((((((((int)threadIdx.x) + 3900) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1020) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3930))] = placeholder[((((((((((int)threadIdx.x) + 3930) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1050) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3960))] = placeholder[((((((((((int)threadIdx.x) + 3960) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1080) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 3990))] = placeholder[((((((((((int)threadIdx.x) + 3990) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1110) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4020))] = placeholder[((((((((((int)threadIdx.x) + 4020) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1140) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4050))] = placeholder[((((((((((int)threadIdx.x) + 4050) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1170) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4080))] = placeholder[((((((((((int)threadIdx.x) + 4080) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1200) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4110))] = placeholder[((((((((((int)threadIdx.x) + 4110) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1230) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4140))] = placeholder[((((((((((int)threadIdx.x) + 4140) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1260) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4170))] = placeholder[((((((((((int)threadIdx.x) + 4170) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1290) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4200))] = placeholder[((((((((((int)threadIdx.x) + 4200) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1320) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4230))] = placeholder[((((((((((int)threadIdx.x) + 4230) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1350) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4260))] = placeholder[((((((((((int)threadIdx.x) + 4260) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1380) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4290))] = placeholder[((((((((((int)threadIdx.x) + 4290) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1410) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4320))] = placeholder[((((((((int)blockIdx.x) / 72) * 8640) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)) + 259200))];
  PaddedInput_shared[((((int)threadIdx.x) + 4350))] = placeholder[(((((((((int)threadIdx.x) + 4350) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4380))] = placeholder[(((((((((int)threadIdx.x) + 4380) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4410))] = placeholder[(((((((((int)threadIdx.x) + 4410) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4440))] = placeholder[(((((((((int)threadIdx.x) + 4440) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4470))] = placeholder[(((((((((int)threadIdx.x) + 4470) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4500))] = placeholder[(((((((((int)threadIdx.x) + 4500) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4530))] = placeholder[(((((((((int)threadIdx.x) + 4530) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4560))] = placeholder[((((((((((int)threadIdx.x) + 4560) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 240) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4590))] = placeholder[((((((((((int)threadIdx.x) + 4590) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 270) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4620))] = placeholder[((((((((((int)threadIdx.x) + 4620) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 300) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4650))] = placeholder[((((((((((int)threadIdx.x) + 4650) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 330) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4680))] = placeholder[((((((((((int)threadIdx.x) + 4680) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 360) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4710))] = placeholder[((((((((((int)threadIdx.x) + 4710) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 390) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4740))] = placeholder[((((((((((int)threadIdx.x) + 4740) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 420) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4770))] = placeholder[((((((((((int)threadIdx.x) + 4770) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 450) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4800))] = placeholder[((((((((((int)threadIdx.x) + 4800) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 480) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4830))] = placeholder[((((((((((int)threadIdx.x) + 4830) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 510) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4860))] = placeholder[((((((((((int)threadIdx.x) + 4860) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 540) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4890))] = placeholder[((((((((((int)threadIdx.x) + 4890) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 570) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4920))] = placeholder[((((((((((int)threadIdx.x) + 4920) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 600) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4950))] = placeholder[((((((((((int)threadIdx.x) + 4950) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 630) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 4980))] = placeholder[((((((((((int)threadIdx.x) + 4980) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 660) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5010))] = placeholder[((((((((((int)threadIdx.x) + 5010) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 690) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5040))] = placeholder[((((((((((int)threadIdx.x) + 5040) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 720) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5070))] = placeholder[((((((((((int)threadIdx.x) + 5070) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 750) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5100))] = placeholder[((((((((((int)threadIdx.x) + 5100) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 780) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5130))] = placeholder[((((((((((int)threadIdx.x) + 5130) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 810) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5160))] = placeholder[((((((((((int)threadIdx.x) + 5160) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 840) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5190))] = placeholder[((((((((((int)threadIdx.x) + 5190) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 870) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5220))] = placeholder[((((((((((int)threadIdx.x) + 5220) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 900) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5250))] = placeholder[((((((((((int)threadIdx.x) + 5250) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 930) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5280))] = placeholder[((((((((((int)threadIdx.x) + 5280) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 960) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5310))] = placeholder[((((((((((int)threadIdx.x) + 5310) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 990) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5340))] = placeholder[((((((((((int)threadIdx.x) + 5340) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1020) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5370))] = placeholder[((((((((((int)threadIdx.x) + 5370) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1050) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5400))] = placeholder[((((((((((int)threadIdx.x) + 5400) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1080) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5430))] = placeholder[((((((((((int)threadIdx.x) + 5430) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1110) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5460))] = placeholder[((((((((((int)threadIdx.x) + 5460) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1140) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5490))] = placeholder[((((((((((int)threadIdx.x) + 5490) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1170) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5520))] = placeholder[((((((((((int)threadIdx.x) + 5520) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1200) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + ((int)threadIdx.x)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5550))] = placeholder[((((((((((int)threadIdx.x) + 5550) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1230) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 30)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5580))] = placeholder[((((((((((int)threadIdx.x) + 5580) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1260) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 60)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5610))] = placeholder[((((((((((int)threadIdx.x) + 5610) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1290) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 90)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5640))] = placeholder[((((((((((int)threadIdx.x) + 5640) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1320) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 120)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5670))] = placeholder[((((((((((int)threadIdx.x) + 5670) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1350) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 150)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5700))] = placeholder[((((((((((int)threadIdx.x) + 5700) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1380) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 180)))];
  PaddedInput_shared[((((int)threadIdx.x) + 5730))] = placeholder[((((((((((int)threadIdx.x) + 5730) / 1440) * 86400) + ((((int)blockIdx.x) / 72) * 8640)) + (((((int)threadIdx.x) + 1410) / 240) * 1440)) + (((((int)blockIdx.x) % 72) / 12) * 240)) + (((int)threadIdx.x) + 210)))];
  placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((((((int)threadIdx.x) / 6) * 72) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)))];
  placeholder_shared[((((int)threadIdx.x) + 30))] = placeholder1[((((((((int)threadIdx.x) / 6) * 72) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 360))];
  placeholder_shared[((((int)threadIdx.x) + 60))] = placeholder1[((((((((int)threadIdx.x) / 6) * 72) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 720))];
  placeholder_shared[((((int)threadIdx.x) + 90))] = placeholder1[((((((((int)threadIdx.x) / 6) * 72) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 1080))];
  if (((int)threadIdx.x) < 24) {
    placeholder_shared[((((int)threadIdx.x) + 120))] = placeholder1[((((((((int)threadIdx.x) / 6) * 72) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 1440))];
  }
  __syncthreads();
  for (int rc_outer_inner = 0; rc_outer_inner < 3; ++rc_outer_inner) {
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 240))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 480))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 720))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 960))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1200))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2880))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3120))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3360))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3600))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3840))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4080))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1440))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1680))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1920))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2160))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2400))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2640))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4320))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4560))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4800))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5040))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5280))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5520))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 241))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 481))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 721))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 961))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1201))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2881))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3121))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3361))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3601))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3841))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4081))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1441))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1681))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1921))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2161))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2401))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2641))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4321))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4561))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4801))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5041))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5281))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5521))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 242))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 482))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 722))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 962))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1202))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2882))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3122))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3362))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3602))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3842))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4082))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1442))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1682))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1922))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2162))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2402))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2642))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4322))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4562))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4802))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5042))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5282))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5522))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 243))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 483))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 723))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 963))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1203))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2883))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3123))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3363))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3603))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3843))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4083))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1443))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1683))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1923))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2163))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2403))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2643))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4323))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4563))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4803))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5043))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5283))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5523))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 244))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 484))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 724))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 964))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1204))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2884))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3124))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3364))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3604))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3844))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4084))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1444))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1684))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1924))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2164))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2404))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2644))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4324))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4564))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4804))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5044))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5284))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5524))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 245))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 485))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 725))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 965))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1205))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2885))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3125))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3365))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3605))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3845))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4085))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1445))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1685))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1925))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2165))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2405))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2645))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4325))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4565))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4805))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5045))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5285))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5525))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 6))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 246))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 486))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 726))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 966))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1206))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2886))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3126))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3366))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3606))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3846))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4086))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1446))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1686))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1926))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2166))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2406))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2646))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4326))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4566))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4806))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5046))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5286))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5526))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 7))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 247))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 487))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 727))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 967))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1207))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2887))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3127))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3367))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3607))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3847))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4087))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1447))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1687))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1927))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2167))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2407))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2647))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4327))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4567))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4807))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5047))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5287))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5527))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 24))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 264))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 504))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 744))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 984))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1224))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2904))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3144))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3384))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3624))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3864))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4104))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1464))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1704))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1944))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2184))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2424))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2664))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4344))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4584))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4824))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5064))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5304))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5544))] * placeholder_shared[(((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 25))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 265))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 505))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 745))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 985))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1225))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2905))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3145))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3385))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3625))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3865))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4105))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1465))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1705))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1945))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2185))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2425))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2665))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4345))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4585))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4825))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5065))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5305))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5545))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 6))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 26))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 266))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 506))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 746))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 986))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1226))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2906))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3146))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3386))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3626))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3866))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4106))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1466))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1706))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1946))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2186))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2426))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2666))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4346))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4586))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4826))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5066))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5306))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5546))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 12))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 27))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 267))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 507))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 747))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 987))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1227))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2907))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3147))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3387))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3627))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3867))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4107))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1467))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1707))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1947))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2187))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2427))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2667))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4347))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4587))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4827))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5067))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5307))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5547))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 18))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 28))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 268))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 508))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 748))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 988))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1228))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2908))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3148))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3388))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3628))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3868))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4108))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1468))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1708))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1948))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2188))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2428))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2668))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4348))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4588))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4828))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5068))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5308))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5548))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 24))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 29))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 269))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 509))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 749))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 989))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1229))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2909))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3149))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3389))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3629))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3869))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4109))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1469))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1709))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1949))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2189))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2429))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2669))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4349))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4589))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4829))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5069))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5309))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5549))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 30))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 30))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 270))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 510))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 750))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 990))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1230))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2910))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3150))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3390))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3630))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3870))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4110))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1470))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1710))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1950))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2190))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2430))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2670))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4350))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4590))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4830))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5070))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5310))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5550))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 36))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 31))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 271))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 511))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 751))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 991))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1231))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2911))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3151))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3391))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3631))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 3871))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4111))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1471))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1711))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 1951))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2191))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2431))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 2671))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4351))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4591))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 4831))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5071))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5311))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[(((((((int)threadIdx.x) / 6) * 48) + (rc_outer_inner * 8)) + 5551))] * placeholder_shared[((((rc_outer_inner * 48) + (((int)threadIdx.x) % 6)) + 42))]));
  }
  for (int ax0_inner = 0; ax0_inner < 2; ++ax0_inner) {
    for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
      T_relu[((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)))] = max((Conv2dOutput[(((ax0_inner * 2) + ax2_inner))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 4320))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 4))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 8640))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 8))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 12960))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 12))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 17280))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 16))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 21600))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 20))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 518400))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 24))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 522720))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 28))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 527040))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 32))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 531360))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 36))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 535680))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 40))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
      T_relu[(((((((((ax0_inner * 259200) + ((((int)blockIdx.x) / 72) * 25920)) + (((((int)blockIdx.x) % 72) / 12) * 720)) + ((((int)threadIdx.x) / 6) * 144)) + (ax2_inner * 72)) + ((((int)blockIdx.x) % 12) * 6)) + (((int)threadIdx.x) % 6)) + 540000))] = max((Conv2dOutput[((((ax0_inner * 2) + ax2_inner) + 44))] + placeholder2[((((((int)blockIdx.x) % 12) * 6) + (((int)threadIdx.x) % 6)))]), 0.000000e+00f);
    }
  }
}


