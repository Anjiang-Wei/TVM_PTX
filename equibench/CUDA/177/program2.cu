
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[128];
  __shared__ float PaddedInput_shared[1024];
  __shared__ float placeholder_shared[1024];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(64)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(65)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(66)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(67)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(68)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(69)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(70)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(71)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(72)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(73)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(74)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(75)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(76)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(77)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(78)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(79)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(80)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(81)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(82)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(83)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(84)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(85)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(86)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(87)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(88)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(89)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(90)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(91)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(92)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(93)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(94)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(95)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(96)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(97)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(98)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(99)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(100)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(101)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(102)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(103)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(104)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(105)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(106)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(107)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(108)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(109)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(110)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(111)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(112)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(113)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(114)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(115)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(116)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(117)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(118)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  Conv2dOutput[(119)] = 0.000000e+00f;
  Conv2dOutput[(56)] = 0.000000e+00f;
  Conv2dOutput[(120)] = 0.000000e+00f;
  Conv2dOutput[(57)] = 0.000000e+00f;
  Conv2dOutput[(121)] = 0.000000e+00f;
  Conv2dOutput[(58)] = 0.000000e+00f;
  Conv2dOutput[(122)] = 0.000000e+00f;
  Conv2dOutput[(59)] = 0.000000e+00f;
  Conv2dOutput[(123)] = 0.000000e+00f;
  Conv2dOutput[(60)] = 0.000000e+00f;
  Conv2dOutput[(124)] = 0.000000e+00f;
  Conv2dOutput[(61)] = 0.000000e+00f;
  Conv2dOutput[(125)] = 0.000000e+00f;
  Conv2dOutput[(62)] = 0.000000e+00f;
  Conv2dOutput[(126)] = 0.000000e+00f;
  Conv2dOutput[(63)] = 0.000000e+00f;
  Conv2dOutput[(127)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 6; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[(((int)threadIdx.x))] = placeholder[(((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 32))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 192))];
    PaddedInput_shared[((((int)threadIdx.x) + 64))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 6144))];
    PaddedInput_shared[((((int)threadIdx.x) + 96))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)threadIdx.x) + 96) >> 6) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 128))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 12288))];
    PaddedInput_shared[((((int)threadIdx.x) + 160))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)threadIdx.x) + 160) >> 6) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 192))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 18432))];
    PaddedInput_shared[((((int)threadIdx.x) + 224))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)threadIdx.x) + 224) >> 6) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 256))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 393216))];
    PaddedInput_shared[((((int)threadIdx.x) + 288))] = placeholder[(((((((((((int)threadIdx.x) + 288) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 320))] = placeholder[((((((((((((int)threadIdx.x) + 320) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 4) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 352))] = placeholder[((((((((((((int)threadIdx.x) + 352) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 6) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 384))] = placeholder[((((((((((((int)threadIdx.x) + 384) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 8) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 416))] = placeholder[((((((((((((int)threadIdx.x) + 416) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 10) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 448))] = placeholder[((((((((((((int)threadIdx.x) + 448) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 12) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 480))] = placeholder[((((((((((((int)threadIdx.x) + 480) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 14) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 512))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 786432))];
    PaddedInput_shared[((((int)threadIdx.x) + 544))] = placeholder[(((((((((((int)threadIdx.x) + 544) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 576))] = placeholder[((((((((((((int)threadIdx.x) + 576) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 4) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 608))] = placeholder[((((((((((((int)threadIdx.x) + 608) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 6) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 640))] = placeholder[((((((((((((int)threadIdx.x) + 640) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 8) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 672))] = placeholder[((((((((((((int)threadIdx.x) + 672) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 10) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 704))] = placeholder[((((((((((((int)threadIdx.x) + 704) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 12) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 736))] = placeholder[((((((((((((int)threadIdx.x) + 736) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 14) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 768))] = placeholder[((((((((((int)blockIdx.x) >> 5) * 24576) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 1179648))];
    PaddedInput_shared[((((int)threadIdx.x) + 800))] = placeholder[(((((((((((int)threadIdx.x) + 800) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 832))] = placeholder[((((((((((((int)threadIdx.x) + 832) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 4) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 864))] = placeholder[((((((((((((int)threadIdx.x) + 864) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 6) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 896))] = placeholder[((((((((((((int)threadIdx.x) + 896) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 8) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 928))] = placeholder[((((((((((((int)threadIdx.x) + 928) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 10) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 960))] = placeholder[((((((((((((int)threadIdx.x) + 960) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 12) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + ((((int)threadIdx.x) >> 4) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    PaddedInput_shared[((((int)threadIdx.x) + 992))] = placeholder[((((((((((((int)threadIdx.x) + 992) >> 8) * 393216) + ((((int)blockIdx.x) >> 5) * 24576)) + ((((((int)threadIdx.x) >> 4) + 14) >> 2) * 6144)) + (((((int)blockIdx.x) & 31) >> 1) * 384)) + (((((int)threadIdx.x) >> 4) + 2) * 96)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)))];
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)))];
    placeholder_shared[((((int)threadIdx.x) + 32))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 32))];
    placeholder_shared[((((int)threadIdx.x) + 64))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 128))];
    placeholder_shared[((((int)threadIdx.x) + 96))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 96) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 128))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 256))];
    placeholder_shared[((((int)threadIdx.x) + 160))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 160) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 192))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 384))];
    placeholder_shared[((((int)threadIdx.x) + 224))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 224) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 256))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 512))];
    placeholder_shared[((((int)threadIdx.x) + 288))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 288) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 320))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 640))];
    placeholder_shared[((((int)threadIdx.x) + 352))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 352) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 384))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 768))];
    placeholder_shared[((((int)threadIdx.x) + 416))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 416) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 448))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 896))];
    placeholder_shared[((((int)threadIdx.x) + 480))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 480) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 512))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1024))];
    placeholder_shared[((((int)threadIdx.x) + 544))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 544) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 576))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1152))];
    placeholder_shared[((((int)threadIdx.x) + 608))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 608) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 640))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1280))];
    placeholder_shared[((((int)threadIdx.x) + 672))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 672) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 704))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1408))];
    placeholder_shared[((((int)threadIdx.x) + 736))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 736) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 768))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1536))];
    placeholder_shared[((((int)threadIdx.x) + 800))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 800) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 832))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1664))];
    placeholder_shared[((((int)threadIdx.x) + 864))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 864) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 896))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1792))];
    placeholder_shared[((((int)threadIdx.x) + 928))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 928) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    placeholder_shared[((((int)threadIdx.x) + 960))] = placeholder1[(((((rc_outer_outer * 2048) + ((((int)blockIdx.x) & 1) * 64)) + ((int)threadIdx.x)) + 1920))];
    placeholder_shared[((((int)threadIdx.x) + 992))] = placeholder1[(((((rc_outer_outer * 2048) + (((((int)threadIdx.x) + 992) >> 6) * 128)) + ((((int)blockIdx.x) & 1) * 64)) + (((int)threadIdx.x) + 32)))];
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 16; ++rc_outer_inner) {
      Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[(((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 32))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 16))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 48))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 256))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 288))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(112)] = (Conv2dOutput[(112)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[(((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)))]));
      Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(113)] = (Conv2dOutput[(113)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 1))]));
      Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(114)] = (Conv2dOutput[(114)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 2))]));
      Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(115)] = (Conv2dOutput[(115)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 3))]));
      Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(116)] = (Conv2dOutput[(116)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 4))]));
      Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(117)] = (Conv2dOutput[(117)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 5))]));
      Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(118)] = (Conv2dOutput[(118)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 6))]));
      Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(119)] = (Conv2dOutput[(119)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 7))]));
      Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(120)] = (Conv2dOutput[(120)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 8))]));
      Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(121)] = (Conv2dOutput[(121)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 9))]));
      Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(122)] = (Conv2dOutput[(122)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 10))]));
      Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(123)] = (Conv2dOutput[(123)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 11))]));
      Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(124)] = (Conv2dOutput[(124)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 12))]));
      Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(125)] = (Conv2dOutput[(125)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 13))]));
      Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(126)] = (Conv2dOutput[(126)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 14))]));
      Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 272))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
      Conv2dOutput[(127)] = (Conv2dOutput[(127)] + (PaddedInput_shared[((((((((int)threadIdx.x) >> 4) * 512) + (((((int)threadIdx.x) & 15) >> 2) * 64)) + rc_outer_inner) + 304))] * placeholder_shared[((((rc_outer_inner * 64) + ((((int)threadIdx.x) & 3) * 16)) + 15))]));
    }
  }
  for (int ax0_inner = 0; ax0_inner < 2; ++ax0_inner) {
    for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
      for (int ax3_inner = 0; ax3_inner < 16; ++ax3_inner) {
        T_relu[(((((((((((((int)threadIdx.x) >> 4) * 1048576) + (ax0_inner * 524288)) + ((((int)blockIdx.x) >> 5) * 32768)) + (((((int)threadIdx.x) & 15) >> 2) * 8192)) + (((((int)blockIdx.x) & 31) >> 1) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 3) * 16)) + ax3_inner))] = max((Conv2dOutput[((((ax0_inner * 32) + (ax2_inner * 16)) + ax3_inner))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + ((((int)threadIdx.x) & 3) * 16)) + ax3_inner))]), 0.000000e+00f);
        T_relu[((((((((((((((int)threadIdx.x) >> 4) * 1048576) + (ax0_inner * 524288)) + ((((int)blockIdx.x) >> 5) * 32768)) + (((((int)threadIdx.x) & 15) >> 2) * 8192)) + (((((int)blockIdx.x) & 31) >> 1) * 512)) + (ax2_inner * 128)) + ((((int)blockIdx.x) & 1) * 64)) + ((((int)threadIdx.x) & 3) * 16)) + ax3_inner) + 256))] = max((Conv2dOutput[(((((ax0_inner * 32) + (ax2_inner * 16)) + ax3_inner) + 64))] + placeholder2[(((((((int)blockIdx.x) & 1) * 64) + ((((int)threadIdx.x) & 3) * 16)) + ax3_inner))]), 0.000000e+00f);
      }
    }
  }
}


