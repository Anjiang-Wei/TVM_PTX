
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2, float* __restrict__ placeholder3) {
  float Conv2dOutput[224];
  __shared__ float PaddedInput_shared[896];
  __shared__ float placeholder_shared[640];
  for (int yy_outer_inner_init = 0; yy_outer_inner_init < 7; ++yy_outer_inner_init) {
    Conv2dOutput[((yy_outer_inner_init * 8))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 56))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 112))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 168))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 1))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 57))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 113))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 169))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 2))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 58))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 114))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 170))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 3))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 59))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 115))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 171))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 4))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 60))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 116))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 172))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 5))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 61))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 117))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 173))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 6))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 62))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 118))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 174))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 7))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 63))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 119))] = 0.000000e+00f;
    Conv2dOutput[(((yy_outer_inner_init * 8) + 175))] = 0.000000e+00f;
  }
  for (int rc_outer_outer = 0; rc_outer_outer < 23; ++rc_outer_outer) {
    __syncthreads();
    PaddedInput_shared[((((int)threadIdx.x) * 4))] = placeholder[(((((((((int)threadIdx.x) >> 2) * 2576) + (((int)blockIdx.x) * 368)) + (((((int)threadIdx.x) & 3) >> 1) * 184)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 4) + 1))] = placeholder[(((((((((((int)threadIdx.x) * 4) + 1) >> 4) * 2576) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 4) + 2))] = placeholder[(((((((((((int)threadIdx.x) * 4) + 2) >> 4) * 2576) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    PaddedInput_shared[(((((int)threadIdx.x) * 4) + 3))] = placeholder[(((((((((((int)threadIdx.x) * 4) + 3) >> 4) * 2576) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 160) / 224) * 224) + ((((((int)threadIdx.x) >> 2) + 10) % 14) * 16)) + ((((int)threadIdx.x) & 3) * 4)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 160) / 224) * 36064) + ((((((int)threadIdx.x) >> 2) + 10) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((int)threadIdx.x) & 3) >> 1) * 184)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 161) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 1) >> 4) + 10) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 161) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 1) >> 4) + 10) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 162) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 2) >> 4) + 10) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 162) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 2) >> 4) + 10) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 163) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 3) >> 4) + 10) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 163) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 3) >> 4) + 10) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 320) / 224) * 224) + ((((((int)threadIdx.x) >> 2) + 6) % 14) * 16)) + ((((int)threadIdx.x) & 3) * 4)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 320) / 224) * 36064) + ((((((int)threadIdx.x) >> 2) + 6) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((int)threadIdx.x) & 3) >> 1) * 184)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 321) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 1) >> 4) + 6) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 321) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 1) >> 4) + 6) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 322) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 2) >> 4) + 6) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 322) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 2) >> 4) + 6) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 323) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 3) >> 4) + 6) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 323) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 3) >> 4) + 6) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 480) / 224) * 224) + (((((int)threadIdx.x) >> 2) + 2) * 16)) + ((((int)threadIdx.x) & 3) * 4)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 480) / 224) * 36064) + (((((int)threadIdx.x) >> 2) + 2) * 2576)) + (((int)blockIdx.x) * 368)) + (((((int)threadIdx.x) & 3) >> 1) * 184)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 481) / 224) * 224) + (((((((int)threadIdx.x) * 4) + 1) >> 4) + 2) * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 481) / 224) * 36064) + (((((((int)threadIdx.x) * 4) + 1) >> 4) + 2) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 482) / 224) * 224) + (((((((int)threadIdx.x) * 4) + 2) >> 4) + 2) * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 482) / 224) * 36064) + (((((((int)threadIdx.x) * 4) + 2) >> 4) + 2) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 483) / 224) * 224) + (((((((int)threadIdx.x) * 4) + 3) >> 4) + 2) * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 483) / 224) * 36064) + (((((((int)threadIdx.x) * 4) + 3) >> 4) + 2) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 640) / 224) * 224) + ((((((int)threadIdx.x) >> 2) + 12) % 14) * 16)) + ((((int)threadIdx.x) & 3) * 4)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 640) / 224) * 36064) + ((((((int)threadIdx.x) >> 2) + 12) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((int)threadIdx.x) & 3) >> 1) * 184)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 641) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 1) >> 4) + 12) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 641) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 1) >> 4) + 12) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 642) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 2) >> 4) + 12) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 642) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 2) >> 4) + 12) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 643) / 224) * 224) + ((((((((int)threadIdx.x) * 4) + 3) >> 4) + 12) % 14) * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 643) / 224) * 36064) + ((((((((int)threadIdx.x) * 4) + 3) >> 4) + 12) % 14) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    if (((int)threadIdx.x) < 24) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 800) / 224) * 224) + (((((int)threadIdx.x) >> 2) + 8) * 16)) + ((((int)threadIdx.x) & 3) * 4)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 800) / 224) * 36064) + (((((int)threadIdx.x) >> 2) + 8) * 2576)) + (((int)blockIdx.x) * 368)) + (((((int)threadIdx.x) & 3) >> 1) * 184)) + (rc_outer_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    }
    if (((int)threadIdx.x) < 24) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 801) / 224) * 224) + (((((((int)threadIdx.x) * 4) + 1) >> 4) + 8) * 16)) + (((((int)threadIdx.x) * 4) + 1) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 801) / 224) * 36064) + (((((((int)threadIdx.x) * 4) + 1) >> 4) + 8) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 1) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    }
    if (((int)threadIdx.x) < 24) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 802) / 224) * 224) + (((((((int)threadIdx.x) * 4) + 2) >> 4) + 8) * 16)) + (((((int)threadIdx.x) * 4) + 2) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 802) / 224) * 36064) + (((((((int)threadIdx.x) * 4) + 2) >> 4) + 8) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 2) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    }
    if (((int)threadIdx.x) < 24) {
      PaddedInput_shared[(((((((((int)threadIdx.x) * 4) + 803) / 224) * 224) + (((((((int)threadIdx.x) * 4) + 3) >> 4) + 8) * 16)) + (((((int)threadIdx.x) * 4) + 3) & 15)))] = placeholder[((((((((((((int)threadIdx.x) * 4) + 803) / 224) * 36064) + (((((((int)threadIdx.x) * 4) + 3) >> 4) + 8) * 2576)) + (((int)blockIdx.x) * 368)) + (((((((int)threadIdx.x) * 4) + 3) & 15) >> 3) * 184)) + (rc_outer_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    }
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((rc_outer_outer * 640) + ((int)threadIdx.x)))];
    placeholder_shared[((((int)threadIdx.x) + 40))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 40))];
    placeholder_shared[((((int)threadIdx.x) + 80))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 80))];
    placeholder_shared[((((int)threadIdx.x) + 120))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 120))];
    placeholder_shared[((((int)threadIdx.x) + 160))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 160))];
    placeholder_shared[((((int)threadIdx.x) + 200))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 200))];
    placeholder_shared[((((int)threadIdx.x) + 240))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 240))];
    placeholder_shared[((((int)threadIdx.x) + 280))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 280))];
    placeholder_shared[((((int)threadIdx.x) + 320))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 320))];
    placeholder_shared[((((int)threadIdx.x) + 360))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 360))];
    placeholder_shared[((((int)threadIdx.x) + 400))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 400))];
    placeholder_shared[((((int)threadIdx.x) + 440))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 440))];
    placeholder_shared[((((int)threadIdx.x) + 480))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 480))];
    placeholder_shared[((((int)threadIdx.x) + 520))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 520))];
    placeholder_shared[((((int)threadIdx.x) + 560))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 560))];
    placeholder_shared[((((int)threadIdx.x) + 600))] = placeholder1[((((rc_outer_outer * 640) + ((int)threadIdx.x)) + 600))];
    __syncthreads();
    for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
      for (int yy_outer_inner = 0; yy_outer_inner < 7; ++yy_outer_inner) {
        for (int xx_outer_inner = 0; xx_outer_inner < 2; ++xx_outer_inner) {
          Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] = (Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] + (PaddedInput_shared[((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)))] * placeholder_shared[(((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 112))] * placeholder_shared[(((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 448))] * placeholder_shared[(((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 560))] * placeholder_shared[(((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] + (PaddedInput_shared[((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 1))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 112))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 1))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 448))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 1))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 560))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 1))]));
          Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] = (Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 80))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 113))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 80))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 449))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 80))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 561))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 80))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 81))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 113))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 81))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 449))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 81))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 561))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 81))]));
          Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] = (Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 160))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 114))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 160))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 450))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 160))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 562))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 160))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 161))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 114))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 161))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 450))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 161))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 562))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 161))]));
          Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] = (Conv2dOutput[(((yy_outer_inner * 8) + (xx_outer_inner * 4)))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 240))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 56))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 115))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 240))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 112))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 451))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 240))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 168))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 563))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 240))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 1))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 241))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 57))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 115))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 241))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 113))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 451))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 241))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 169))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 563))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 241))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] + (PaddedInput_shared[((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 2))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 112))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 2))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 448))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 2))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 560))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 2))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] + (PaddedInput_shared[((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 3))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 112))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 3))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 448))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 3))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 560))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 3))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 82))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 113))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 82))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 449))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 82))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 561))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 82))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 1))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 83))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 113))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 83))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 449))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 83))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 561))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 83))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 162))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 114))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 162))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 450))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 162))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 562))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 162))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 2))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 163))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 114))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 163))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 450))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 163))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 562))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 163))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 2))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 242))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 58))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 115))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 242))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 114))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 451))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 242))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 170))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 563))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 242))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 3))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 3))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 243))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 59))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 115))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 243))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 115))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 451))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 243))]));
          Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] = (Conv2dOutput[((((yy_outer_inner * 8) + (xx_outer_inner * 4)) + 171))] + (PaddedInput_shared[(((((((((int)threadIdx.x) / 20) * 224) + (yy_outer_inner * 16)) + (xx_outer_inner * 8)) + (rc_outer_inner * 4)) + 563))] * placeholder_shared[((((rc_outer_inner * 320) + ((((int)threadIdx.x) % 20) * 4)) + 243))]));
        }
      }
    }
  }
  for (int ax1_inner = 0; ax1_inner < 7; ++ax1_inner) {
    for (int ax2_inner = 0; ax2_inner < 2; ++ax2_inner) {
      for (int ax3_inner = 0; ax3_inner < 4; ++ax3_inner) {
        T_add[((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner))] = ((Conv2dOutput[((((ax1_inner * 8) + (ax2_inner * 4)) + ax3_inner))] + placeholder2[((((((int)threadIdx.x) % 20) * 4) + ax3_inner))]) + placeholder3[((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner))]);
        T_add[(((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner) + 7840))] = ((Conv2dOutput[(((((ax1_inner * 8) + (ax2_inner * 4)) + ax3_inner) + 56))] + placeholder2[((((((int)threadIdx.x) % 20) * 4) + ax3_inner))]) + placeholder3[(((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner) + 7840))]);
        T_add[(((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner) + 31360))] = ((Conv2dOutput[(((((ax1_inner * 8) + (ax2_inner * 4)) + ax3_inner) + 112))] + placeholder2[((((((int)threadIdx.x) % 20) * 4) + ax3_inner))]) + placeholder3[(((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner) + 31360))]);
        T_add[(((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner) + 39200))] = ((Conv2dOutput[(((((ax1_inner * 8) + (ax2_inner * 4)) + ax3_inner) + 168))] + placeholder2[((((((int)threadIdx.x) % 20) * 4) + ax3_inner))]) + placeholder3[(((((((((((int)threadIdx.x) / 20) * 15680) + (ax1_inner * 1120)) + (((int)blockIdx.x) * 160)) + (ax2_inner * 80)) + ((((int)threadIdx.x) % 20) * 4)) + ax3_inner) + 39200))]);
      }
    }
  }
}


