
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float Conv2dOutput[112];
  __shared__ float PaddedInput_shared[392];
  __shared__ float placeholder_shared[64];
  Conv2dOutput[(0)] = 0.000000e+00f;
  Conv2dOutput[(28)] = 0.000000e+00f;
  Conv2dOutput[(56)] = 0.000000e+00f;
  Conv2dOutput[(84)] = 0.000000e+00f;
  Conv2dOutput[(1)] = 0.000000e+00f;
  Conv2dOutput[(29)] = 0.000000e+00f;
  Conv2dOutput[(57)] = 0.000000e+00f;
  Conv2dOutput[(85)] = 0.000000e+00f;
  Conv2dOutput[(2)] = 0.000000e+00f;
  Conv2dOutput[(30)] = 0.000000e+00f;
  Conv2dOutput[(58)] = 0.000000e+00f;
  Conv2dOutput[(86)] = 0.000000e+00f;
  Conv2dOutput[(3)] = 0.000000e+00f;
  Conv2dOutput[(31)] = 0.000000e+00f;
  Conv2dOutput[(59)] = 0.000000e+00f;
  Conv2dOutput[(87)] = 0.000000e+00f;
  Conv2dOutput[(4)] = 0.000000e+00f;
  Conv2dOutput[(32)] = 0.000000e+00f;
  Conv2dOutput[(60)] = 0.000000e+00f;
  Conv2dOutput[(88)] = 0.000000e+00f;
  Conv2dOutput[(5)] = 0.000000e+00f;
  Conv2dOutput[(33)] = 0.000000e+00f;
  Conv2dOutput[(61)] = 0.000000e+00f;
  Conv2dOutput[(89)] = 0.000000e+00f;
  Conv2dOutput[(6)] = 0.000000e+00f;
  Conv2dOutput[(34)] = 0.000000e+00f;
  Conv2dOutput[(62)] = 0.000000e+00f;
  Conv2dOutput[(90)] = 0.000000e+00f;
  Conv2dOutput[(7)] = 0.000000e+00f;
  Conv2dOutput[(35)] = 0.000000e+00f;
  Conv2dOutput[(63)] = 0.000000e+00f;
  Conv2dOutput[(91)] = 0.000000e+00f;
  Conv2dOutput[(8)] = 0.000000e+00f;
  Conv2dOutput[(36)] = 0.000000e+00f;
  Conv2dOutput[(64)] = 0.000000e+00f;
  Conv2dOutput[(92)] = 0.000000e+00f;
  Conv2dOutput[(9)] = 0.000000e+00f;
  Conv2dOutput[(37)] = 0.000000e+00f;
  Conv2dOutput[(65)] = 0.000000e+00f;
  Conv2dOutput[(93)] = 0.000000e+00f;
  Conv2dOutput[(10)] = 0.000000e+00f;
  Conv2dOutput[(38)] = 0.000000e+00f;
  Conv2dOutput[(66)] = 0.000000e+00f;
  Conv2dOutput[(94)] = 0.000000e+00f;
  Conv2dOutput[(11)] = 0.000000e+00f;
  Conv2dOutput[(39)] = 0.000000e+00f;
  Conv2dOutput[(67)] = 0.000000e+00f;
  Conv2dOutput[(95)] = 0.000000e+00f;
  Conv2dOutput[(12)] = 0.000000e+00f;
  Conv2dOutput[(40)] = 0.000000e+00f;
  Conv2dOutput[(68)] = 0.000000e+00f;
  Conv2dOutput[(96)] = 0.000000e+00f;
  Conv2dOutput[(13)] = 0.000000e+00f;
  Conv2dOutput[(41)] = 0.000000e+00f;
  Conv2dOutput[(69)] = 0.000000e+00f;
  Conv2dOutput[(97)] = 0.000000e+00f;
  Conv2dOutput[(14)] = 0.000000e+00f;
  Conv2dOutput[(42)] = 0.000000e+00f;
  Conv2dOutput[(70)] = 0.000000e+00f;
  Conv2dOutput[(98)] = 0.000000e+00f;
  Conv2dOutput[(15)] = 0.000000e+00f;
  Conv2dOutput[(43)] = 0.000000e+00f;
  Conv2dOutput[(71)] = 0.000000e+00f;
  Conv2dOutput[(99)] = 0.000000e+00f;
  Conv2dOutput[(16)] = 0.000000e+00f;
  Conv2dOutput[(44)] = 0.000000e+00f;
  Conv2dOutput[(72)] = 0.000000e+00f;
  Conv2dOutput[(100)] = 0.000000e+00f;
  Conv2dOutput[(17)] = 0.000000e+00f;
  Conv2dOutput[(45)] = 0.000000e+00f;
  Conv2dOutput[(73)] = 0.000000e+00f;
  Conv2dOutput[(101)] = 0.000000e+00f;
  Conv2dOutput[(18)] = 0.000000e+00f;
  Conv2dOutput[(46)] = 0.000000e+00f;
  Conv2dOutput[(74)] = 0.000000e+00f;
  Conv2dOutput[(102)] = 0.000000e+00f;
  Conv2dOutput[(19)] = 0.000000e+00f;
  Conv2dOutput[(47)] = 0.000000e+00f;
  Conv2dOutput[(75)] = 0.000000e+00f;
  Conv2dOutput[(103)] = 0.000000e+00f;
  Conv2dOutput[(20)] = 0.000000e+00f;
  Conv2dOutput[(48)] = 0.000000e+00f;
  Conv2dOutput[(76)] = 0.000000e+00f;
  Conv2dOutput[(104)] = 0.000000e+00f;
  Conv2dOutput[(21)] = 0.000000e+00f;
  Conv2dOutput[(49)] = 0.000000e+00f;
  Conv2dOutput[(77)] = 0.000000e+00f;
  Conv2dOutput[(105)] = 0.000000e+00f;
  Conv2dOutput[(22)] = 0.000000e+00f;
  Conv2dOutput[(50)] = 0.000000e+00f;
  Conv2dOutput[(78)] = 0.000000e+00f;
  Conv2dOutput[(106)] = 0.000000e+00f;
  Conv2dOutput[(23)] = 0.000000e+00f;
  Conv2dOutput[(51)] = 0.000000e+00f;
  Conv2dOutput[(79)] = 0.000000e+00f;
  Conv2dOutput[(107)] = 0.000000e+00f;
  Conv2dOutput[(24)] = 0.000000e+00f;
  Conv2dOutput[(52)] = 0.000000e+00f;
  Conv2dOutput[(80)] = 0.000000e+00f;
  Conv2dOutput[(108)] = 0.000000e+00f;
  Conv2dOutput[(25)] = 0.000000e+00f;
  Conv2dOutput[(53)] = 0.000000e+00f;
  Conv2dOutput[(81)] = 0.000000e+00f;
  Conv2dOutput[(109)] = 0.000000e+00f;
  Conv2dOutput[(26)] = 0.000000e+00f;
  Conv2dOutput[(54)] = 0.000000e+00f;
  Conv2dOutput[(82)] = 0.000000e+00f;
  Conv2dOutput[(110)] = 0.000000e+00f;
  Conv2dOutput[(27)] = 0.000000e+00f;
  Conv2dOutput[(55)] = 0.000000e+00f;
  Conv2dOutput[(83)] = 0.000000e+00f;
  Conv2dOutput[(111)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 304; ++rc_outer_outer) {
    __syncthreads();
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[((((int)threadIdx.x) * 8))] = placeholder[(((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 1))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 1))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 2))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 608))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 3))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 609))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 4))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 1216))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 5))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 1217))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 6))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 1824))];
    }
    if (((int)threadIdx.x) < 49) {
      PaddedInput_shared[(((((int)threadIdx.x) * 8) + 7))] = placeholder[((((((int)threadIdx.x) * 2432) + (rc_outer_outer * 2)) + 1825))];
    }
    placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((((rc_outer_outer * 256) + ((((int)threadIdx.x) >> 5) * 128)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) & 31)))];
    if (((int)threadIdx.x) < 8) {
      placeholder_shared[((((int)threadIdx.x) + 56))] = placeholder1[(((((rc_outer_outer * 256) + (((((int)threadIdx.x) + 56) >> 5) * 128)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) + 24)))];
    }
    __syncthreads();
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 3) * 56))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 3) * 56))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 3) * 56))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[(((((int)threadIdx.x) >> 3) * 56))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 2))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 2))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 4))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 4))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 6))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 6))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 8))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 8))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 10))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 10))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 12))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 12))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 14))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 14))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 16))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 16))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 16))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 16))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 18))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 18))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 18))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 18))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 20))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 20))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 20))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 20))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 22))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 22))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 22))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 22))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 24))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 24))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 24))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 24))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 26))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 26))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 26))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 26))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 28))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 28))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 28))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 28))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 30))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 30))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 30))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 30))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 32))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 32))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 32))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 32))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 34))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 34))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 34))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 34))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 36))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 36))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 36))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 36))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 38))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 38))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 38))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 38))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 40))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 40))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 40))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 40))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 42))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 42))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 42))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 42))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 44))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 44))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 44))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 44))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 46))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 46))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 46))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 46))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 48))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 48))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 48))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 48))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 50))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 50))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 50))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 50))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 52))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 52))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 52))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 52))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 54))] * placeholder_shared[((((int)threadIdx.x) & 7))]));
    Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 54))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 8))]));
    Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 54))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 16))]));
    Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 54))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 24))]));
    Conv2dOutput[(0)] = (Conv2dOutput[(0)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(28)] = (Conv2dOutput[(28)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(56)] = (Conv2dOutput[(56)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(84)] = (Conv2dOutput[(84)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 1))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(1)] = (Conv2dOutput[(1)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(29)] = (Conv2dOutput[(29)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(57)] = (Conv2dOutput[(57)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(85)] = (Conv2dOutput[(85)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 3))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(2)] = (Conv2dOutput[(2)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(30)] = (Conv2dOutput[(30)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(58)] = (Conv2dOutput[(58)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(86)] = (Conv2dOutput[(86)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 5))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(3)] = (Conv2dOutput[(3)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(31)] = (Conv2dOutput[(31)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(59)] = (Conv2dOutput[(59)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(87)] = (Conv2dOutput[(87)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 7))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(4)] = (Conv2dOutput[(4)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(32)] = (Conv2dOutput[(32)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(60)] = (Conv2dOutput[(60)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(88)] = (Conv2dOutput[(88)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 9))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(5)] = (Conv2dOutput[(5)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(33)] = (Conv2dOutput[(33)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(61)] = (Conv2dOutput[(61)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(89)] = (Conv2dOutput[(89)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 11))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(6)] = (Conv2dOutput[(6)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(34)] = (Conv2dOutput[(34)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(62)] = (Conv2dOutput[(62)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(90)] = (Conv2dOutput[(90)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 13))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(7)] = (Conv2dOutput[(7)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(35)] = (Conv2dOutput[(35)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(63)] = (Conv2dOutput[(63)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(91)] = (Conv2dOutput[(91)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 15))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(8)] = (Conv2dOutput[(8)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 17))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(36)] = (Conv2dOutput[(36)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 17))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(64)] = (Conv2dOutput[(64)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 17))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(92)] = (Conv2dOutput[(92)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 17))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(9)] = (Conv2dOutput[(9)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 19))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(37)] = (Conv2dOutput[(37)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 19))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(65)] = (Conv2dOutput[(65)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 19))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(93)] = (Conv2dOutput[(93)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 19))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(10)] = (Conv2dOutput[(10)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 21))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(38)] = (Conv2dOutput[(38)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 21))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(66)] = (Conv2dOutput[(66)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 21))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(94)] = (Conv2dOutput[(94)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 21))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(11)] = (Conv2dOutput[(11)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 23))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(39)] = (Conv2dOutput[(39)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 23))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(67)] = (Conv2dOutput[(67)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 23))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(95)] = (Conv2dOutput[(95)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 23))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(12)] = (Conv2dOutput[(12)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 25))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(40)] = (Conv2dOutput[(40)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 25))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(68)] = (Conv2dOutput[(68)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 25))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(96)] = (Conv2dOutput[(96)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 25))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(13)] = (Conv2dOutput[(13)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 27))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(41)] = (Conv2dOutput[(41)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 27))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(69)] = (Conv2dOutput[(69)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 27))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(97)] = (Conv2dOutput[(97)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 27))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(14)] = (Conv2dOutput[(14)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 29))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(42)] = (Conv2dOutput[(42)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 29))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(70)] = (Conv2dOutput[(70)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 29))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(98)] = (Conv2dOutput[(98)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 29))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(15)] = (Conv2dOutput[(15)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 31))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(43)] = (Conv2dOutput[(43)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 31))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(71)] = (Conv2dOutput[(71)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 31))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(99)] = (Conv2dOutput[(99)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 31))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(16)] = (Conv2dOutput[(16)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 33))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(44)] = (Conv2dOutput[(44)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 33))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(72)] = (Conv2dOutput[(72)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 33))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(100)] = (Conv2dOutput[(100)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 33))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(17)] = (Conv2dOutput[(17)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 35))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(45)] = (Conv2dOutput[(45)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 35))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(73)] = (Conv2dOutput[(73)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 35))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(101)] = (Conv2dOutput[(101)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 35))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(18)] = (Conv2dOutput[(18)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 37))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(46)] = (Conv2dOutput[(46)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 37))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(74)] = (Conv2dOutput[(74)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 37))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(102)] = (Conv2dOutput[(102)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 37))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(19)] = (Conv2dOutput[(19)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 39))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(47)] = (Conv2dOutput[(47)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 39))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(75)] = (Conv2dOutput[(75)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 39))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(103)] = (Conv2dOutput[(103)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 39))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(20)] = (Conv2dOutput[(20)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 41))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(48)] = (Conv2dOutput[(48)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 41))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(76)] = (Conv2dOutput[(76)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 41))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(104)] = (Conv2dOutput[(104)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 41))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(21)] = (Conv2dOutput[(21)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 43))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(49)] = (Conv2dOutput[(49)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 43))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(77)] = (Conv2dOutput[(77)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 43))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(105)] = (Conv2dOutput[(105)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 43))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(22)] = (Conv2dOutput[(22)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 45))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(50)] = (Conv2dOutput[(50)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 45))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(78)] = (Conv2dOutput[(78)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 45))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(106)] = (Conv2dOutput[(106)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 45))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(23)] = (Conv2dOutput[(23)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 47))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(51)] = (Conv2dOutput[(51)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 47))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(79)] = (Conv2dOutput[(79)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 47))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(107)] = (Conv2dOutput[(107)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 47))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(24)] = (Conv2dOutput[(24)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 49))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(52)] = (Conv2dOutput[(52)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 49))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(80)] = (Conv2dOutput[(80)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 49))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(108)] = (Conv2dOutput[(108)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 49))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(25)] = (Conv2dOutput[(25)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 51))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(53)] = (Conv2dOutput[(53)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 51))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(81)] = (Conv2dOutput[(81)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 51))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(109)] = (Conv2dOutput[(109)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 51))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(26)] = (Conv2dOutput[(26)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 53))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(54)] = (Conv2dOutput[(54)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 53))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(82)] = (Conv2dOutput[(82)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 53))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(110)] = (Conv2dOutput[(110)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 53))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
    Conv2dOutput[(27)] = (Conv2dOutput[(27)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 55))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 32))]));
    Conv2dOutput[(55)] = (Conv2dOutput[(55)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 55))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 40))]));
    Conv2dOutput[(83)] = (Conv2dOutput[(83)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 55))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 48))]));
    Conv2dOutput[(111)] = (Conv2dOutput[(111)] + (PaddedInput_shared[((((((int)threadIdx.x) >> 3) * 56) + 55))] * placeholder_shared[(((((int)threadIdx.x) & 7) + 56))]));
  }
  for (int ax1_inner = 0; ax1_inner < 2; ++ax1_inner) {
    for (int ax2_inner = 0; ax2_inner < 14; ++ax2_inner) {
      T_relu[(((((((((int)threadIdx.x) >> 3) * 3584) + (ax1_inner * 1792)) + (ax2_inner * 128)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) & 7)))] = max((Conv2dOutput[(((ax1_inner * 14) + ax2_inner))] + placeholder2[(((((int)blockIdx.x) * 32) + (((int)threadIdx.x) & 7)))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.x) >> 3) * 3584) + (ax1_inner * 1792)) + (ax2_inner * 128)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) & 7)) + 8))] = max((Conv2dOutput[((((ax1_inner * 14) + ax2_inner) + 28))] + placeholder2[((((((int)blockIdx.x) * 32) + (((int)threadIdx.x) & 7)) + 8))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.x) >> 3) * 3584) + (ax1_inner * 1792)) + (ax2_inner * 128)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) & 7)) + 16))] = max((Conv2dOutput[((((ax1_inner * 14) + ax2_inner) + 56))] + placeholder2[((((((int)blockIdx.x) * 32) + (((int)threadIdx.x) & 7)) + 16))]), 0.000000e+00f);
      T_relu[((((((((((int)threadIdx.x) >> 3) * 3584) + (ax1_inner * 1792)) + (ax2_inner * 128)) + (((int)blockIdx.x) * 32)) + (((int)threadIdx.x) & 7)) + 24))] = max((Conv2dOutput[((((ax1_inner * 14) + ax2_inner) + 84))] + placeholder2[((((((int)blockIdx.x) * 32) + (((int)threadIdx.x) & 7)) + 24))]), 0.000000e+00f);
    }
  }
}


