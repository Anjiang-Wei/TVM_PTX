
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void my_kernel_kernel1(float* __restrict__ T_multiply, float* __restrict__ DepthwiseConv2d, float* __restrict__ placeholder) {
  T_multiply[(((((int)blockIdx.x) * 64) + ((int)threadIdx.x)))] = ((DepthwiseConv2d[(((((int)blockIdx.x) * 64) + ((int)threadIdx.x)))] + placeholder[((((((int)blockIdx.x) * 64) + ((int)threadIdx.x)) % 184))]) * (max(min(((DepthwiseConv2d[(((((int)blockIdx.x) * 64) + ((int)threadIdx.x)))] + placeholder[((((((int)blockIdx.x) * 64) + ((int)threadIdx.x)) % 184))]) + 3.000000e+00f), 6.000000e+00f), 0.000000e+00f) * 1.666667e-01f));
}

extern "C" __global__ void my_kernel_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ DepthwiseConv2d) {
  float DepthwiseConv2d_local[32];
  __shared__ float PaddedInput_shared[8832];
  __shared__ float placeholder_shared[828];
  DepthwiseConv2d_local[(0)] = 0.000000e+00f;
  DepthwiseConv2d_local[(16)] = 0.000000e+00f;
  DepthwiseConv2d_local[(1)] = 0.000000e+00f;
  DepthwiseConv2d_local[(17)] = 0.000000e+00f;
  DepthwiseConv2d_local[(2)] = 0.000000e+00f;
  DepthwiseConv2d_local[(18)] = 0.000000e+00f;
  DepthwiseConv2d_local[(3)] = 0.000000e+00f;
  DepthwiseConv2d_local[(19)] = 0.000000e+00f;
  DepthwiseConv2d_local[(4)] = 0.000000e+00f;
  DepthwiseConv2d_local[(20)] = 0.000000e+00f;
  DepthwiseConv2d_local[(5)] = 0.000000e+00f;
  DepthwiseConv2d_local[(21)] = 0.000000e+00f;
  DepthwiseConv2d_local[(6)] = 0.000000e+00f;
  DepthwiseConv2d_local[(22)] = 0.000000e+00f;
  DepthwiseConv2d_local[(7)] = 0.000000e+00f;
  DepthwiseConv2d_local[(23)] = 0.000000e+00f;
  DepthwiseConv2d_local[(8)] = 0.000000e+00f;
  DepthwiseConv2d_local[(24)] = 0.000000e+00f;
  DepthwiseConv2d_local[(9)] = 0.000000e+00f;
  DepthwiseConv2d_local[(25)] = 0.000000e+00f;
  DepthwiseConv2d_local[(10)] = 0.000000e+00f;
  DepthwiseConv2d_local[(26)] = 0.000000e+00f;
  DepthwiseConv2d_local[(11)] = 0.000000e+00f;
  DepthwiseConv2d_local[(27)] = 0.000000e+00f;
  DepthwiseConv2d_local[(12)] = 0.000000e+00f;
  DepthwiseConv2d_local[(28)] = 0.000000e+00f;
  DepthwiseConv2d_local[(13)] = 0.000000e+00f;
  DepthwiseConv2d_local[(29)] = 0.000000e+00f;
  DepthwiseConv2d_local[(14)] = 0.000000e+00f;
  DepthwiseConv2d_local[(30)] = 0.000000e+00f;
  DepthwiseConv2d_local[(15)] = 0.000000e+00f;
  DepthwiseConv2d_local[(31)] = 0.000000e+00f;
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer < 24; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer) {
    PaddedInput_shared[(((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((((int)threadIdx.x) * 8) / 92)) % 3) * 92)) + ((((int)threadIdx.x) * 8) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((((int)threadIdx.x) * 8) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((((int)threadIdx.x) * 8) / 92)) % 3)) < 15)) ? placeholder[(((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + ((((int)threadIdx.x) * 8) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + ((((int)threadIdx.x) * 8) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 1) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 1) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 1) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 1) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 1) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 1) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 1) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 1) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 1) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 1) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 1) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 2) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 2) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 2) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 2) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 2) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 2) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 2) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 2) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 2) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 2) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 2) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 3) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 3) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 3) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 3) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 3) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 3) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 3) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 3) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 3) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 3) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 3) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 4) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 4) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 4) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 4) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 4) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 4) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 4) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 4) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 4) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 4) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 4) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 5) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 5) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 5) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 5) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 5) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 5) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 5) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 5) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 5) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 5) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 5) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 6) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 6) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 6) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 6) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 6) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 6) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 6) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 6) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 6) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 6) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 6) % 92)) - 2760))] : 0.000000e+00f);
    PaddedInput_shared[((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 7) / 276) * 276) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 7) / 92)) % 3) * 92)) + (((((int)threadIdx.x) * 8) + 7) % 92)))] = (((((1 <= (((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 7) % 1104) / 276))) && ((((((int)blockIdx.x) / 28) * 2) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 7) % 1104) / 276)) < 15)) && (1 <= (((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 7) / 92)) % 3)))) && ((((((int)blockIdx.x) % 28) >> 1) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 7) / 92)) % 3)) < 15)) ? placeholder[((((((((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 7) / 1104) * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 368) + (((int)threadIdx.x) * 8)) + 7) % 1104) / 276) * 2576)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer * 4) + (((((int)threadIdx.x) * 8) + 7) / 92)) % 3) * 184)) + ((((int)blockIdx.x) % 28) * 92)) + (((((int)threadIdx.x) * 8) + 7) % 92)) - 2760))] : 0.000000e+00f);
  }
  placeholder_shared[(((int)threadIdx.x))] = placeholder1[((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)))];
  placeholder_shared[((((int)threadIdx.x) + 46))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 46))];
  placeholder_shared[((((int)threadIdx.x) + 92))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 184))];
  placeholder_shared[((((int)threadIdx.x) + 138))] = placeholder1[((((((((int)threadIdx.x) + 138) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 184))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 368))];
  placeholder_shared[((((int)threadIdx.x) + 230))] = placeholder1[((((((((int)threadIdx.x) + 230) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 276))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 552))];
  placeholder_shared[((((int)threadIdx.x) + 322))] = placeholder1[((((((((int)threadIdx.x) + 322) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 368))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 736))];
  placeholder_shared[((((int)threadIdx.x) + 414))] = placeholder1[((((((((int)threadIdx.x) + 414) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 460))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 920))];
  placeholder_shared[((((int)threadIdx.x) + 506))] = placeholder1[((((((((int)threadIdx.x) + 506) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 552))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 1104))];
  placeholder_shared[((((int)threadIdx.x) + 598))] = placeholder1[((((((((int)threadIdx.x) + 598) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 644))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 1288))];
  placeholder_shared[((((int)threadIdx.x) + 690))] = placeholder1[((((((((int)threadIdx.x) + 690) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  placeholder_shared[((((int)threadIdx.x) + 736))] = placeholder1[(((((((int)blockIdx.x) & 1) * 92) + ((int)threadIdx.x)) + 1472))];
  placeholder_shared[((((int)threadIdx.x) + 782))] = placeholder1[((((((((int)threadIdx.x) + 782) / 92) * 184) + ((((int)blockIdx.x) & 1) * 92)) + (((int)threadIdx.x) + 46)))];
  __syncthreads();
  for (int dj_outer_inner = 0; dj_outer_inner < 3; ++dj_outer_inner) {
    for (int b_c_outer_inner = 0; b_c_outer_inner < 2; ++b_c_outer_inner) {
      DepthwiseConv2d_local[((b_c_outer_inner * 8))] = (DepthwiseConv2d_local[((b_c_outer_inner * 8))] + (PaddedInput_shared[((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 16))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 16))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 276))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 1))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 1))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 17))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 17))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 277))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 2))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 2))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1104))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 18))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 18))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1380))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 3))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 3))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1105))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 19))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 19))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1381))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 4))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 4))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2208))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 20))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 20))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2484))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 5))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 5))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2209))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 21))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 21))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2485))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 6))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 6))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3312))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 22))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 22))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3588))] * placeholder_shared[(((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 7))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 7))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3313))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 23))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 23))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3589))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 1))]));
      DepthwiseConv2d_local[((b_c_outer_inner * 8))] = (DepthwiseConv2d_local[((b_c_outer_inner * 8))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 276))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 16))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 16))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 552))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 1))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 1))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 277))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 17))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 17))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 553))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 2))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 2))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1380))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 18))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 18))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1656))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 3))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 3))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1381))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 19))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 19))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1657))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 4))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 4))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2484))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 20))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 20))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2760))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 5))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 5))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2485))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 21))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 21))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2761))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 6))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 6))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3588))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 22))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 22))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3864))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 276))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 7))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 7))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3589))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 23))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 23))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3865))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 277))]));
      DepthwiseConv2d_local[((b_c_outer_inner * 8))] = (DepthwiseConv2d_local[((b_c_outer_inner * 8))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 552))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 16))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 16))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 828))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 1))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 1))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 553))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 17))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 17))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 829))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 2))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 2))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1656))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 18))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 18))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1932))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 3))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 3))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1657))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 19))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 19))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 1933))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 4))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 4))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2760))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 20))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 20))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3036))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 5))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 5))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 2761))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 21))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 21))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3037))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 6))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 6))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3864))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 22))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 22))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 4140))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 552))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 7))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 7))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 3865))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
      DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 23))] = (DepthwiseConv2d_local[(((b_c_outer_inner * 8) + 23))] + (PaddedInput_shared[(((((b_c_outer_inner * 4416) + (dj_outer_inner * 92)) + (((int)threadIdx.x) * 2)) + 4141))] * placeholder_shared[((((dj_outer_inner * 92) + (((int)threadIdx.x) * 2)) + 553))]));
    }
  }
  for (int b_inner = 0; b_inner < 8; ++b_inner) {
    for (int c_inner = 0; c_inner < 2; ++c_inner) {
      DepthwiseConv2d[((((((b_inner * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((int)blockIdx.x) % 28) * 92)) + (((int)threadIdx.x) * 2)) + c_inner))] = DepthwiseConv2d_local[(((b_inner * 2) + c_inner))];
      DepthwiseConv2d[(((((((b_inner * 36064) + ((((int)blockIdx.x) / 28) * 5152)) + ((((int)blockIdx.x) % 28) * 92)) + (((int)threadIdx.x) * 2)) + c_inner) + 2576))] = DepthwiseConv2d_local[((((b_inner * 2) + c_inner) + 16))];
    }
  }
}


